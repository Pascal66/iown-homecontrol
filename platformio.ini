; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;
; Show computed configuration: CTRL+SHIFT+P > PlatformIO: New Terminal
; > pio project config

[platformio]
name = iown-homecontrol
description = io-homecontrol for LoRa32/ESP32
default_envs = ht_lora32v2

; DIRECTORIES
;  workspace_dir = .vscode/.pio         ;The path to a project workspace directory where PlatformIO keeps by default compiled objects, static libraries, firmwares, and external library dependencies.
;      build_dir = workspace_dir/build  ;PlatformIO Build System uses this folder for project environments to store compiled object files, static libraries, firmwares and other cached information.
;    libdeps_dir = .vscode/.pio/libdeps ;project dependency storage used by Library Management
;build_cache_dir = .vscode/.pio/build_cache
;    include_dir = include        ;Project’s default header files.
;        lib_dir = include        ;Custom .h's - HIGHEST PRIO. You can put your own/private libraries here.
;        src_dir = src            ;The path to the project’s directory with source code.
; lib_extra_dirs =                ;extra storages per build environment
;TODO use ./data,./extras or put it under one of the two names in ./docs/?
;       data_dir = extras/data    ;Data directory to store contents and Using Filesystem.
;     boards_dir = docs/boards    ;The location of project-specific board definitions.
;    monitor_dir = extras/monitor ;The directory where pio device monitor will look for the Custom Filters.
;     shared_dir = extras/shared  ;Remote Development uses this folder to synchronize extra files between remote machine.
;       test_dir = extras/test    ;The directory where Unit Testing engine will look for the tests.
;  extra_configs = extras/extra_*.ini

[env]
framework = arduino
platform = espressif32
; platform_packages = platformio/framework-espidf
; platform_packages = platformio/framework-arduinoespressif32
board_build.filesystem = littlefs


targets =	upload,	monitor
monitor_filters =
  default                 ; Remove typical terminal control codes from input
  time                    ; Add timestamp with milliseconds for each new line
  colorize                ; Apply different colors for received and echo
  send_on_enter           ; Send a text to device on ENTER
  esp32_exception_decoder ; Crash exception decoder
monitor_speed = 115200
monitor_echo = yes
monitor_eol = LF
upload_protocol = esptool
upload_speed = 921600


; check_severity = high
check_skip_packages = yes
check_tool = cppcheck, clangtidy
check_flags =	--common-flag
  cppcheck: --enable=style --std=c++11
  clangtidy: -format-style=google ; -fix-errors


build_unflags = -std=gnu++11 -Os
build_flags = -std=gnu++2a -O2


; lib_ldf_mode = chain+
lib_deps = https://github.com/jgromes/RadioLib.git



[debug]
build_type = debug
; Set optimization level and amount of debug info generated by the compiler
debug_build_flags = -O0 -ggdb3 -g3
; monitor_filters = ${env.monitor_filters} debug ; Print what is sent and received



[env:arduino]
framework = arduino
platform_packages = platformio/framework-arduinoespressif32
[env:idf]
framework = espidf
platform_packages = platformio/framework-espidf



[env:ht_lora32v2]
board = heltec_wifi_lora_32_V2
