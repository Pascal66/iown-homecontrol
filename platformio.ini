; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;
; lib_deps = Project Dependencies
; lib = Custom .h's - HIGHEST PRIO
; include = Project .h's
; lib_extra_dirs - extra storages per build environment
; lib_dir - own/private library storage per project
; libdeps_dir - project dependency storage used by Library Management
;
; ESP32 Wiki: Reserved GPIO’S (http://desire.giesecke.tk/reserved-gpios.html) cannot be used freely, as they are already assigned to module peripherals or have special functions during booting:
; GPIO00 bootstrapping pin (low to enter UART). Make sure it is not pulled low during boot or the firmware will not start!
; GPIO02 bootstrapping pin (low to enter UART). Make sure it is not pulled high during boot or you will not be able to flash a firmware to the module!
; GPIO12 bootstrapping pin to select output voltage of an internal regulator which powers the flash chip (VDD_SDIO). Has internal pulldown and reads low at reset if unconnected. Make sure is not pulled high during boot or module might not start!
; GPIO15 Debug output on Serial during boot. Pulled low = No output. Helpful to reduce power consumption when no Serial port is needed.
; GPIO06-11 Assigned to Flash. Cannot be used at all!
; GPIO34-39 Input only. No software pullup/pulldown
; GPIO37-38 Not available on most modules.
; ESP32-PICO-D4: GPIO16-17 Internal Flash
; ESP32-WROVER:  GPIO16-17 PSRAM
;
; https://github.com/espressif/arduino-esp32/blob/master/boards.txt#L773
; DebugLevel None    = 0
; DebugLevel Error   = 1
; DebugLevel Warn    = 2
; DebugLevel Info    = 3
; DebugLevel Debug   = 4
; DebugLevel Verbose = 5

[platformio]
name = iown-homecontrol
description = io-homecontrol for LoRa32 (ESP32) devices
;default_envs = esp32_ht_lora32v2

; DIRECTORIES
  workspace_dir = .vscode/.pio   ;The path to a project workspace directory where PlatformIO keeps by default compiled objects, static libraries, firmwares, and external library dependencies.
     ;build_dir = workspace_dir/build   ;PlatformIO Build System uses this folder for project environments to store compiled object files, static libraries, firmwares and other cached information.
    libdeps_dir = .vscode/.pio/libdeps ;Internal storage. project dependencies.
build_cache_dir = .vscode/.pio/build_cache
;include_dir    = include        ;The path to project’s default header files.
lib_dir         = include        ;You can put your own/private libraries here.
;src_dir        = src            ;The path to the project’s directory with source code.
;TODO use ./data,./extras or put it under one of the two names in ./docs/?
       data_dir = extras/data    ;Data directory to store contents and Using Filesystem.
     boards_dir = docs/boards  ;The location of project-specific board definitions.
    monitor_dir = extras/monitor ;The directory where pio device monitor will look for the Custom Filters.
     shared_dir = extras/shared  ;Remote Development uses this folder to synchronize extra files between remote machine.
       test_dir = extras/test    ;The directory where Unit Testing engine will look for the tests.
 ;extra_configs = extras/extra_*.ini

[env]
platform = espressif32
board = esp32dev
build_type = release
build_flags =
  -DRELEASE
  -DVERSION=0.3.4
  -DIOWN_LOG_LEVEL=IOWN_LOG_VERY_VERBOSE
  -DCORE_DEBUG_LEVEL=Verbose
  -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ; clangd.llvm.org/installation#project-setup
  #-DARDUINO_RUNNING_CORE/-DUSE_ESP32                       ; desire.giesecke.tk/enable-log-levels-in-platformio.html
  ;CONFIG_ARDUINO_VARIANT="esp32"
platform_packages =                 ; https://docs.platformio.org/en/stable/platforms/espressif32.html#id9
  tool-cmake
  toolchain-xtensa-esp32
  toolchain-esp32ulp
  tool-esptoolpy
  tool-mkspiffs
  tool-mklittlefs
  lib_ldf_mode = chain+             ; TODO http://desire.giesecke.tk/change-partition-size-platformio.html
lib_deps = https://github.com/jgromes/RadioLib.git
targets =
	upload
	monitor
monitor_speed = 115200
monitor_echo = yes
monitor_eol = LF
monitor_filters =
	default
  time
	colorize
	send_on_enter
	esp32_exception_decoder
build_src_filter =
	+<./>
	+<../tests/dummy_main.cpp>
	+<../.temp/all-include.cpp>
check_tool = cppcheck, clangtidy
check_severity = high
check_skip_packages = yes
check_flags =
	--common-flag
	cppcheck: --enable=performance --inline-suppr
	clangtidy: -fix-errors -format-style=mozilla

[env:debug]
build_type = debug
monitor_filters =
  ${env.monitor_filters}
  debug
  hexlify
  log2file
debug_build_flags = -O0 -ggdb3 -g3
build_flags =
  ${env.build_flags}
  -DDEBUG=1
  -DRELEASE=0

[env:arduino]
framework = arduino
platform_packages =
  {$env.platform_packages}
  framework-arduinoespressif32
build_flags =
  ${env.build_flags}
  ${flags:runtime.build_flags}
  -DUSE_ARDUINO
  -DUSE_ESP32_FRAMEWORK_ARDUINO
board_build.esp-idf.sdkconfig_path = .vscode/sdkconfig-esp32-arduino
extra_scripts = post:esphome/components/esp32/post_build.py.script
[env:idf]
framework = espidf
platform_packages =
  {$env.platform_packages}
  framework-espidf
build_flags =
  ${env.build_flags}
  ${flags:runtime.build_flags}
  -DUSE_ESP_IDF
  -DUSE_ESP32_FRAMEWORK_ESP_IDF
board_build.esp-idf.sdkconfig_path = .vscode/sdkconfig-esp32-idf
extra_scripts = post:components/esp32/post_build.py.script
[env:idf-tidy]
extends = env:idf
board_build.esp-idf.sdkconfig_path = .vscode/sdkconfig-esp32-idf-tidy
build_flags =
  ${env.build_flags}
  ${flags:clangtidy.build_flags}


[flags:runtime]
build_flags =
	-Wno-unused-but-set-variable
	-Wno-sign-compare
	-Wno-nonnull-compare
[flags:clangtidy]
build_flags =
	-Wall
	-Wextra
	-Wunreachable-code
	-Wfor-loop-analysis
	-Wshadow-field
	-Wshadow-field-in-constructor
	-Wshadow-uncaptured-local


[env:esp32_ht_lora32v2]
board = heltec_wifi_lora_32_V2
; board_build.partitions = huge_app.csv
lib_deps = heltecautomation/Heltec ESP32 Dev-Boards
