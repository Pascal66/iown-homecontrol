; iown-homecontrol PlatformIO Project Configuration File
;
;      Build options: build flags, source filter
;     Upload options: custom upload port, speed and extra flags
;    Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;      Documentation: https://docs.platformio.org/page/projectconf.html
;
; Common Problems/Fixes
;
; - Show Computed Configuration: $> pio project config
; - Code Completion/Linting (clang) Errors:
;   - PlatformIO: Rebuild C/C++ Project Index
;   - Generate 'compile_commands.json': $> pio run --target compiledb
;   - Download clang: https://releases.llvm.org/download.html
;     - Set paths in VSCode settings:
;         clang-tidy: C_Cpp.codeAnalysis.clangTidy.path
;       clang-format: C_Cpp.clang_format_path
;
; NOTE: This config is targted towards ESP32. Use 'extends' if configuring for other platforms like RPi, ESP8266, etc.
;
;
; TODO Get GitRev/Version in firmware for debug
;      https://community.platformio.org/t/how-to-build-got-revision-into-binary-for-version-output/15380/6
;      https://github.com/sblantipodi/platformio_version_increment
;      https://piolabs.com/blog/insights/cicd-testing-coverage-versioning.html
;
;

[platformio]
name = iown-homecontrol
description = io-homecontrol for LoRa32 boards
default_envs = heltec_wifi_lora_32_V2
; Contents and Filesystem folder. Arduino standard is 'extras'.
data_dir = extras


;   GLOBAL OPTIONS FOR ALL [env:*]
[env]
framework = arduino
platform = espressif32
;
;   BUILD OPTIONS
board_build.filesystem = littlefs
; Use latest C/C++ Standards available
build_unflags = -std=gnu++11 -Os
; https://gcc.gnu.org/onlinedocs/gcc/Xtensa-Options.html
build_flags = -std=gnu++2a -O3
; auto align instructions to reduce branch penalties at the expense of some code density
  -mtarget-align
; translate direct calls to indirect unless direct call target is in call range.
  -mlongcalls
;
;   LIBRARY OPTIONS
lib_compat_mode = off
; Parse project sources and dependencies recursively.
lib_ldf_mode = deep+
lib_deps =
  SPI
  https://github.com/Velocet/LoRa32
  https://github.com/jgromes/RadioLib
;
;   UPLOAD OPTIONS
upload_speed = 921600
;
;   MONITOR OPTIONS
monitor_speed = 921600
monitor_echo = yes
monitor_eol = LF
monitor_filters =
  default                 ; Remove typical terminal control codes from input
  time                    ; Add timestamp with milliseconds for each new line
  colorize                ; Apply different colors for received and echo
  send_on_enter           ; Send a text to device on ENTER
  esp32_exception_decoder ; Crash exception decoder
;
;   CHECK OPTIONS
check_skip_packages = yes
check_tool = cppcheck, clangtidy
check_flags =
; https://sourceforge.net/p/cppcheck/wiki/ListOfChecks/
  cppcheck: --enable=style --std=c++20
  clangtidy: -format-style=Google -fix-errors
; high = Bugs || medium = Defensive Programming || low = Cleanup/Performance
check_severity = high


;   DEBUG OPTIONS can be used in [env:*] via ${debug.*}
[debug]
; Build & Upload & Show Serial Monitor
targets = upload,	monitor
monitor_filters = ${env.monitor_filters}
; Print what is sent and received
  debug
;   (DEBUG) BUILD OPTIONS
build_type = debug
build_flags = ${env.build_flags}
; Arduino Debug Level: 0=None, 1=Error, 2=Warn, 3=Info, 4=Debug, 5=Verbose
  -DCORE_DEBUG_LEVEL=4 ; set debug level
debug_build_flags = ${env.debug_build_flags}
; No optimization level and more debug info
  -O0 -ggdb3 -g3
; Custom options have to start with custom_ or board_! See platformio.py
custom_iown_version = 0.6.9


;   RASPBERRY PI RP2040 PLATFORM OPTIONS (use with 'extends = platform_raspberrypi')
[platform_raspberrypi]
platform = raspberrypi
; ... more options ...

;   ESP32 PLATFORM OPTIONS (use with 'extends = platform_espressif32')
[platform_espressif32]
platform = espressif32
; set cpu frequency to 240MHz
board_build.f_cpu = 240000000L
[platform_espressif32_latest]
; inherit config from 'platform_espressif32' section
extends = platform_espressif32
; https://community.platformio.org/t/using-github-version-of-arduino-espressif32/38325/5
platform = https://github.com/Jason2866/platform-espressif32.git#Arduino/IDF5
;   Override Platform Packages (https://docs.platformio.org/en/latest/platforms/espressif32.html#packages)
; platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#3.0.0-rc1
; platformio/framework-espidf @ https://github.com/espressif/esp-idf.git#v5.1.3
; tool-cmake @ https://github.com/Kitware/CMake.git#releases/latest
; tool-esptoolpy @ https://github.com/espressif/esptool.git#releases/latest
; tool-mklittlefs @ https://github.com/earlephilhower/mklittlefs.git
; tool-ninja @ https://github.com/ninja-build/ninja.git#releases/latest
; toolchain-xtensa-esp32 @ https://github.com/espressif/crosstool-NG#releases/latest
; toolchain-xtensa-esp32s2 @ https://github.com/espressif/crosstool-NG#releases/latest
; toolchain-xtensa-esp32s3 @ https://github.com/espressif/crosstool-NG#releases/latest


[env:heltec_wifi_lora_32_V2]
; inherit config from 'platform_espressif32_latest' section
extends = platform_espressif32_latest
board = heltec_wifi_lora_32_V2
