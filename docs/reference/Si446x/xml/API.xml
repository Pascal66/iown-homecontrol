<?xml version="1.0" encoding="utf-8" ?>
<API>
  <CHIP type="Si4355" revision="B0" name="EZRadio2">
    <COMMAND name="NOP" value="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>No operation command</SUMMARY>
      <DESCRIPTION>Can be used to ensure communication with the device.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED></APIUPDATED>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PART_INFO" value="0x01" feature="common" dev="1" wip="0">
      <SUMMARY>Reports basic information about the device.</SUMMARY>
      <DESCRIPTION>Returns Part Number, Part Version, ROM ID, etc</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CHIPREV" address="1" type="u8">
          <DESCRIPTION>Chip Mask Revision</DESCRIPTION>
        </REPLY>
        <REPLY name="PART" address="2" type="u16">
          <DESCRIPTION>Part Number.  e.g. si4440 will return - 0x4440)</DESCRIPTION>
        </REPLY>
        <REPLY name="PBUILD" address="4" type="u8">
          <DESCRIPTION>Part Build.</DESCRIPTION>
        </REPLY>
        <REPLY name="ID" address="5" type="u16">
          <DESCRIPTION>Id</DESCRIPTION>
        </REPLY>
        <REPLY name="CUSTOMER" address="7" type="u8">
          <DESCRIPTION>Customer ID</DESCRIPTION>
        </REPLY>
        <REPLY name="ROMID" address="8" type="u8">
          <DESCRIPTION>ROM Id</DESCRIPTION>
        </REPLY>
        <REPLY name="BOND" address="9" type="u8" internal="1">
          <DESCRIPTION>Bond Option</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="POWER_UP" value="0x02" feature="boot" dev="1" wip="0">
      <SUMMARY>Power-up device and mode selection. Modes include operational function</SUMMARY>
      <DESCRIPTION>Power-up the device with the specified function.  Power-up is complete when the CTS bit is set. This command may  take longer to set the CTS bit than other commands.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="BOOT_OPTIONS" address="1" type="bitfield">
          <FIELD name="FUNC" lsb="0" size="6">
            <DESCRIPTION>Selects the boot function of the device</DESCRIPTION>
            <ENUMERATION value="0" name="BOOT">
              <DESCRIPTION>Boot Loader</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRX">
              <DESCRIPTION>Transceiver</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="63" name="LOADED" internal="1">
              <DESCRIPTION>Image already loaded, just boot.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="PATCH" lsb="7" size="1">
            <DESCRIPTION>Select patch mode.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Boot normally.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>
                Copy image selected by FUNC to RAM, but do not boot. After  CTS is set, RAM may be patched via <REFERENCE>PATCH_ARGS</REFERENCE> and  <REFERENCE>PATCH_DATA</REFERENCE> commands.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="XTAL_OPTIONS" address="2" type="bitfield">
          <FIELD name="TCXO" lsb="0" size="1">
            <DESCRIPTION>Select if TCXO is in use.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>XTAL is not TCXO.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>XTAL is TCXO.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="XO_FREQ" address="3" type="u32">
          <DESCRIPTION>Frequency of TCXO or external crystal oscillator in Hz. The default is 30000000 (30MHz).</DESCRIPTION>
          <RANGE min="25000000" max="32000000" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="RAM_TEST" value="0x03" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>Tests the contents and operation of RAM.</SUMMARY>
      <DESCRIPTION>Calculate CRC of RAMs selected by MEMORY mask.</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="OPERATION" address="1" type="bitfield">
          <DESCRIPTION>Memory mask for RAMs to CRC.</DESCRIPTION>
          <FIELD name="MCUPX_CRC" size="1" lsb="0">
            <DESCRIPTION>If set, compute CRC of MCUPX RAM</DESCRIPTION>
          </FIELD>
          <FIELD name="MCUPX_RAM_TEST" size="1" lsb="7">
            <DESCRIPTION>If set, run RAM test on MCUPX RAM.  When tests are complete part should be reset.  Simple fill and verify of RAM.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CRC_START_ADDR" address="2" type="u16">
          <DESCRIPTION>Address to start CRC calculation at.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="CRC_SIZE" address="4" type="u16">
          <DESCRIPTION>Number of bytes to calculate CRC over.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RAM_TEST_FILL_BYTE" address="6" type="u8">
          <DESCRIPTION>Fill byte to run RAM test with.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RESULT" address="1" type="bitfield">
          <FIELD name="RAM_TEST_PASS" lsb="0" size="1">
            <DESCRIPTION>Indicates if the ram test passed or failed</DESCRIPTION>
            <ENUMERATION value="0" name="FAILED">
              <DESCRIPTION>FAILED - RAM Test Failed.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="PASSED">
              <DESCRIPTION>PASSED - RAM Test Passed.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="OTP_CRC" address="2" type="u16">
          <DESCRIPTION>CRC of application from OTP.</DESCRIPTION>
        </REPLY>
        <REPLY name="CRC" address="4" type="u16">
          <DESCRIPTION>CRC of selected RAMs</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_IMAGE" value="0x04" feature="boot" dev="1" wip="0">
      <SUMMARY>Loads image from NVM/ROM into RAM.</SUMMARY>
      <DESCRIPTION>Loads the selected function into RAM for execution or patching</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FLAGS" address="1" type="bitfield">
          <FIELD name="FUNC" lsb="0" size="4">
            <DESCRIPTION>Selects the image to load</DESCRIPTION>
            <ENUMERATION value="0" name="BOOT">
              <DESCRIPTION>Boot Loader - No image is loaded</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRX">
              <DESCRIPTION>Transceiver</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="VERIFYCRC" lsb="5" size="1" internal="1">
            <DESCRIPTION>Verify CRC. If no match, do not load NVM and report error. Set in patches along with CRC.</DESCRIPTION>
          </FIELD>
          <FIELD name="NONVM" lsb="4" size="1" internal="1">
            <DESCRIPTION>Do not load image from NVM, this is a full download.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CRC" address="2" internal="1" type="u16">
          <DESCRIPTION>
            CRC value which the RAMs must match after the image is loaded. If VERIFYCRC is not set,  then the CRC supplied is ignored. If the CRC does not match,  no <REFERENCE>PATCH_ARGS</REFERENCE>, <REFERENCE>PATCH_DATA</REFERENCE>, <REFERENCE>PATCH_COPY</REFERENCE> or <REFERENCE>POWER_UP</REFERENCE> commands will be accepted.  This condition can be cleared by sending another PATCH_IMAGE command with VERIFYCRC cleared.
          </DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED1" address="4" type="u8" internal="1">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED2" address="5" type="u8" internal="1">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="KEY1" address="6" type="u8" internal="1">
          <DESCRIPTION>decryption key1 for patch</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="KEY2" address="7" type="u8" internal="1">
          <DESCRIPTION>decryption key2 for patch</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_ARGS" value="0x05" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Initialize parameters for patching</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PIP" address="1" type="u8">
          <DESCRIPTION>Patch In Progress. This bit is set in all but the the final PATCH_ARGS command.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED1" address="2" type="u8">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED2" address="5" type="u8">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="CRC" address="6" type="u16">
          <DESCRIPTION>
            Validates the data loaded from patch commands. If the CRC fails, no further <REFERENCE>PATCH_DATA</REFERENCE>, <REFERENCE>PATCH_ARGS</REFERENCE>, <REFERENCE>PATCH_COPY</REFERENCE> or <REFERENCE>POWER_UP</REFERENCE> commands will be accepted.
          </DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_DATA" value="0xE0" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Load patch data. Technically, there are 16 PATCH_DATA commands 0x10-0x1F. CMD[2:0]  is the number of valid bytes in the command. CMD[3] is the LSB of the CRC.</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS internal="1">
        <PARAMETER name="DATA0" address="1" type="u8">
          <DESCRIPTION>encrypted patch data byte to load into RAM</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="2" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="3" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="4" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="5" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA5" address="6" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA6" address="7" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA7" address="8" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_COPY" value="0x06" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Patch RAM by copying from ROM/RAM/NVM to RAMs</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SRC_ADDR" address="1" type="u16">
          <DESCRIPTION>Memory Controller source address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DST_ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="COUNT" address="5" type="u16">
          <DESCRIPTION>Number of bytes to copy.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_COPY_2" value="0x0A" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>
        This is the same command as <REFERENCE>PATCH_COPY</REFERENCE> with the lsb of the crc set.
      </DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SRC_ADDR" address="1" type="u16">
          <DESCRIPTION>Memory Controller source address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DST_ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="COUNT" address="5" type="u16">
          <DESCRIPTION>Number of bytes to copy.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="TEST_DATA" value="0x09" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>Read NVM Test Data block</SUMMARY>
      <DESCRIPTION>Reports Test Data block read from NVM</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="OFFSET" address="1" type="u8">
          <DESCRIPTION>Offset in test data block to begin reading at.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="TEST0" address="1" type="u8">
        </REPLY>
        <REPLY name="TEST1" address="2" type="u8">
        </REPLY>
        <REPLY name="TEST2" address="3" type="u8">
        </REPLY>
        <REPLY name="TEST3" address="4" type="u8">
        </REPLY>
        <REPLY name="TEST4" address="5" type="u8">
        </REPLY>
        <REPLY name="TEST5" address="6" type="u8">
        </REPLY>
        <REPLY name="TEST6" address="7" type="u8">
        </REPLY>
        <REPLY name="TEST7" address="8" type="u8">
        </REPLY>
        <REPLY name="TEST8" address="9" type="u8">
        </REPLY>
        <REPLY name="TEST9" address="10" type="u8">
        </REPLY>
        <REPLY name="TESTA" address="11" type="u8">
        </REPLY>
        <REPLY name="TESTB" address="12" type="u8">
        </REPLY>
        <REPLY name="TESTC" address="13" type="u8">
        </REPLY>
        <REPLY name="TESTD" address="14" type="u8">
        </REPLY>
        <REPLY name="TESTE" address="15" type="u8">
        </REPLY>
        <REPLY name="TESTF" address="16" type="u8">
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_PH_STATUS" value="0x21" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the packet handler status.</SUMMARY>
      <DESCRIPTION>Returns current packet handler status bytes and possibly clears pending packet handler interrupts.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PH_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending RX_FIFO_ALMOST_FULL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND_CLR" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending TX_FIFO_ALMOST_EMPTY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND_CLR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If clear, Clear pending CRC16_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending CRC_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending PACKET_RX interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND_CLR" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending PACKET_SENT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND_CLR" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MISS interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND_CLR" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MATCH interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="PH_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX_FIFO_ALMOST_FULL interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX_FIFO_ALMOST_EMPTY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC16_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, PACKET_RX interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, PACKET_SENT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MISS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MATCH interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_STATUS" address="2" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX fifo is above watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX fifo is below watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC-16 error</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC-32 error</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, Packet Received</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, Packet Sent</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet was discarded because filter did not match</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet matched filter.</DESCRIPTION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_MODEM_STATUS" value="0x22" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the modem status byte.</SUMMARY>
      <DESCRIPTION>Returns and possibly clears the current modem status byte.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="MODEM_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="SYNC_DETECT_PEND_CLR" lsb="0" size="1">
            <DESCRIPTION>If clear, Clear pending SYNC_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND_CLR" lsb="1" size="1">
            <DESCRIPTION>If clear, Clear pending PREAMBLE_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_PREAMBLE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI_JUMP interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_SYNC interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="MODEM_PEND" address="1" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, SYNC_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, PREAMBLE_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, INVALID_PREAMBLE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, RSSI interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, RSSI_JUMP interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, INVALID_SYNC interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_STATUS" address="2" type="bitfield">
          <FIELD name="SYNC_DETECT" lsb="0" size="1">
            <DESCRIPTION>If set, sync has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT" lsb="1" size="1">
            <DESCRIPTION>If set, preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE" lsb="2" size="1">
            <DESCRIPTION>If set, invalid preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI" lsb="3" size="1">
            <DESCRIPTION>
              If set, RSSI is above <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP" lsb="4" size="1">
            <DESCRIPTION>
              If set, RSSI jump above <REFERENCE>MODEM_RSSI_JUMP_THRESH</REFERENCE> has occured
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC" lsb="5" size="1">
            <DESCRIPTION>If set, invalid sync has been detected</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CURR_RSSI" address="3" type="u8">
          <DESCRIPTION>Current RSSI reading from the modem.</DESCRIPTION>
        </REPLY>
        <REPLY name="LATCH_RSSI" address="4" type="u8">
          <DESCRIPTION>
            Latched RSSI reading from the modem as configured by <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>.  Reset to 0 at the start of every RX.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="ANT1_RSSI" address="5" type="u8">
          <DESCRIPTION>RSSI of ANT1 while antenna diversity.  Latched during preamble evaluation and avaliable for reading after sync detection.</DESCRIPTION>
        </REPLY>
        <REPLY name="ANT2_RSSI" address="6" type="u8">
          <DESCRIPTION>RSSI of ANT2 while antenna diversity.  Latched during preamble evaluation and avaliable for reading after sync detection.</DESCRIPTION>
        </REPLY>
        <REPLY name="AFC_FREQ_OFFSET" address="7" type="u16">
          <DESCRIPTION>The AFC value that is generated by the AFC loop during receive mode.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_CHIP_STATUS" value="0x23" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the chip status.</SUMMARY>
      <DESCRIPTION>Returns current chip status bytes and possibly clears pending chip status interrupts.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHIP_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="WUT_PEND_CLR" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending WUT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND_CLR" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending LOW_BATT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending CHIP_READY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending CMD_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending STATE_CHANGE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND_CLR" lsb="6" size="1">
            <DESCRIPTION>If clear, Clear pending CAL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CHIP_PEND" address="1" type="bitfield">
          <FIELD name="WUT_PEND" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, WUT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, LOW_BATT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_READY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, CMD_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, STATE_CHANGE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND" lsb="6" size="1">
            <DESCRIPTION>If set, CAL interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_STATUS" address="2" type="bitfield">
          <FIELD name="WUT" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, wakeup timer has expired</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, low battery has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY" lsb="2" size="1">
            <DESCRIPTION>If set, chip is ready to accept commands</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR" lsb="3" size="1">
            <DESCRIPTION>If set, command error has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE" lsb="4" size="1">
            <DESCRIPTION>If set, a state change has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR" lsb="5" size="1">
            <DESCRIPTION>If set, fifo underflow or overflow occured</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL" lsb="6" size="1">
            <DESCRIPTION>If set, calibration timer has expired</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CMD_ERR_STATUS" address="3" type="u8">
          <DESCRIPTION>Last command error cause.  Only valid if CMD_ERROR status bit is set.</DESCRIPTION>
          <ENUMERATION value="0x00" name="CMD_ERROR_NONE">
            <DESCRIPTION>No error.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x10" name="CMD_ERROR_BAD_COMMAND">
            <DESCRIPTION>Bad command issued.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x11" name="CMD_ERROR_BAD_ARG">
            <DESCRIPTION>Argment(s) in issued command were invalid.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x12" name="CMD_ERROR_COMMAND_BUSY">
            <DESCRIPTION>Command was issued before previous command was completed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x20" name="CMD_ERROR_BAD_NVM">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x30" name="CMD_ERROR_BAD_PATCH">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x31" name="CMD_ERROR_BAD_BOOTMODE">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x40" name="CMD_ERROR_BAD_PROPERTY">
            <DESCRIPTION>Bad Property ID was provided.</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_INT_STATUS" value="0x20" feature="common" dev="1" wip="0">
      <SUMMARY>Returns the interrupt status byte.</SUMMARY>
      <DESCRIPTION>Returns the current interrupt status byte.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PH_CLR_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending RX_FIFO_ALMOST_FULL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND_CLR" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending TX_FIFO_ALMOST_EMPTY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND_CLR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If clear, Clear pending CRC16_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending CRC_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending PACKET_RX interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND_CLR" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending PACKET_SENT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND_CLR" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MISS interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND_CLR" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MATCH interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="MODEM_CLR_PEND" address="2" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND_CLR" lsb="0" size="1">
            <DESCRIPTION>If clear, Clear pending SYNC_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND_CLR" lsb="1" size="1">
            <DESCRIPTION>If clear, Clear pending PREAMBLE_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_PREAMBLE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI_JUMP interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_SYNC interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CHIP_CLR_PEND" address="3" type="bitfield">
          <FIELD name="WUT_PEND_CLR" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending WUT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND_CLR" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending LOW_BATT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending CHIP_READY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending CMD_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending STATE_CHANGE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND_CLR" lsb="6" size="1">
            <DESCRIPTION>If clear, Clear pending CAL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="INT_PEND" address="1" type="bitfield">
          <FIELD name="PH_INT_STATUS_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, PH_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="MODEM_INT_STATUS_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, MODEM_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_INT_STATUS_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="INT_STATUS" address="2" type="bitfield">
          <FIELD name="PH_INT_STATUS" lsb="0" size="1">
            <DESCRIPTION>If set, packet handler status has interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="MODEM_INT_STATUS" lsb="1" size="1">
            <DESCRIPTION>If set, modem status has interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_INT_STATUS" lsb="2" size="1">
            <DESCRIPTION>If set, chip status has interrupt pending</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_PEND" address="3" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX_FIFO_ALMOST_FULL interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX_FIFO_ALMOST_EMPTY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC16_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, PACKET_RX interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, PACKET_SENT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MISS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MATCH interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_STATUS" address="4" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX fifo is above watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX fifo is below watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC-16 error</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC-32 error</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, Packet Received</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, Packet Sent</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet was discarded because filter did not match</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet matched filter.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_PEND" address="5" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, SYNC_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, PREAMBLE_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, INVALID_PREAMBLE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, RSSI interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, RSSI_JUMP interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, INVALID_SYNC interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_STATUS" address="6" type="bitfield">
          <FIELD name="SYNC_DETECT" lsb="0" size="1">
            <DESCRIPTION>If set, sync has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT" lsb="1" size="1">
            <DESCRIPTION>If set, preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE" lsb="2" size="1">
            <DESCRIPTION>If set, invalid preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI" lsb="3" size="1">
            <DESCRIPTION>
              If set, RSSI is above <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP" lsb="4" size="1">
            <DESCRIPTION>
              If set, RSSI jump above <REFERENCE>MODEM_RSSI_JUMP_THRESH</REFERENCE> has occured
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC" lsb="5" size="1">
            <DESCRIPTION>If set, invalid sync has been detected</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_PEND" address="7" type="bitfield">
          <FIELD name="WUT_PEND" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, WUT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, LOW_BATT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_READY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, CMD_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, STATE_CHANGE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND" lsb="6" size="1">
            <DESCRIPTION>If set, CAL interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_STATUS" address="8" type="bitfield">
          <FIELD name="WUT" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, wakeup timer has expired</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, low battery has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY" lsb="2" size="1">
            <DESCRIPTION>If set, chip is ready to accept commands</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR" lsb="3" size="1">
            <DESCRIPTION>If set, command error has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE" lsb="4" size="1">
            <DESCRIPTION>If set, a state change has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR" lsb="5" size="1">
            <DESCRIPTION>If set, fifo underflow or overflow occured</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL" lsb="6" size="1">
            <DESCRIPTION>If set, calibration timer has expired</DESCRIPTION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FUNC_INFO" value="0x10" feature="common" dev="1" wip="0">
      <SUMMARY>Returns the Function revision information of the device.</SUMMARY>
      <DESCRIPTION>
        Return Function revision numbers for currently loaded functional mode firmware. Contrast with <REFERENCE>PART_INFO</REFERENCE>
      </DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="REVEXT" address="1" type="u8">
          <DESCRIPTION>External revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="REVBRANCH" address="2" type="u8">
          <DESCRIPTION>Branch revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="REVINT" address="3" type="u8">
          <DESCRIPTION>Internal revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="PATCH" address="4" type="u16">
          <DESCRIPTION>ID of applied patch. This is also the last 2 bytes in the associated patch file (*.csg).</DESCRIPTION>
          <DESCRIPTION>0x0000 = No patch applied.</DESCRIPTION>
        </REPLY>
        <REPLY name="FUNC" address="6" type="u8">
          <DESCRIPTION>Current functional mode</DESCRIPTION>
          <ENUMERATION value="0" name="BOOT">
            <DESCRIPTION>Part is currently in boot mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="TRX">
            <DESCRIPTION>Tranceiver</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
        <REPLY name="SVNFLAGS" address="7" type="bitfield" internal="1">
          <FIELD name="LOCALMOD" lsb="0" size="1">
            <DESCRIPTION>If set, image has local modifications. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
          </FIELD>
          <FIELD name="MIXEDREV" lsb="1" size="1">
            <DESCRIPTION>If set, image has mixed revisions. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
          </FIELD>
          <FIELD name="LOCATION" lsb="4" size="2">
            <DESCRIPTION>Trunk, Branch or Tag</DESCRIPTION>
            <ENUMERATION value="0" name="TAG">
              <DESCRIPTION>Built from a SVN Tag</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="BRANCH">
              <DESCRIPTION>Built from a SVN Branch. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="TRUNK">
              <DESCRIPTION>Built from the SVN Trunk. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="SVNREV" address="8" type="u32" internal="1">
          <DESCRIPTION>Subersion Revision image was built from.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="SET_PROPERTY" value="0x11" feature="common" dev="1" wip="0">
      <SUMMARY>Sets the value of a property.</SUMMARY>
      <DESCRIPTION>Sets a property common to one or more commands. These are similar to parameters for a  api command but are not expected to change frequently and may be controlled by higher layers of  the user's software. Setting some properties may not cause the device to take immediate  action, however the property will take affect once a command which uses it is issued.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GROUP" address="1" type="u8">
          <DESCRIPTION>Selects the group of the property to set.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="NUM_PROPS" address="2" type="u8">
          <DESCRIPTION>Number of properties to write starting at START_PROP.</DESCRIPTION>
          <RANGE min="1" max="12" />
        </PARAMETER>
        <PARAMETER name="START_PROP" address="3" type="u8">
          <DESCRIPTION>
            Selects the property index to set. The available properties are  determined by the part number and the <REFERENCE>POWER_UP</REFERENCE>:FUNC selection.
          </DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA0" address="4" type="u8">
          <DESCRIPTION>Value of the property START_PROP</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="5" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 1 (don't care if NUM_PROPS &lt; 2 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="6" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 2 (don't care if NUM_PROPS &lt; 3 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="7" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 3 (don't care if NUM_PROPS &lt; 4 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="8" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 4 (don't care if NUM_PROPS &lt; 5 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA5" address="9" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 5 (don't care if NUM_PROPS &lt; 6 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA6" address="10" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 6 (don't care if NUM_PROPS &lt; 7 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA7" address="11" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 7 (don't care if NUM_PROPS &lt; 8 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA8" address="12" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 8 (don't care if NUM_PROPS &lt; 9 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA9" address="13" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 9 (don't care if NUM_PROPS &lt; 10 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA10" address="14" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 10 (don't care if NUM_PROPS &lt; 11 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA11" address="15" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 11 (don't care if NUM_PROPS &lt; 12 )</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_PROPERTY" value="0x12" feature="common" dev="1" wip="0">
      <SUMMARY>Retrieve a property's value.</SUMMARY>
      <DESCRIPTION>
        Retrieve a property's value; The value will either be the default or the value set with <REFERENCE>SET_PROPERTY</REFERENCE>.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GROUP" address="1" type="u8">
          <DESCRIPTION>Selects the group of the properties to retrieve.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="NUM_PROPS" address="2" type="u8">
          <DESCRIPTION>Number of properties to retrieve starting at START_PROP.</DESCRIPTION>
          <RANGE min="1" max="16" />
        </PARAMETER>
        <PARAMETER name="START_PROP" address="3" type="u8">
          <DESCRIPTION>
            Selects the first property index to retrieve.  The available properties are  determined by the part number and the <REFERENCE>POWER_UP</REFERENCE>:FUNC selection.
          </DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA0" address="1" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE>
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA1" address="2" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 1 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 2 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA2" address="3" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 2 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 3 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA3" address="4" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 3 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 4 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA4" address="5" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 4 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 5 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA5" address="6" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 5 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 6 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA6" address="7" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 6 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 7 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA7" address="8" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 7 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 8 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA8" address="9" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 8 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 9 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA9" address="10" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 9 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 10 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA10" address="11" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 10 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 11 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA11" address="12" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 11 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 12 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA12" address="13" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 12 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 13 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA13" address="14" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 13 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 14 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA14" address="15" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 14 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 15 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA15" address="16" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 15 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 16 )
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FIFO_INFO" value="0x15" feature="common" dev="1" wip="0">
      <SUMMARY>Provides access to transmit and receive fifo counts and reset.</SUMMARY>
      <DESCRIPTION>This command is normally used for error recovery, fifo hardware does not need to be reset prior to use.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIFO" address="1" type="bitfield">
          <FIELD name="TX" lsb="0" size="1" feature="tx">
            <ENUMERATION value="1">
              <DESCRIPTION>Resets transmit data fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RX" lsb="1" size="1" feature="rx">
            <ENUMERATION value="1">
              <DESCRIPTION>Resets receive data fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RX_FIFO_COUNT" address="1" type="u8" />
        <DESCRIPTION>Number of bytes currently in receive fifo.</DESCRIPTION>
        <REPLY name="TX_FIFO_SPACE" address="2" type="u8">
          <DESCRIPTION>Amount of space currently available in transmit fifo.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PACKET_INFO" value="0x16" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns information about the last packet received and optionally overrides field length.</SUMMARY>
      <DESCRIPTION>This command is used to retrieve the length field extracted from the packet when using variable length packets.</DESCRIPTION>
      <DESCRIPTION>On 802.15.4g receive mode, the FCS byte length embedded in the FHR is included to inform the host of the number of FCS bytes in the FIFO following the MAC Payload. if FCS is 0, 2 is added to the return length; if FCS is 1, 4 is added to the return length.</DESCRIPTION>
      <DESCRIPTION>If arguments follow, it can also be used to override packet length that was originally programmed with non-zero RX_LEN in START_RX or field length originally programmed with PKT field length properties.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIELD_NUMBER" address="1" type="bitfield">
          <FIELD name="FIELD_NUM" lsb="0" size="5">
            <ENUMERATION value="0x00">
              <DESCRIPTION>Nothing to override.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x01">
              <DESCRIPTION>Override FIELD 1 length or RX_LEN in START_RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x02">
              <DESCRIPTION>Override FIELD 2 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x04">
              <DESCRIPTION>Override FIELD 3 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x08">
              <DESCRIPTION>Override FIELD 4 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x10">
              <DESCRIPTION>Override FIELD 5 length.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="LEN" address="2" type="u16">
          <DESCRIPTION>Length in bytes.</DESCRIPTION>
          <RANGE min="1" max="8191" />
        </PARAMETER>
        <PARAMETER name="LEN_DIFF" address="4" type="u16">
          <DESCRIPTION>Difference in bytes based on the original field length or RX_LEN. Signed.</DESCRIPTION>
          <RANGE min="-32768" max="32767" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="LENGTH_15_8" address="1" type="u8">
          <DESCRIPTION>Most significant byte of the extracted length</DESCRIPTION>
        </REPLY>
        <REPLY name="LENGTH_7_0" address="2" type="u8">
          <DESCRIPTION>Least significant byte of the extracted length</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="IRCAL" value="0x17" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Calibrate IR.</SUMMARY>
      <DESCRIPTION>Calibrate image rejection.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SEARCHING_STEP_SIZE" address="1" type="bitfield">
          <FIELD name="COURSE_STEP_SIZE" lsb="0" size="4">
            <DESCRIPTION>Course Step Size of course stepping.</DESCRIPTION>
            <RANGE min="0" max="15" />
            <ENUMERATION value="0">
              <DESCRIPTION>Value 0 is usedn to skip course stepping</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="FINE_STEP_SIZE" lsb="4" size="2">
            <DESCRIPTION>Step size of fine stepping.</DESCRIPTION>
            <RANGE min="0" max="3" />
            <ENUMERATION value="0">
              <DESCRIPTION>Value 0 is used to skip fine stepping.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="INITIAL_PH_AMP" lsb="6" size="1">
            <DESCRIPTION>Initial ph and amp value when start IR calibration.</DESCRIPTION>
            <ENUMERATION value="1">
              <DESCRIPTION>use zero for phase and amplitude values as starting values</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0">
              <DESCRIPTION>use previous calibration values as starting values (default)</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="SEARCHING_RSSI_AVG" address="2" type="bitfield">
          <FIELD name="RSSI_COURSE_AVG" lsb="0" size="2">
            <DESCRIPTION>How many measurements(2^avg) per RSSI measurement while course stepping.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>1 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>4 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>8 measurements</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SKIP_CAL" lsb="2" size="1" internal="1">
            <DESCRIPTION>Skip calibration and skip reverting parameters, only configure the parameters for IR cal.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>do calibration and then revert parameters</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>skip calibration and reverting parameters</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RSSI_FINE_AVG" lsb="4" size="2">
            <DESCRIPTION>How many measurements(2^avg) per RSSI measurement while fine stepping.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>1 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>4 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>8 measurements</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SKIP_INIT_SEARCH_STAT" lsb="6" size="1" internal="1">
            <DESCRIPTION>Whether initialize the searching process(clear the saved information when step-by-step searching)</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Start a new search</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Continue to search.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="STEP_BY_STEP" lsb="7" size="1" internal="1">
            <DESCRIPTION>Whether only do one step searching. If we do only one step searching, then we don't revert the pararmeters when the API call is finished. If we calibarte IR step-by-step, the calibration state will automatically changed, please refer the return state</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Do automatically searching</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Only search one step.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_CHAIN_SETTING1" address="3" type="bitfield">
          <FIELD name="PGA_GAIN" lsb="0" size="3">
            <DESCRIPTION>Set PGA Gain, see PGA datasheet.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>6dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>9dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>12dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="6">
              <DESCRIPTION>0dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="7">
              <DESCRIPTION>3dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>others are all 6dB</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="CLOSE_SHUNT_SWITCH" lsb="3" size="1">
            <DESCRIPTION>Close shunt switch.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Open LNA input shunt switch</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Close Open LNA input shunt switch switch</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RF_SOURCE_PWR" lsb="4" size="2">
            <DESCRIPTION>Power of internal generator(Default 3).</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>smallest</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>small</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>big</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>biggest</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="IRCLKDIV" lsb="6" size="1">
            <DESCRIPTION>Set irclkdiv</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Set to nominal gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Harmonics at N x 30 MHz</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="EN_HRMNIC_GEN" lsb="7" size="1">
            <DESCRIPTION>Enable harmonic generator.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Not enable</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Enable</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_CHAIN_SETTING2" address="4" type="bitfield">
          <FIELD name="ADC_HIGH_GAIN" lsb="0" size="1">
            <DESCRIPTION>Set ADC to high gain.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Set to nominal gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Set to high gain</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RSSI_READ_DLEAY" lsb="4" size="4" internal="1">
            <DESCRIPTION>How many bits clock delay before read RSSI when calbration. Delay = (2 + RSSI_READ_DLEAY)*bit_clock).</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>2 + 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 + 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="15">
              <DESCRIPTION>2 + 15</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CAL_STATE" address="1" type="u8" internal="1">
          <DESCRIPTION>Current calibration state</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Not in proc</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>PH fine stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>AMP fine stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>PH course stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8">
            <DESCRIPTION>AMP course stepping</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
        <REPLY name="RSSI" address="2" type="u8" internal="1">
          <DESCRIPTION>Current value of register RSSI. Usually the RSSI value is the RSSI of current AMP/PH. If (DIRECT_CHANGE = 1) or (CAL_STATE is different to privous value), then this means the search direction is changed, now the RSSI is the value before change direction. If it is this condition the RSSI of current value should be ready out by sfr_read.</DESCRIPTION>
        </REPLY>
        <REPLY name="DIR_CH" address="3" type="u8" internal="1">
          <DESCRIPTION>Whether search direction changed</DESCRIPTION>
        </REPLY>
        <REPLY name="LAST_RSSI" address="4" type="u8" internal="1">
          <DESCRIPTION>New for ROM3, return the final RSSI value after IR calibration.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PROTOCOL_CFG" value="0x18" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sets the chip up for specified protocol.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PROTOCOL" address="1" type="u8">
          <DESCRIPTION>Selects which protocol to configure the chip for.</DESCRIPTION>
          <ENUMERATION name="GENERIC" value="0">
            <DESCRIPTION>Packet format is generic, no dynamic reprogramming of packet handler properties.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION name="IEEE802154G" value="1">
            <DESCRIPTION>Packet format is IEEE802.15.4g compliant. The following properties are overriden: PKT_CRC_CONFIG, CRC_ENDIAN/BIT_ORDER in PKT_CONFG1 for TX and RX, PKT_FIELD_1_CRC_CONFIG for RX. Other applicable properties in the packet handler group still need to be programmed. Field 1 should have the length of 16 bits to contain the PHR with PKT_LEN_FIELD_SOURCE set to 1 for RX. PSDU field shall use Field 2 with variable length. Field 2 length should be set to the maximum allowed including the anticipated FCS length. It is anticipated that the FCS will be calculated by the host and transmitted over the air. Si4440 will receive PHR and put FCS in the FIFO for the host to retrieve and check. Therefore, CRC shouldn't be enabled on Si4440.</DESCRIPTION>
          </ENUMERATION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GPIO_PIN_CFG" value="0x13" feature="common" dev="1" wip="0">
      <SUMMARY>Configures the gpio pins</SUMMARY>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GPIO0" address="1" type="bitfield">
          <FIELD name="GPIO0_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO0_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO1" address="2" type="bitfield">
          <FIELD name="GPIO1_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO1_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO2" address="3" type="bitfield">
          <FIELD name="GPIO2_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO2_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO3" address="4" type="bitfield">
          <FIELD name="GPIO3_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO3_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NIRQ" address="5" type="bitfield">
          <FIELD name="NIRQ_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="nirq" value="39">
              <DESCRIPTION>Active low interrupt signal</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="NIRQ_DRV_PULL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="SDO" address="6" type="bitfield">
          <FIELD name="SDO_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SDO_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GEN_CONFIG" address="7" type="bitfield">
          <FIELD name="DRV_STRENGTH" lsb="5" size="2">
            <ENUMERATION name="HIGH" value="0">
              <DESCRIPTION>GPIOs configured as outputs will have highest drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_HIGH" value="1">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_LOW" value="2">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="LOW" value="3">
              <DESCRIPTION>GPIOs configured as outputs will have lowest drive strength.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="GPIO0" address="1" type="bitfield">
          <FIELD name="GPIO0r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO0_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO1" address="2" type="bitfield">
          <FIELD name="GPIO1r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO1_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO2" address="3" type="bitfield">
          <FIELD name="GPIO2r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO2_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO3" address="4" type="bitfield">
          <FIELD name="GPIO3r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO3STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="NIRQ" address="5" type="bitfield">
          <FIELD name="NIRQr" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="nirq" value="39">
              <DESCRIPTION>Active low interrupt signal</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="NIRQSTATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="SDO" address="6" type="bitfield">
          <FIELD name="SDOr" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SDOSTATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GEN_CONFIG" address="7" type="bitfield">
          <FIELD name="DRV_STRENGTH" lsb="5" size="2">
            <ENUMERATION name="HIGH" value="0">
              <DESCRIPTION>GPIOs configured as outputs will have highest drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_HIGH" value="1">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_LOW" value="2">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="LOW" value="3">
              <DESCRIPTION>GPIOs configured as outputs will have lowest drive strength.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PEEK" value="0xF0" feature="debug" internal="1" dev="1" wip="0">
      <SUMMARY>Read a memory location if the feature is enabled.</SUMMARY>
      <DESCRIPTION>Read a memory location in the MCU memory.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADDR0" address="1" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR1" address="3" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR2" address="5" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR3" address="7" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR4" address="9" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR5" address="11" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR6" address="13" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA0" address="1" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR0 == 0 )</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA1" address="2" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR1 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA2" address="3" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR2 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA3" address="4" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR3 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA4" address="5" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR4 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA5" address="6" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR5 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA6" address="7" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR6 == 0 ).</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="POKE" value="0xF1" feature="debug" internal="1" dev="1" wip="0">
      <SUMMARY>Write a memory location if the feature is enabled.</SUMMARY>
      <DESCRIPTION>Write a memory location in the MCU.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADDR0" address="1" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA0" address="3" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR0 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR1" address="4" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="6" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR1 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR2" address="7" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="9" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR2 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR3" address="10" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="12" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR3 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR4" address="13" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="15" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR4 == 0).</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_ADC_READING" value="0x14" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Retrieve the results of possible ADC conversions.</SUMMARY>
      <DESCRIPTION>Performs and returns results of selected ADC conversions.  This command takes ~1ms per conversion enabled below.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADC_EN" address="1" type="bitfield">
          <FIELD name="ADC_GPIO_PIN" lsb="0" size="2">
            <DESCRIPTION>Select GPIOx pin. The pin must be set as input</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Measure voltage of GPIO0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Measure voltage of GPIO1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>Measure voltage of GPIO2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>Measure voltage of GPIO3</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="ADC_GPIO_EN" lsb="2" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion on GPIO, will read 0 value in reply</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of GPIO, results in GPIO_ADC. Vgpio = 3*GPIO_ADC/1280</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="BATTERY_VOLTAGE_EN" lsb="3" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion of battery voltage, will read 0 value in reply BATTERY_ADC</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of battery voltage, results in BATTERY_ADC. Vbatt = 3*BATTERY_ADC/1280</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="TEMPERATURE_EN" lsb="4" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion of temperature, will read 0 value in reply TEMPERATURE</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of temperature, result in TEMP_ADC. Temp in Celsius = ((800 + TEMP_SLOPE)/4096)*TEMP_ADC - (INTERCEPT/2 + 256)</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="ADC_CFG" address="2" type="bitfield">
          <FIELD name="ATT0" lsb="0" size="2">
            <DESCRIPTION>Set att0 when vgpio be measured</DESCRIPTION>
            <ENUMERATION value="0" name="NONE">
              <DESCRIPTION>X 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="HALF">
              <DESCRIPTION>X 1/2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="THIRD">
              <DESCRIPTION>X 1/3</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3" name="FOURTH">
              <DESCRIPTION>X 1/4</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="VBAT_ATT2" lsb="2" size="2">
            <DESCRIPTION>Set vbat_att2 when vgpio be measured</DESCRIPTION>
            <ENUMERATION value="0" name="NONE">
              <DESCRIPTION>X 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="HALF">
              <DESCRIPTION>X 1/2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="THIRD">
              <DESCRIPTION>X 1/3</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3" name="FOURTH">
              <DESCRIPTION>X 1/4</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="UDTIME" lsb="4" size="4">
            <DESCRIPTION>ADC conversion = ADC_CLK / 12 / 2^(UDTIME +1), ADC_CLK = 30 MHz</DESCRIPTION>
            <ENUMERATION value="12">
              <DESCRIPTION>ADC_CLK /12 /8192 = 305 Hz</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="GPIO_ADC" address="1" type="u16">
          <DESCRIPTION>ADC value of voltage on GPIO</DESCRIPTION>
        </REPLY>
        <REPLY name="BATTERY_ADC" address="3" type="u16">
          <DESCRIPTION>ADC value of battery voltage</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_ADC" address="5" type="u16">
          <DESCRIPTION>ADC value of temperature sensor voltage</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_SLOPE" address="7" type="u8">
          <DESCRIPTION>Slope in the formula of Vtempadc -- Temperature</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_INTERCEPT" address="8" type="u8">
          <DESCRIPTION>Intercept in the formula of Vtempadc -- Temperature</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_TX" value="0x31" feature="tx" dev="1" wip="0">
      <SUMMARY>Switches to TX state and starts packet transmission.</SUMMARY>
      <DESCRIPTION>Switches to TX state when condition is met.  Command arguments are retained though sleep state, so they only need to be written when they change.  CTS will not return high until in TX state.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHANNEL" address="1" type="u8">
          <DESCRIPTION>
            Channel number to tune the receiver to.  Frequency is determined using integer, fractional, and step size properties in the FREQ_CONTROL property group.  This value will be overwritten with <REFERENCE>START_RX</REFERENCE>:CHANNEL
          </DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="CONDITION" address="2" type="bitfield">
          <FIELD name="START" lsb="0" size="2">
            <ENUMERATION value="0">
              <DESCRIPTION>Start TX immediately.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Start TX when wake up timer expires.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RETRANSMIT" lsb="2" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Send data that has been written to fifo.  If fifo is empty a fifo underflow interrupt will occur.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Send last packet again.  If this option is used, ensure that no new data is written to the fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="TXCOMPLETE_STATE" lsb="4" size="4">
            <DESCRIPTION>State to go to when current packet transmission completes.  If this parameter is not sent with the command, the last value specified is used.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="TX_LEN" address="3" type="u16">
          <DESCRIPTION>If this field is nonzero, the packet will be transmitted using only field 1.  If this field is zero, the configuration of the packet handler fields is used.  If RETRANSMIT is set, this field is ignored.</DESCRIPTION>
          <RANGE min="0" max="8191" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_RX" value="0x32" feature="rx" dev="1" wip="0">
      <SUMMARY>Switches to RX state. Command arguments are retained though sleep state, so these only need to be written when they change.</SUMMARY>
      <DESCRIPTION>Switches to RX state when condition is met.  Switch to specified state when RX packet completes.  CTS will not return until in RX mode</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHANNEL" address="1" type="u8">
          <DESCRIPTION>
            Channel number to transmit the packet on.  Frequency is determined using integer, fractional, and step size properties in the FREQ_CONTROL property group.  This value will be overwritten with <REFERENCE>START_TX</REFERENCE>:CHANNEL
          </DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="CONDITION" address="2" type="bitfield">
          <FIELD name="START" lsb="0" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Start RX immediately.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Start RX when wake up timer expires.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_LEN" address="3" type="u16">
          <DESCRIPTION>If this field is nonzero, the packet will be received using only field 1.  If this field is zero, the configuration of the packet handler fields is used.</DESCRIPTION>
          <RANGE min="0" max="8191" />
        </PARAMETER>
        <PARAMETER name="NEXT_STATE1" address="5" type="bitfield">
          <FIELD name="RXTIMEOUT_STATE" lsb="0" size="4">
            <DESCRIPTION>
              If preamble detection times out, RX will transition to RXTIMEOUT_STATE. See <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE> for details regarding how to configure preamble timeout.  Defaults to 0.
            </DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NEXT_STATE2" address="6" type="bitfield">
          <FIELD name="RXVALID_STATE" lsb="0" size="4">
            <DESCRIPTION>RX transitions to RXVALID_STATE if CRC check passes when CRC is enabled via PKT group properties. If CRC is not enabled, upon receiving packet received interrupt, RX transitions to RXVALID_STATE.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NEXT_STATE3" address="7" type="bitfield">
          <FIELD name="RXINVALID_STATE" lsb="0" size="4">
            <DESCRIPTION>If CRC checking is enabled, in case of CRC error, RX will transition to RXINVALID_STATE.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="RX_HOP" value="0x36" feature="pro2" dev="1" wip="0">
      <SUMMARY>Hop to a new frequency while in RX.</SUMMARY>
      <DESCRIPTION>While in RX state this will hop to the frequency specified by the parameters and start searching for a preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="INTE" address="1" type="u8">
          <DESCRIPTION>INTE register value</DESCRIPTION>
          <RANGE min="0" max="127" />
        </PARAMETER>
        <PARAMETER name="FRAC2" address="2" type="u8">
          <DESCRIPTION>FRAC2 register value</DESCRIPTION>
          <RANGE min="0" max="15" />
        </PARAMETER>
        <PARAMETER name="FRAC1" address="3" type="u8">
          <DESCRIPTION>FRAC1 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="FRAC0" address="4" type="u8">
          <DESCRIPTION>FRAC0 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT1" address="5" type="u8">
          <DESCRIPTION>VCO_CNT1 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT0" address="6" type="u8">
          <DESCRIPTION>VCO_CNT0 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="CHANGE_STATE" value="0x34" feature="common" dev="1" wip="0">
      <SUMMARY>Update state machine entries.</SUMMARY>
      <DESCRIPTION>This command is used to manually switch to a specified state.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="NEXT_STATE1" address="1" type="bitfield">
          <FIELD name="NEW_STATE" lsb="0" size="4">
            <DESCRIPTION>State to go to immediately.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_MFSK" value="0x35" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Start direct frequency offset transmission mode.</SUMMARY>
      <DESCRIPTION>This command is used to switch to direct frequency offset transmission mode.</DESCRIPTION>
      <DESCRIPTION>Configures MSB or LSB, invert data or not, median frequency offset.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="DIR_MODE_CFG" address="1" type="bitfield">
          <FIELD name="msb_first" lsb="1" size="1">
            <DESCRIPTION>Allows to shift in SPI data as MSB first or LSB first.</DESCRIPTION>
            <ENUMERATION value="0" name="LSB_FIRST">
              <DESCRIPTION>LSB first</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="MSB_FIRST">
              <DESCRIPTION>MSB first</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="scale_factor" lsb="4" size="2">
            <DESCRIPTION>Data samples will be scaled prior to be written to the  modem offset registers.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>This sampled data X1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>This sampled data X2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>This sampled data X4</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>This sampled data X8</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="inv_data" lsb="6" size="1">
            <DESCRIPTION>Invert SDI data.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Not invert SDI data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>SDI data will be inverted prior to be shift in.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="FREQ_OFFSET" address="2" type="u16">
          <DESCRIPTION>Median frequency offset value, in 2's Complement.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="AGC_OVERRIDE" value="0xD0" feature="common" dev="1" wip="0" internal="1">
      <SUMMARY>Override the AGC</SUMMARY>
      <DESCRIPTION>This command is used to allow override of the AGC.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="AGC_OVERRIDE" address="1" type="bitfield">
          <FIELD name="LNA_GAIN_CFG" lsb="0" size="3">
            <DESCRIPTION>LNA Gain</DESCRIPTION>
          </FIELD>
          <FIELD name="DIS_LNA_AGC" lsb="3" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Use hardware AGC to control LNA gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Disable LNA hardware AGC, set LNA gain to fixed value</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="PGA_GAIN_CFG" lsb="4" size="3">
            <DESCRIPTION>PGA Gain configuration.</DESCRIPTION>
          </FIELD>
          <FIELD name="DIS_PGA_AGC" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Use hardware AGC to control PGA gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Disable PGA hardware AGC, set PGA gain to fixed value</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="REQUEST_DEVICE_STATE" value="0x33" feature="common" dev="1" wip="0">
      <SUMMARY>Request current device state.</SUMMARY>
      <DESCRIPTION>Requests the current state of the device and lists pending TX and RX requests.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CURR_STATE" address="1" type="bitfield">
          <FIELD name="MAIN_STATE" lsb="0" size="4">
            <DESCRIPTION>Current State.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="CURRENT_CHANNEL" address="2" type="u8">
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="READ_CMD_BUFF" value="0x44" feature="common" dev="1" wip="0">
      <SUMMARY>Used to read CTS and the command response.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF0" address="1" type="u8">
          <DESCRIPTION>Byte 0 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF1" address="2" type="u8">
          <DESCRIPTION>Byte 1 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF2" address="3" type="u8">
          <DESCRIPTION>Byte 2 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF3" address="4" type="u8">
          <DESCRIPTION>Byte 3 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF4" address="5" type="u8">
          <DESCRIPTION>Byte 4 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF5" address="6" type="u8">
          <DESCRIPTION>Byte 5 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF6" address="7" type="u8">
          <DESCRIPTION>Byte 6 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF7" address="8" type="u8">
          <DESCRIPTION>Byte 7 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF8" address="9" type="u8">
          <DESCRIPTION>Byte 8 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF9" address="10" type="u8">
          <DESCRIPTION>Byte 9 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF10" address="11" type="u8">
          <DESCRIPTION>Byte 10 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF11" address="12" type="u8">
          <DESCRIPTION>Byte 11 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF12" address="13" type="u8">
          <DESCRIPTION>Byte 12 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF13" address="14" type="u8">
          <DESCRIPTION>Byte 13 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF14" address="15" type="u8">
          <DESCRIPTION>Byte 14 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF15" address="16" type="u8">
          <DESCRIPTION>Byte 15 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_A_READ" value="0x50" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with A.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_A_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_B_READ" value="0x51" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with B.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_B_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_C_READ" value="0x53" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with C.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_C_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_D_READ" value="0x57" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with C.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_D_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="WRITE_TX_FIFO" value="0x66" feature="common" dev="1" wip="0">
      <SUMMARY>Writes the TX FIFO.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command has no response to be read.
        If you write more data than the  TX FIFO can hold it will trigger a FIFO Overflow interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIRST_BYTE" address="1" type="u8">
          <DESCRIPTION>First byte to write to the TX FIFO</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="READ_RX_FIFO" value="0x77" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the RX FIFO.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
        If you read more data than the  RX FIFO contains it will trigger a FIFO Underflow interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FIRST_BYTE" address="0" type="u8">
          <DESCRIPTION>First byte in the RX FIFO.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <PROPERTY group="GLOBAL" name="XO_TUNE" value="0" default="0x40" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure crystal oscillator frequency tuning bank</SUMMARY>
      <DESCRIPTION>Crystal oscillator frequency tuning value.  0x00 is maximum frequency value and 0x7F is lowest frequency value. Each LSB code corresponds to a 70fF capacitance change. The total adjustment range assuming a 30MHz XTAL is +/-100ppm.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="127" />
      <BYTE>
        <FIELD name="TUNE_VALUE" lsb="0" size="7">
          <ENUMERATION value="0" name="FASTEST_FREQUENCY">
            <DESCRIPTION>Maximum frequency</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="127" name="SLOWEST_FREQUENCY">
            <DESCRIPTION>Lowest frequency</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="CLK_CFG" value="1" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Clock configuration options</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CLK_32K_SEL" lsb="0" size="3">
          <SUMMARY>Selects 32 kHz clock source</SUMMARY>
          <ENUMERATION value="0" name="OFF">
            <DESCRIPTION>32 kHz clock is disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="RC">
            <DESCRIPTION>32 kHz clock is driven by internal RC oscillator</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CRYSTAL">
            <DESCRIPTION>32 kHz clock is driven by External crystal</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="DIVIDED_CLK_SEL" lsb="3" size="3">
          <SUMMARY>Selected divided clock output divider.</SUMMARY>
          <ENUMERATION value="0" name="DIV_1">
            <DESCRIPTION>Clock output is system clock divided by 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIV_2">
            <DESCRIPTION>Clock output is system clock divided by 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="DIV_3">
            <DESCRIPTION>Clock output is system clock divided by 3.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="DIV_7_5">
            <DESCRIPTION>Clock output is system clock divided by 7.5.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="DIV_10">
            <DESCRIPTION>Clock output is system clock divided by 10.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="DIV_15">
            <DESCRIPTION>Clock output is system clock divided by 15.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="DIV_30">
            <DESCRIPTION>Clock output is system clock divided by 30.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="DIVIDED_CLK_EN" lsb="6" size="1">
          <SUMMARY>Enables divided clock output from the GPIOs.</SUMMARY>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Divided clock output is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Divided clock output is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="LOW_BATT_THRESH" value="2" default="0x18" feature="pro2" dev="1" wip="0">
      <SUMMARY>Low battery threshold</SUMMARY>
      <DESCRIPTION>Sets the low battery threshold</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="THRESHOLD" lsb="0" size="5">
          <RANGE min="0" max="31">! desc - "vdd_thresh = (30 + THRESH)/20. Default 2.7V"</RANGE>
          <ENUMERATION value="0" name="HIGH_POWER">
            <DESCRIPTION>1.52V</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31" name="LOW_POWER">
            <DESCRIPTION>3.13V</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="CONFIG" value="3" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Global configuration settings</SUMMARY>
      <DESCRIPTION>Various settings that affect entire chip. If PROTOCOL is specified, the chip is placed into protocol aware state.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="POWER_MODE" lsb="0" size="1">
          <ENUMERATION value="0" name="HIGH_POWER">
            <DESCRIPTION>High performance mode for RX and TX. RX current = 13mA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="LOW_POWER">
            <DESCRIPTION>Low power mode for RX and TX. RX current = 10mA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PROTOCOL" lsb="1" size="3">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Packet format is generic, no dynamic reprogramming of packet handler properties.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Packet format is IEEE802.15.4g compliant.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="FIFO_MODE" lsb="4" size="1">
          <ENUMERATION value="0" name="SPLIT_FIFO">
            <DESCRIPTION>TX and RX FIFO are independent, 64-byte size for each other.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HALF_DUPLEX_FIFO">
            <DESCRIPTION>TX/RX FIFO are sharing with 128-byte size buffer.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_CONFIG" value="4" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>GLOBAL WUT configuation</SUMMARY>
      <DESCRIPTION>Program WUT and enable events, Low Battery Detector support , Low Duty Cycle operation.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CAL_EN" lsb="0" size="1">
          <ENUMERATION value="0" name="DISABLE_CAL">
            <DESCRIPTION>Disable calibration timer</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_CAL">
            <DESCRIPTION>Enable calibration timer.  This will cause the  for 32kHz RC calibration.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_EN" lsb="1" size="1">
          <ENUMERATION value="0" name="DISABLE_WUT">
            <DESCRIPTION>Disable wake up timer</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_WUT">
            <DESCRIPTION>Enable wake up timer</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_LBD_EN" lsb="2" size="1">
          <ENUMERATION value="0" name="DISABLE_LBD">
            <DESCRIPTION>Disable low battery detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_LBD">
            <DESCRIPTION>Enable low battery detect on WUT inteval</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_CAL_PERIOD" lsb="3" size="3">
          <DESCRIPTION>If enabled by CAL_EN, selects how often to power up the chip and perform 32 kHz rc calibration.</DESCRIPTION>
          <ENUMERATION value="0" name="1_SEC">
            <DESCRIPTION>1 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="2_SEC">
            <DESCRIPTION>2 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="4_SEC">
            <DESCRIPTION>4 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="8_SEC">
            <DESCRIPTION>8 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="16_SEC">
            <DESCRIPTION>16 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="32_SEC">
            <DESCRIPTION>32 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="64_SEC">
            <DESCRIPTION>64 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="128_SEC">
            <DESCRIPTION>128 sec</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_LDC_EN" lsb="6" size="2">
          <ENUMERATION value="0" name="DISABLE_LDC">
            <DESCRIPTION>Disable LDC operation</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="RX_LDC">
            <DESCRIPTION>LDC RX Mode.  START_RX end state is used . - Could allow hopping, need to determine how to support LDC in this case</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="TX_LDC">
            <DESCRIPTION>treated as wake-up - START_TX. - START_TX end state is used .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_M_15_8" value="5" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_M_15_8</SUMMARY>
      <DESCRIPTION>Sets HW WUT_M higher byte</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_M_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_M_7_0" value="6" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_M_7_0</SUMMARY>
      <DESCRIPTION>Sets HW WUT_M lower byte.  The M (mantissa) value is only used to define the WUT, and must be set to a minimum of decimal 1.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_M_7_0" lsb="0" size="8">
          <RANGE min="1" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_R" value="7" default="0x20" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_R</SUMMARY>
      <DESCRIPTION>Sets HW WUT_R.  The R (exponent) value is shared between the WUT and the LDC mode duration. The value of R can be 0, and is limited to a maximum of decimal 20 (10100).</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_R" lsb="0" size="5">
          <RANGE min="0" max="20" />
        </FIELD>
        <FIELD name="WUT_SLEEP" lsb="5" size="1">
          <ENUMERATION value="0" name="READY">
            <DESCRIPTION>Go to Ready state after WUT</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SLEEP">
            <DESCRIPTION>Go to Sleep state after WUT</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RSSI_CHECK" lsb="6" size="1">
          <ENUMERATION value="0" name="READY">
            <DESCRIPTION>Disabel check RSSI threshold after Rx state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SLEEP">
            <DESCRIPTION>Enable check RSSI threshold after RX state</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_LDC" value="8" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_LDC</SUMMARY>
      <DESCRIPTION>Sets M for Low Duty Cycle duration.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_LDC" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="ENABLE" value="256" default="0x04" feature="common" dev="1" wip="0">
      <SUMMARY>Interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables top-level interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="PH_INT_STATUS_EN" lsb="0" size="1">
          <DESCRIPTION>If set, Enables PH_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="MODEM_INT_STATUS_EN" lsb="1" size="1">
          <DESCRIPTION>If set, Enables MODEM_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CHIP_INT_STATUS_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables CHIP_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="PH_ENABLE" value="257" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Packet handler interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables packet handler interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIFO_ALMOST_FULL_EN" lsb="0" size="1" feature="rx">
          <DESCRIPTION>If set, Enables RX_FIFO_ALMOST_FULL interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="TX_FIFO_ALMOST_EMPTY_EN" lsb="1" size="1" feature="tx">
          <DESCRIPTION>If set, Enables TX_FIFO_ALMOST_EMPTY interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CRC16_ERROR_EN" lsb="2" size="1" feature="pro2" internal="1">
          <DESCRIPTION>If set, Enables CRC16_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CRC_ERROR_EN" lsb="3" size="1" feature="rx">
          <DESCRIPTION>If set, Enables CRC_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PACKET_RX_EN" lsb="4" size="1" feature="rx">
          <DESCRIPTION>If set, Enables PACKET_RX interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PACKET_SENT_EN" lsb="5" size="1" feature="tx">
          <DESCRIPTION>If set, Enables PACKET_SENT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FILTER_MISS_EN" lsb="6" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables FILTER_MISS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FILTER_MATCH_EN" lsb="7" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables FILTER_MATCH interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="MODEM_ENABLE" value="258" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Modem interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables modem interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="SYNC_DETECT_EN" lsb="0" size="1">
          <DESCRIPTION>If set, Enables SYNC_DETECT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PREAMBLE_DETECT_EN" lsb="1" size="1">
          <DESCRIPTION>If set, Enables PREAMBLE_DETECT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="INVALID_PREAMBLE_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables INVALID_PREAMBLE interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_EN" lsb="3" size="1">
          <DESCRIPTION>If set, Enables RSSI interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_JUMP_EN" lsb="4" size="1">
          <DESCRIPTION>If set, Enables RSSI_JUMP interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="INVALID_SYNC_EN" lsb="5" size="1">
          <DESCRIPTION>If set, Enables INVALID_SYNC interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="CHIP_ENABLE" value="259" default="0x04" feature="common" dev="1" wip="0">
      <SUMMARY>Chip interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables chip interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_EN" lsb="0" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables WUT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="LOW_BATT_EN" lsb="1" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables LOW_BATT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CHIP_READY_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables CHIP_READY interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CMD_ERROR_EN" lsb="3" size="1">
          <DESCRIPTION>If set, Enables CMD_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="STATE_CHANGE_EN" lsb="4" size="1">
          <DESCRIPTION>If set, Enables STATE_CHANGE interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_EN" lsb="5" size="1">
          <DESCRIPTION>If set, Enables FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CAL_EN" lsb="6" size="1">
          <DESCRIPTION>If set, Enables CAL interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="A_MODE" value="512" default="0x01" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register A Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register A.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_A_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="B_MODE" value="513" default="0x02" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register B Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register B.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_B_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="C_MODE" value="514" default="0x09" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register C Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register C.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_C_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="D_MODE" value="515" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register D Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register D.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_A_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="MODE" value="8704" default="0x08" feature="pro2" dev="1" wip="0">
      <SUMMARY>PA operating mode and groups.</SUMMARY>
      <DESCRIPTION>Specify PA mode and HPA/MPA groups</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM2</APIUPDATED>
      <BYTE>
        <FIELD name="PA_MODE" lsb="0" size="2">
          <DESCRIPTION>PA mode.</DESCRIPTION>
          <ENUMERATION value="0" name="CLE">
            <DESCRIPTION>CLE - Switch, for Square Wave or Class E</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SWC">
            <DESCRIPTION>SWC - Switch Current</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PA_GROUP" lsb="2" size="4">
          <DESCRIPTION>ODEV group and unit configuration for devices using programmable step size PA.</DESCRIPTION>
          <ENUMERATION value="1" name="HPA0_1GRP">
            <DESCRIPTION>HPA0 1 group on.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="HPA0_2GRP">
            <DESCRIPTION>HPA0 2 groups on.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PA_RAMP" lsb="7" size="1">
          <DESCRIPTION>PA ramp.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable Txramp</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable Txramp</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="PWR_LVL" value="8705" default="0x7F" feature="common" dev="1" wip="0">
      <SUMMARY>PA Level Configuration</SUMMARY>
      <DESCRIPTION>Set the number of unit LV ODEV devices used in each group.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="DDAC" lsb="0" size="7">
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="BIAS_CLKDUTY" value="8706" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>PA Bias and TX clock duty cycle configuration</SUMMARY>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="OB" lsb="0" size="6">
          <DESCRIPTION>Set the bias current in Switch Current mode for each UNIT of ODEV.</DESCRIPTION>
          <RANGE min="0" max="63" />
        </FIELD>
        <FIELD name="CLK_DUTY" lsb="6" size="2">
          <DESCRIPTION>Select 25% or 50% duty cycle clocks for transmitter to improve transmit efficiency.</DESCRIPTION>
          <ENUMERATION value="0" name="DIFF_50">
            <DESCRIPTION>TXP: 50%, TXN: 50%</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIFF_25">
            <DESCRIPTION>TXP: 25%, TXN: 25%</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="SINGLE_50">
            <DESCRIPTION>TXP: 50%, TXN: 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="SINGLE_25">
            <DESCRIPTION>TXP: 25%, TXN: 0</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="TC" value="8707" default="0x5D" feature="pro2" internal="0" dev="1" wip="0">
      <SUMMARY>PA cascode ramping Configuration</SUMMARY>
      <DESCRIPTION>Configuration control for PA power ramping in order to minimize switching spectrum noise.  In (G)FSK mode, the values of TC and FSK_MOD_DLY should be programmed together so data modulation only occurs after the PA power ramping has been completed.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="FSK_MOD_DLY" lsb="5" size="3">
          <DESCRIPTION>In (G)FSK mode this is the delay from PA enable to the start of modulation.  This is necessary to give the PA time to ramp.</DESCRIPTION>
          <ENUMERATION value="0" name="2_US">
            <DESCRIPTION>Modulation will begin 2us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="6_US">
            <DESCRIPTION>Modulation will begin 6us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="10_US">
            <DESCRIPTION>Modulation will begin 10us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="14_US">
            <DESCRIPTION>Modulation will begin 14us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="18_US">
            <DESCRIPTION>Modulation will begin 18us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="22_US">
            <DESCRIPTION>Modulation will begin 22us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="26_US">
            <DESCRIPTION>Modulation will begin 26us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="30_US">
            <DESCRIPTION>Modulation will begin 30us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TC" lsb="0" size="5">
          <DESCRIPTION>Ramping time (up and down) for the HV cascode of output device.           The ramp rate is determined by the formula: Ramp time=20us/(32-TC)        NOTE: If using (G)FSK modulation this value must be programmed to a value less than 29.</DESCRIPTION>
          <RANGE min="0" max="31" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="RAMP_EX" value="8708" default="0x00" feature="pro2" internal="0" dev="1" wip="0">
      <SUMMARY>PA ramping voltage driving txramp pad Configuration</SUMMARY>
      <DESCRIPTION>Txramp_stop will receive ook signal from digital and translate that into a 0 to 1.5V ramping voltage driving txramp pad. This is used to provide a ramping reference for external power amplifier.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="TC" lsb="0" size="4">
          <DESCRIPTION>Ramping time (up and down) determined by the formula: Ramp time=20us/(32-TC).</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
        <FIELD name="VSET" lsb="4" size="4">
          <DESCRIPTION>Regulator voltage settings. 0 represents 1.0v, 15 represents 1.5v</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="PFDCP_CPFF" value="8960" default="0x2C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Feed forward charge pump current selection.</SUMMARY>
      <DESCRIPTION>The current level is 5uA times the selection value.</DESCRIPTION>
      <DESCRIPTION>The 7th bit is a test bit to be used only for debugging  when the phase noise is excessive. The 7th bit gives 160uA and not 32.uA.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="cp_ff_cur" lsb="0" size="7">
          <ENUMERATION value="0">
            <DESCRIPTION>0 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>5 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="127">
            <DESCRIPTION>Maximum 475 uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="PFDCP_CPINT" value="8961" default="0x0E" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Integration charge pump current selection.</SUMMARY>
      <DESCRIPTION>The current level is 5uA times the selection value.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="cp_int_cur" lsb="0" size="4">
          <ENUMERATION value="0">
            <DESCRIPTION>0 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>5 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>Maximum 75 uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="VCO_KV" value="8962" default="0x0B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Scaling on integrated-path Kv and feed forward path Kv.</SUMMARY>
      <DESCRIPTION>Scaling on integrated-path Kv and feed forward path Kv.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="kv_int" lsb="0" size="2">
          <DESCRIPTION>Sets the scaling on integrated-path Kv.</DESCRIPTION>
          <ENUMERATION value="0" name="GND">
            <DESCRIPTION>Sets kv_int port of VCO to ground,  this is independent of kv_int_opnlop settings.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="33PERCENT">
            <DESCRIPTION>Sets kv_int to 1/3 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="66PENCENT">
            <DESCRIPTION>Sets kv_int to 2/3 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="MAX">
            <DESCRIPTION>Sets kv_int to its maximum value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="kv_dir" lsb="2" size="2">
          <DESCRIPTION>Sets the scaling on feed forward path Kv.</DESCRIPTION>
          <ENUMERATION value="0" name="GND">
            <DESCRIPTION>Sets kv_dir port of VCO to ground,  this is independent of kv_dir_opnlop settings.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HALF">
            <DESCRIPTION>Sets kv_dir to 1/2 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="MAX">
            <DESCRIPTION>Sets kv_dir to its maximum value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="kv_min" lsb="4" size="1">
          <DESCRIPTION>Absolute minimum value of KV, this is independeant of VCO_KVCAL setting.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>use property VCO_KVCAL value</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>sets KV to minimum value</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT3" value="8963" default="0x04" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Loop filter of R2 value</SUMMARY>
      <DESCRIPTION>The value of R2 from 18kOhm to 144kOhm.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_r2" lsb="0" size="3">
          <RANGE min="0" max="7" />
          <ENUMERATION value="0">
            <DESCRIPTION>R2 = 18k</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>R2 = 144k</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT2" value="8964" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>value of C2 for loop filter</SUMMARY>
      <DESCRIPTION>The value of C2 from 877fF to 11.25pF with 335fF LSB, 5-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_c2" lsb="0" size="5">
          <ENUMERATION value="0">
            <DESCRIPTION>C2 = 877fF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31">
            <DESCRIPTION>C2 = 11.25pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT1" value="8965" default="0x73" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>value of C1 and C3 for loop filter</SUMMARY>
      <DESCRIPTION>value of C1 and C3 for loop filter</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_c3" lsb="0" size="2">
          <DESCRIPTION>The value of C3 linearly from 9pF up to 12pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>C3 =  9pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>C3 = 10pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>C3 = 11pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>C3 = 12pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="lpf_ff_c1_code" lsb="2" size="2">
          <DESCRIPTION>Offsets the value of C1 with 1pF steps from 0 up to 3pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>delta C1 = 0pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>delta C1 = 1pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>delta C1 = 2pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>delta C1 = 3pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="lpf_ff_c1" lsb="4" size="3">
          <DESCRIPTION>The value of C1 from 4.55pF to 7.21pF with 380fF LSB, 3-bit.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>C1 = 4.55pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>C1 = 4.93pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>C1 = 5.31pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>C1 = 5.69pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>C1 = 6.07pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>C1 = 6.45pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>C1 = 6.83pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>C1 = 7.21pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT0" value="8966" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Bias current of the loop filter.</SUMMARY>
      <DESCRIPTION>Bias current of the loop filter, 25uA, 34uA, 50uA or 100uA.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_bias" lsb="0" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>25uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>34uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>50uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>100uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="VCO_KVCAL" value="8967" default="0x05" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Scaling entire KV of VCO.</SUMMARY>
      <DESCRIPTION>Scaling on VCO KV for all parameters.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="kvcal" lsb="0" size="4">
          <DESCRIPTION>Sets the scaling on the VCO ladder</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Max voltage settings</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>Min voltage settings</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="15" />
        </FIELD>
        <FIELD name="ladr_select" lsb="4" size="1">
          <DESCRIPTION>Enable VCO ladder.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable VCO ladder</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable VCO ladder</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MOD_TYPE" value="8192" default="0x02" feature="pro2" dev="1" wip="0">
      <SUMMARY>Modulation Type</SUMMARY>
      <DESCRIPTION>This property selects between OOK, FSK, 4FSK and GFSK modulation, modulation source, and tx direct mode control.</DESCRIPTION>
      <DESCRIPTION>The modulator must be configured for one mode through the entire packet.  If portions of the packet alternate between FSK and 4FSK modes, the modem should be programmed to 4FSK mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="MOD_TYPE" lsb="0" size="3">
          <ENUMERATION value="0" name="CW">
            <DESCRIPTION>CW</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="OOK">
            <DESCRIPTION>OOK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="2FSK">
            <DESCRIPTION>2FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="2GFSK">
            <DESCRIPTION>2GFSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="4FSK">
            <DESCRIPTION>4FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="4GFSK">
            <DESCRIPTION>4GFSK</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MOD_SOURCE" lsb="3" size="2">
          <ENUMERATION value="0" name="PACKET">
            <DESCRIPTION>Modulation source is packet handler fifo</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIRECT">
            <DESCRIPTION>Modulation source is direct mode pin</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="PSEUDO">
            <DESCRIPTION>Modulation source is pseudo-random generator</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_GPIO" lsb="5" size="2">
          <DESCRIPTION>
            Selects which GPIO will be used as the TX data source if MOD_SOURCE = DIRECT.  The gpio selected here must be configured (using <REFERENCE>GPIO_PIN_CFG</REFERENCE>) as a CMOS input.
          </DESCRIPTION>
          <ENUMERATION value="0" name="GPIO0">
            <DESCRIPTION>TX direct mode uses gpio0 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="GPIO1">
            <DESCRIPTION>TX direct mode uses gpio1 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="GPIO2">
            <DESCRIPTION>TX direct mode uses gpio2 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GPIO3">
            <DESCRIPTION>TX direct mode uses gpio3 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_TYPE" lsb="7" size="1">
          <ENUMERATION value="0" name="SYNC">
            <DESCRIPTION>Direct mode operates in synchronous mode, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ASYNC">
            <DESCRIPTION>Direct mode operates in asynchronous mode, applies to TX only.  GFSK is not supported.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MAP_CONTROL" value="8193" default="0x80" feature="pro2" dev="1" wip="0">
      <SUMMARY>Controls bit mapping.</SUMMARY>
      <DESCRIPTION>Modem Mapping Control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="eninv_adcq" internal="1" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert ADC Q channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert ADC Q channel.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="eninv_fd" lsb="4" size="1">
          <DESCRIPTION>If set, frequency deviation's priority  from negative to positive.</DESCRIPTION>
        </FIELD>
        <FIELD name="eninv_txbit" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert TX data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert TX data bits.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="eninv_rxbit" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert RX data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert RX data bits.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enmanch" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Disable Manchester coding.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable Manchester coding.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DSM_CTRL" value="8194" default="0x07" feature="pro2" dev="1" wip="0">
      <SUMMARY>DSM control</SUMMARY>
      <DESCRIPTION>Delta Sigma Modulator control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dsm_order" lsb="0" size="2">
          <DESCRIPTION>DSM Mode</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>0 order, with 0 output continuously.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>1st order, on noise shaping.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>2nd order, MASH 1-1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>3rd order, MASH 1-1-1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsm_lsb" lsb="2" size="1">
          <DESCRIPTION>If set, DSM LSB input will be high all times.</DESCRIPTION>
        </FIELD>
        <FIELD name="dsm_rst" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>DSM reset is not active.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM will be in reset state until it is clear.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmdttp" lsb="4" size="1">
          <DESCRIPTION>Dithering type</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>+1/0 is added to DSM input LSB.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>+1/-1 is added to DSM input LSB.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmdt_en" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>DSM dithering is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM dithering is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsm_mode" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>MASH 1-1-1 DSM will be selected.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>A single loop DSM will be selected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmclk_sel" lsb="7" size="1">
          <DESCRIPTION>DSM clock source selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>DSM clock comes from 30MHz PLL feedback clock.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM clock comes from 30MHz crystal clock.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_2" value="8195" default="0x0F" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_23_16" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_1" value="8196" default="0x42" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_0" value="8197" default="0x40" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_3" value="8198" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 3 of TX NCOs modulo and TX filter oversampling ratio.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_25_24" lsb="0" size="2">
          <RANGE min="0" max="3" />
        </FIELD>
        <FIELD name="txosr" lsb="2" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>TX filter's output oversampling ratio is 10. GFSK Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>TX filter's output oversampling ratio is 40. GFSP Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>TX filter's output oversampling ratio is 20. GFSP Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Reserved</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_2" value="8199" default="0xC9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_23_16" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_1" value="8200" default="0xC3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_0" value="8201" default="0x80" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380.  Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_2" value="8202" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of TX frequency deviation (a 17-bit unsigned number).  This only programs the MSB of TX frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_16" lsb="0" size="1">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_1" value="8203" default="0x06" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_0" value="8204" default="0xD3" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_OFFSET_1" value="8205" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of frequency offset adjustment(a 16-bit signed number).</SUMMARY>
      <DESCRIPTION>In TX mode, frequency offset is used to provide an offset to  the programmed TX frequency. This allows fine tuning of the TX frequency  to account for the variability of the TX reference frequency.</DESCRIPTION>
      <DESCRIPTION>In RX mode, only when AFC is disabled, the frequency offset can be  adjusted manually by this property.</DESCRIPTION>
      <DESCRIPTION>Frequency offset adjustment is a signed 16-bit.  The range is from -400kHz to +400kHz.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqoffset_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_OFFSET_0" value="8206" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of frequency offset(a 16-bit signed number).</SUMMARY>
      <DESCRIPTION>In TX mode, frequency offset is used to provide an offset to  the programmed TX frequency. This allows fine tuning of the TX frequency  to account for the variability of the TX reference frequency.</DESCRIPTION>
      <DESCRIPTION>In RX mode, only when AFC is disabled, the frequency offset can be  adjusted manually by this property.</DESCRIPTION>
      <DESCRIPTION>Frequency offset adjustment is a signed 16-bit.  The range is from -400kHz to +400kHz.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqoffset_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_8" value="8207" default="0x67" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 8th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 8th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_7" value="8208" default="0x60" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 7th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 7th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe7" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_6" value="8209" default="0x4D" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 6th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 6th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe6" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_5" value="8210" default="0x36" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 5th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 5th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe5" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_4" value="8211" default="0x21" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 4th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 4th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe4" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_3" value="8212" default="0x11" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 3rd coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 3rd coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe3" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_2" value="8213" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 2nd coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 2nd coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe2" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_1" value="8214" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 1st coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 1st coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe1" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_0" value="8215" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 0th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 0th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_RAMP_DELAY" value="8216" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>TX filter ramp delay setting.</SUMMARY>
      <DESCRIPTION>Unit in TX bit cycle, it is calculated according to modulation type.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ramp_dly" lsb="0" size="3">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MDM_CTRL" value="8217" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>MDM control</SUMMARY>
      <DESCRIPTION>Detector selection and PM pattern configuration.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ph_src_sel" lsb="7" size="1">
          <DESCRIPTION>BCR/Slicer phase source selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Input from phase computer output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Input from detector's output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_CONTROL" value="8218" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Fixed or scalable IF.</SUMMARY>
      <DESCRIPTION>Specifies fixed-IF(468.75kHz), zero-IF, or scalable IF.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="fixif" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>scaled-IF mode</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>fixed-IF mode, if_freq should be set to 468.75kHz</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="zeroif" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>normal mode</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>zero-IF mode, if_freq should be set to 0</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_2" value="8219" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of IF frequency setting.</SUMMARY>
      <DESCRIPTION>Bits 16 an 17 of the 18-bit IF frequency. Specify fixed-IF(468.75kHz), zero-IF, or scalable IF.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_17_16" lsb="0" size="2">
          <DESCRIPTION>Bits 16 an 17 of the 18-bit IF frequency.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_1" value="8220" default="0xC0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of IF frequency setting</SUMMARY>
      <DESCRIPTION>IF frequency is 18-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_0" value="8221" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of IF frequency setting</SUMMARY>
      <DESCRIPTION>IF frequency is 18-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DECIMATION_CFG1" value="8222" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the three CIC filter decimator ratios.</SUMMARY>
      <DESCRIPTION>Specifies the exponent of decimation ratios of the three CIC decimators in RX filter chain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ndec0" lsb="1" size="3">
          <DESCRIPTION>OOK modem CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec0.</DESCRIPTION>
          <DESCRIPTION>ndec0 should be set to 0 for non-OOK modem.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>decimating by 16</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>decimating by 32</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>decimating by 64</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>decimating by 128</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ndec1" lsb="4" size="2">
          <DESCRIPTION>First stage CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec1.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ndec2" lsb="6" size="2">
          <DESCRIPTION>Second stage CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec2.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DECIMATION_CFG0" value="8223" default="0x20" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies miscellaneous decimator filter selections.</SUMMARY>
      <DESCRIPTION>This property specifies the selection of the two polyphase filters preceding CIC filters,  the droop compensation filter, the RX decimate by 8 2x filter and the channel filter power mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxgainx2" lsb="0" size="1">
          <DESCRIPTION>Double filter's gain for decimating by 8.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>double filter's gain for decimating by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dwn2byp" lsb="4" size="1">
          <DESCRIPTION>Controls decimation by 2 filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass decimate-by-2 polyphase filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dwn3byp" lsb="5" size="1">
          <DESCRIPTION>Controls decimation by 3 filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass decimate-by-3 polyphase filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="droopfltbyp" lsb="6" size="1">
          <DESCRIPTION>Controls droop compensation filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass droop compensation filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="chflt_lopw" lsb="7" size="1">
          <DESCRIPTION>Controls channel filter power mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Channel filter operates in low power mode,  i.e., the number of taps is reduced from 27 to 15.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_20" value="8224" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_21" value="8225" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_OSR_1" value="8226" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of RX symbol oversampling rate at BCR/Slicer (12-bit unsigned number).</SUMMARY>
      <DESCRIPTION>High byte of RX symbol oversampling rate at BCR/Slicer (12-bit unsigned number).</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxosr_11_8" lsb="0" size="4">
          <DESCRIPTION>High byte of RX symbol oversampling rate at BCR/Slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_OSR_0" value="8227" default="0x4B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of RX symbol oversampling rate at BCR/Slicer.</SUMMARY>
      <DESCRIPTION>Low byte of RX symbol oversampling rate at BCR/Slicer, total 12 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxosr_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of RX symbol oversampling rate at BCR/Slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_2" value="8228" default="0x06" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Specifies the 6 MSBs of the BCR NCO offset.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_21_16" lsb="0" size="6">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_1" value="8229" default="0xD3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_0" value="8230" default="0xA0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Low byte of RX NCO offset.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GAIN_1" value="8231" default="0x06" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR loop gain (an unsigned 11-bit number).</SUMMARY>
      <DESCRIPTION>High byte of clock recovery timing loop gain, total 11 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crgain_10_8" lsb="0" size="3">
          <DESCRIPTION>High byte of clock recovery timing loop gain.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GAIN_0" value="8232" default="0xD3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of RX BCR loop gain.</SUMMARY>
      <DESCRIPTION>Low byte of clock recovery timing loop gain, total 11 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crgain_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GEAR" value="8233" default="0x02" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX BCR loop gear control.</SUMMARY>
      <DESCRIPTION>RX BCR loop gear control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crslow" lsb="0" size="3">
          <DESCRIPTION>The slow gear applies after preamble is detected.  The effective BCR loop gain of: crgain/(2^crslow) will be applied in clock recovery  timing loop.</DESCRIPTION>
        </FIELD>
        <FIELD name="crfast" lsb="3" size="3">
          <DESCRIPTION>The fast gear applies before preamble is detected.  The effective BCR loop gain of: crgain/(2^crfast) will be applied in clock recovery  timing loop.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_MISC1" value="8234" default="0xC0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>: Byte 1 of RX BCR loop misc control.</SUMMARY>
      <DESCRIPTION>specifies the RX BCR loop misc controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="bcrfbbyp" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR feedback phase compensation is bypassed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="slicefbbyp" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Slicer feedback phase compensation is bypassed</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rxncocomp" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR NCO compensation is enabled when data rate error is greater than 1%.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Rxcomp_lat" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>BCR NCO compensation is sampled by end of preamble</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR NCO compensation is sampled by preamble detection</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Crgainx2" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR loop gain is doubled</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Dis_midpt" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR midpoint phase correction is disabled; this bit shall be  set if preamble is in '1010' patterns.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Esc_midpt" lsb="0" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>When BCR mid-point phase is detected, NCO will stop running  for one sample clock to escape BCR mid-point phase sample.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>When BCR mid-point phase is detected, current phase error is  added to NCO to escape BCR mid-point phase sample.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_MISC0" value="8235" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of RX BCR loop misc control.</SUMMARY>
      <DESCRIPTION>Specifies the RX BCR loop misc controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="adcwatch" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC watch dog is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC watch dog is enabled. If the invalid preamble is detected and  no 1010 pattern is detected, ADC reset will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="adcrst" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC watch dog is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable ADC reset from AGC loop.  If IF-PD's current and previous high threshold exceed,  ADC reset will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="distogg" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enabled. If the phase differential output is zero,  the discriminator output will be toggling.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ph0size" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>5 consecutive zeros of phase differential output will cause RX machine reset.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>3 consecutive zeros of phase differential output will cause RX machine reset.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GEAR" value="8236" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX AFC loop gear control.</SUMMARY>
      <DESCRIPTION>RX AFC loop gear control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afc_slow" lsb="0" size="3">
          <DESCRIPTION>AFC Low Gear setting.</DESCRIPTION>
          <DESCRIPTION>It will be applied to AFC gain control after the preamble is detected.</DESCRIPTION>
        </FIELD>
        <FIELD name="afc_fast" lsb="3" size="3">
          <DESCRIPTION>AFC High Gear setting.</DESCRIPTION>
          <DESCRIPTION>It will be applied to AFC gain control before the preamble is detected.</DESCRIPTION>
        </FIELD>
        <FIELD name="gear_sw" lsb="6" size="2">
          <DESCRIPTION>AFC gear swith control source.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Preamble detection</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Sync word detection</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Estimated frequency error of Mean detector is consecutively  less than the half eye-threshold. NOTE: This consecutive number is defined in register sch_frzth.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Preamble detection</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_WAIT" value="8237" default="0x23" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX AFC loop wait time control.</SUMMARY>
      <DESCRIPTION>Short and long wait periods after AFC correction.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lgwait" lsb="0" size="4">
          <DESCRIPTION>This specifies the long wait period per AFC correction cycle after preamble is detected.  When set to '0' then AFC is disabled.</DESCRIPTION>
        </FIELD>
        <FIELD name="shwait" lsb="4" size="4">
          <DESCRIPTION>This specifies the short wait period per AFC correction cycle before preamble is detected. Effective wait time is (shwait+1)*2Tb.  When set to '0' then AFC is disabled.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GAIN_1" value="8238" default="0x83" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of AFC loop gain</SUMMARY>
      <DESCRIPTION>High byte of AFC loop gain, total 13 bits</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="afcgain_12_8" lsb="0" size="5">
          <DESCRIPTION>High byte of AFC loop gain.</DESCRIPTION>
        </FIELD>
        <FIELD name="afcbd" lsb="6" size="1">
          <SUMMARY>Select CH filter coefficients.</SUMMARY>
          <DESCRIPTION>If set, CH filter coefficients will be switched to the second CH filter coefficients (rx2coe0~13) from the first CH filter coefficients (rx1coe0~13) after the preamble is detected.  If clear, CH  filter will use the first CH filter coefficients (rx1coe0~13) for the entire RX.</DESCRIPTION>
        </FIELD>
        <FIELD name="enafc" lsb="7" size="1">
          <DESCRIPTION>Enable frequency estimator.</DESCRIPTION>
          <DESCRIPTION>If set, estimated frequency error will be available to feedback to  frac-N, BCR and slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GAIN_0" value="8239" default="0x69" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of AFC loop gain</SUMMARY>
      <DESCRIPTION>Low byte of AFC loop gain, total 13 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afcgain_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of AFC loop gain.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_LIMITER_1" value="8240" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Freeze AFC and set high byte of AFC limiter.</SUMMARY>
      <DESCRIPTION>Freeze AFC and set high byte of AFC limiter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afclim_14_8" lsb="0" size="7">
          <DESCRIPTION>High byte of AFC limiter, total 15 bits</DESCRIPTION>
          <DESCRIPTION>If the MSB of AFC limiter is set, internal limiter value is afclim * 8.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_LIMITER_0" value="8241" default="0x40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of AFC limiter.</SUMMARY>
      <DESCRIPTION>Low byte of AFC limiter. Total 15 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afclim_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_MISC" value="8242" default="0xA0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies misc AFC control bits.</SUMMARY>
      <DESCRIPTION>Specifies misc AFC control bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="enafcfrz" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>AFC will operate over the entire packet.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will be frozen after the gear switching.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enfbpll" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable AFC correction value to feedback to PLL.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="en2Tb_est" lsb="5" size="1">
          <DESCRIPTION>This bit must be set for standard packet mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>AFC will use MA or Mean detector frequency estimator's output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will use 2Tb frequency estimator's output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enfzpmend" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will be frozen at end of '10101' pattern preamble.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enafc_clksw" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>2Tb frequency estimator's clock will be  switched from free-running bit clock to BCR's bit clock  after the preamble is detected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ook_zerog" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>FSK LO modulation will be enabled in ook zero-IF mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>GFSK LO modulation will be enabled in ook zero-IF mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="non_frzen" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>AFC frozen will be disabled while Mean detector found longer consecutive ones or zeros than search period.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC frozen will be enabled while Mean detector found longer consecutive ones or zeros than search period .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_ZIFOFF" value="8243" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>AFC fixed frequency offset in zero IF mode.</SUMMARY>
      <DESCRIPTION>AFC fixed frequency offset in zero IF mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="zeroff" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ADC_CTRL" value="8244" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sigma Deta ADC controlling.</SUMMARY>
      <DESCRIPTION>ADC complex or real mode selection</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="realadc" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC complex mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC real mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="en_drst" lsb="3" size="1">
          <ENUMERATION value="1">
            <DESCRIPTION>Enable direct reset by modem.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="hgain" lsb="4" size="1">
          <ENUMERATION value="1">
            <DESCRIPTION>Adds 12dB gain to ADC input for IR calibration.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_CONTROL" value="8245" default="0xE0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>AGC control</SUMMARY>
      <DESCRIPTION>AGC control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rst_pkdt_period" lsb="0" size="1">
          <DESCRIPTION>Reset peak detector periodically.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Reset only when the digital received a '1' from  the synchronized peak detector output</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC will reset the peak detector periodically.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="adc_gain_cor_en" lsb="1" size="1">
          <DESCRIPTION>Sets ADC input gain when minimal AGC gain is detected.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>ADC input gain correction is disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC input gain is lowered by 6dB</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="agc_slow" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC speed will is reduced by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sgi_n" lsb="4" size="1">
          <DESCRIPTION>AGC stop increasing gain override bit.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>AGC gain increases during signal reductions are prevented.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC gain increases during signal reductions are allowed.  Only effective during preamble, prior to detection of PREAMBLE_VALID  signal in ANT-DIV mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rfpdslow" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>RFPG loop will slow down the gain decrease in -6dB step.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RFPG loop will slow down the gain decrease in -3dB step.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ifpdslow" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>IFPG loop will slow down the gain decrease in -6dB step.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>IFPG loop will slow down the gain decrease in -3dB step.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="agcovpkt" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The full AGC operates only during Preamble,  gain increases over remainder of packet are not allowed.  Gain reductions in the event of signal level increases are always allowed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC function operates over the entire packet.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_36" value="8246" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_37" value="8247" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_WINDOW_SIZE" value="8248" default="0x11" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the AGC measurement and settling window size.</SUMMARY>
      <DESCRIPTION>Sets PGA and LNA settling time window and measurement time window.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="settlewin" lsb="0" size="4">
          <DESCRIPTION>Settling window size, effective settling time is settlewin/Fs_rx period)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
        <FIELD name="measwin" lsb="4" size="4">
          <DESCRIPTION>Measurement window size, effective measurement time  is measwin/Fs_rx period)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_RFPD_DECAY" value="8249" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Sets RF detector decay time.</SUMMARY>
      <DESCRIPTION>Sets RF detector decay time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rfpd_decay" lsb="0" size="8">
          <DESCRIPTION>Effective decay time is rfpdcay/Fs_rx)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_IFPD_DECAY" value="8250" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Sets IF detector decay time.</SUMMARY>
      <DESCRIPTION>Sets IF detector decay time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ifpd_decay" lsb="0" size="8">
          <DESCRIPTION>Effective decay time is ifpdcay/Fs_rx)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_GAIN1" value="8251" default="0x0B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the gain factor of the secondary branch in 4(G)FSK ISI-suppression.</SUMMARY>
      <DESCRIPTION>Controls 4(G)FSK suppression gain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fsk_isis_disable" lsb="7" size="1">
          <DESCRIPTION>Second phase compensation factor for 4(G)FSK.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Disable 4(G)FSK ISI-suppression.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4fsk_gain1" lsb="0" size="7">
          <DESCRIPTION>Gain factor of the secondary branch in 4(G)FSK ISI-suppression.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_GAIN0" value="8252" default="0x1C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the gain factor of the primary branch in 4(G)FSK ISI-suppression.</SUMMARY>
      <DESCRIPTION>Controls 4(G)FSK suppression gain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fsk_gain0" lsb="0" size="7">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_TH1" value="8253" default="0x40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of 4(G)FSK slicer threshold.</SUMMARY>
      <DESCRIPTION>High byte of 4(G)FSK slicer threshold.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskth_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_TH0" value="8254" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of 4(G)FSK slicer threshold.</SUMMARY>
      <DESCRIPTION>Low byte of 4(G)FSK slicer threshold.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskth_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_MAP" value="8255" default="0xB4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>4(G)FSK symbol mapping code.</SUMMARY>
      <DESCRIPTION>4(G)FSK symbol mapping code.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskmap" lsb="0" size="8">
          <ENUMERATION value="180">
            <DESCRIPTION>Graycoding</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="228">
            <DESCRIPTION>Graycoding is bypass - normal binary mapping is used.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_PDTC" value="8256" default="0x2B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK Peak Detector Time Control.</SUMMARY>
      <DESCRIPTION>OOK peak detector decay and attack time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="decay" lsb="0" size="4">
          <DESCRIPTION>OOK peak detector decay time.</DESCRIPTION>
          <DESCRIPTION>Peak detector value discharges at rate  proportional to 2^(-decay).</DESCRIPTION>
        </FIELD>
        <FIELD name="attack" lsb="4" size="3">
          <DESCRIPTION>OOK peak detector attack time.</DESCRIPTION>
          <DESCRIPTION>Peak detector value charges up at rate  proportional to 2^(-attack).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_BLOPK" value="8257" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK control</SUMMARY>
      <DESCRIPTION>Defined how many dB below PK.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="bw_pk" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_CNT1" value="8258" default="0xA4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK control</SUMMARY>
      <DESCRIPTION>OOK control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="squelch" lsb="0" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>Squelch function is off.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>When no signal is received, there is  no toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>When PM is not detected, there is no  toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>When no signal or PM is not detected,  there is no toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="slicer_fast" lsb="2" size="1">
          <DESCRIPTION>This bit effects 2(G)FSK/OOK mode only.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Discriminator's slicer output is  de-glitched by bit clock.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Discriminator's slicer output is  de-glitched by sample clock to reduce  turn-around time.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="raw_syn" lsb="3" size="1">
          <DESCRIPTION>If set, raw data output is synchronized to bit clock.</DESCRIPTION>
        </FIELD>
        <FIELD name="ma_freqdwn" lsb="4" size="1">
          <DESCRIPTION>If set, estimated frequency from MA detector  will be trunked 4 bits to avoid overflow.</DESCRIPTION>
          <DESCRIPTION>AFC gain should be increased 16 times if this  bit is set.</DESCRIPTION>
          <DESCRIPTION>It is recommended to set this bit for  Rb smaller than 1kbps and/or hModInd greater than 50  if MA detector's frequency error estimator is  selected.</DESCRIPTION>
        </FIELD>
        <FIELD name="ookfrzen" lsb="5" size="1">
          <DESCRIPTION>This bit only has an effect after preamble is detected.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC and OOK moving average detector's  threshold output will be frozen after the preamble is detected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="s2p_map" lsb="6" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>S2p_mapping 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>S2p_mapping 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>S2p_mapping 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>S2p_mapping 3</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_MISC" value="8259" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Control OOK Peak Detector.</SUMMARY>
      <DESCRIPTION>Control OOK Peak Detector.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ookfastma" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Deploy longer MA filter window</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="detector" lsb="0" size="2">
          <DESCRIPTION>Controls the data detector.</DESCRIPTION>
          <ENUMERATION value="0" name="ma_pk">
            <DESCRIPTION>In OOK modem only, both MA detector  and peak detector will be selected and two  detector's outputs were AND'd together for the final result.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="pk">
            <DESCRIPTION>Peak detector will be selected for OOK  modem or Raw data mode. When OOK peak detector is enabled,  then the attack and decay rates of how the  peak level is charged up or discharged down  is programmable. The larger the value in these  fields, the slower the attack and decay  times.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="ma">
            <DESCRIPTION>MA detector will be selected for OOK  modem or Raw data mode.</DESCRIPTION>
            <DESCRIPTION>When the Moving Average Detector is  enabled, then the slicing threshold is  developed from the average of the previous  data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="mean">
            <DESCRIPTION>Max-Min detector will be selected for  Raw data mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_SEARCH" value="8260" default="0x56" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Defines search period control for raw / nonstandard mode.</SUMMARY>
      <DESCRIPTION>Searching period for high and low gear.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="schprd_low" lsb="0" size="2">
          <DESCRIPTION>Searching period of MA or Mean inside the  detector during low gear.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Tb * 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Tb * 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Tb * 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Tb * 16</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="schprd_hi" lsb="2" size="2">
          <DESCRIPTION>Searching period of MA or Mean inside the  detector during high gear.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Tb * 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Tb * 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Tb * 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Tb * 16</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sch_frzth" lsb="4" size="3">
          <DESCRIPTION>Mean search frozen threshold.</DESCRIPTION>
        </FIELD>
        <FIELD name="sch_frzen" lsb="7" size="1">
          <DESCRIPTION>Freeze MA or Mean searching engine once switch to low gear.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_CONTROL" value="8261" default="0x02" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Defines gain and enable controls for raw / nonstandard mode.</SUMMARY>
      <DESCRIPTION>Defines gain and enable controls for raw / nonstandard mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="unstdpk" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>MA or mean frequency error estimator.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="conschk_byp" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>If unstdpk is '1', and conschk_byp= '0', the  consecutive '1' or '0' of payload data during 'Sch_Period' will stop the mean  value being updated.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="pm_pattern" lsb="2" size="2">
          <DESCRIPTION>PM pattern configuration.  The preamble detection is done inside modem.</DESCRIPTION>
          <ENUMERATION value="0" name="1010">
            <DESCRIPTION>If preamble has '1010' pattern, modem  is recommended to work on standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="consecutive_one">
            <DESCRIPTION>If preamble has more than 32-bit  consecutive '1' pattern, modem is recommended  to work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="consecutive_zero">
            <DESCRIPTION>If preamble has more than 32-bit  consecutive '0' pattern, modem is recommended  work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="random">
            <DESCRIPTION>If preamble is random data, modem is  recommended to work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rawgain" lsb="0" size="2">
          <DESCRIPTION>Raw data MA filter gain.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Gain = 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Gain = 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Gain = 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Gain = 1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_EYE_1" value="8262" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</SUMMARY>
      <DESCRIPTION>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="raweye_10_8" lsb="0" size="3">
          <DESCRIPTION>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_EYE_0" value="8263" default="0xA3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of eye-open detector threshold.</SUMMARY>
      <DESCRIPTION>Eye-open detector threshold is a unsigned 11-bit.  The reset of bits are set by property RAW_EYE_1</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="raweye_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ANT_DIV_MODE" value="8264" default="0x12" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Antenna mode setting</SUMMARY>
      <DESCRIPTION>Antenna mode seting</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="anwait" lsb="0" size="3">
          <DESCRIPTION>The period between toggling selection of antennas. During the initial search for a  valid packet (i.e., the search for the first PREAMBLE_VALID signal), a timer is  maintained to determine when to periodically toggle between antennas.  This default  value of this timeout period is 16 bit periods, but is configurable by anwait. The periods between toggling of antennas = ( anwait + 2 ) * 4 bit.</DESCRIPTION>
        </FIELD>
        <FIELD name="skip2phth" lsb="3" size="1">
          <DESCRIPTION>The threshold of skipping second phase PM detection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>16dB threshold is set for skipping second phase PM detection.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>11dB threshold is set for skipping second phase PM detection.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="skip2ph" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The antenna diversity algorithm always measures  the RSSI value on the alternate antenna, regardless of signal strength on the  initial antenna.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>the current RSSI value on the first antenna which observes  a PREAMBLE_VALID signal is greater than the value (determined by  bit 'skip2phth')  above the previous RSSI value from the alternate  antenna, the signal is deemed sufficiently strong; there is no need  to switch to and evaluate the second antenna.  If the difference in  RSSI value is less than the value (determined by bit 'skip2phth'), the  algorithm proceeds with evaluation of the signal strength on the alternate  antenna, as normal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="byp1p5" lsb="5" size="1">
          <DESCRIPTION>Bias of the second phase antenna selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>0dB</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>1.5dB</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="swant_timer" lsb="6" size="2">
          <DESCRIPTION>Additional number of bit periods to wait for RSSI value to  stabilize during Antenna Diversity 2nd phase antenna evaluation. ].  Effective only during Antenna Diversity.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Swant_time_0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Swant_time_1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Swant_time_2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Swant_time_3</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ANT_DIV_CONTROL" value="8265" default="0x80" feature="pro2" dev="1" wip="0">
      <SUMMARY>Specifies antenna diversity controls.  Antenna diversity mode is valid for standard packet only.</SUMMARY>
      <DESCRIPTION>Specifies pm detection threshold and GPIO config in antenna diversity mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="antdiv" lsb="0" size="3">
          <DESCRIPTION>The GPIO must be configured for antenna diversity  for the algorithm to work properly.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=1, GPIO Ant2=0: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=0, GPIO Ant2=1: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=1, GPIO Ant2=0: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=0, GPIO Ant2=1: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm in beacon mode: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm in beacon mode: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="matap" lsb="3" size="1">
          <DESCRIPTION>Number of taps for moving average filter during Antenna Diversity RSSI evaluation. Allows for reduced noise variation on measured RSSI value but with slower update rate.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Filter tap length is 8*Tb prior to first PREAMBLE_VALID, and 4*Tb thereafter.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Filter tap length is 8*Tb.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ant2pm_thd" lsb="4" size="4">
          <DESCRIPTION>The second phase preamble detection threshold in ANT-DIV mode. Default is set to 8 bits threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_THRESH" value="8266" default="0xFF" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI threshold control</SUMMARY>
      <DESCRIPTION>Selects threshold for clear channel assessment.  If RSSI value is above this threshold, the CCA GPIO  will be high.  If the RSSI value crosses above this threshold and the RSSI interrupt will be generated.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_JUMP_THRESH" value="8267" default="0x0C" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI jumping detection threshold.</SUMMARY>
      <DESCRIPTION>RSSI jumping detection threshold, step in 1dB.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rssijmpthd" lsb="0" size="7">
          <DESCRIPTION>RSSI jumping detection threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_CONTROL" value="8268" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI control</SUMMARY>
      <DESCRIPTION>
        Selects where in the packet to latch the RSSI value in the RSSI Latch fast response register.  The latched value can also be read using <REFERENCE>GET_MODEM_STATUS</REFERENCE> command.
      </DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="LATCH" lsb="0" size="3">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Latch disabled, will always read 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="PREAMBLE">
            <DESCRIPTION>Latches at preamble detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="SYNC">
            <DESCRIPTION>Latches at sync detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="RX_STATE1">
            <DESCRIPTION>Latches RSSI 8Tb  after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="RX_STATE2">
            <DESCRIPTION>Latches RSSI 16Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="RX_STATE3">
            <DESCRIPTION>Latches RSSI 24Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="RX_STATE4">
            <DESCRIPTION>Latches RSSI 32Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="RX_STATE5">
            <DESCRIPTION>Latches RSSI 40Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="AVERAGE" lsb="4" size="1">
          <ENUMERATION value="0" name="AVERAGE1">
            <DESCRIPTION>RSSI updated every bit.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="AVERAGE4">
            <DESCRIPTION>RSSI averaged over 4 bits</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_CONTROL2" value="8269" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI control</SUMMARY>
      <DESCRIPTION>
        Enable RSSI jumping detection.  Used to detect an RSSI jump as configured by <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>  while receiving a packet.  Can be useful to detect interferring or secondary incoming packet.
      </DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="enjmprx" lsb="1" size="1">
          <DESCRIPTION>If set, RSSI jumping detection will force  RX machine to reset.</DESCRIPTION>
        </FIELD>
        <FIELD name="jmpdlylen" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>RSSI jumping detection is running  with 2Tb</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RSSI jumping detection is running  with 4Tb</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enrssijmp" lsb="3" size="1">
          <DESCRIPTION>Enable RSSI jumping detection.</DESCRIPTION>
          <DESCRIPTION>Once RSSI difference between 2Tb or 4Tb  is above the RSSI jumping threshold, and interrupt  will be generated.</DESCRIPTION>
        </FIELD>
        <FIELD name="rssijmp_up" lsb="4" size="1">
          <DESCRIPTION>If set, enable RSSI jumping-up detection.</DESCRIPTION>
        </FIELD>
        <FIELD name="rssijmp_dwn" lsb="5" size="1">
          <DESCRIPTION>If set, enable RSSI jumping-down detection.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_COMP" value="8270" default="0x32" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI reading offset.</SUMMARY>
      <DESCRIPTION>Offsets RSSI curve in 1dB steps.  32 is no offset, lower will adjust RSSI down, and higher will adjust RSSI up.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rssi_comp" lsb="0" size="7">
          <DESCRIPTION>RSSI reading offset.</DESCRIPTION>
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DC_CONTROL" value="8271" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Modem DC cancellation controls.</SUMMARY>
      <DESCRIPTION>Modem DC cancellation controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dc_gear" lsb="0" size="3">
          <DESCRIPTION>the forgetting factor in the integrator inside DC cancellation. Decimating rate is 2^ndec0. ndec0 should be set to 0 for non-OOK modem. Effective forgetting factor is 2^(-9+dc_gear)</DESCRIPTION>
        </FIELD>
        <FIELD name="dc_freez" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>freeze estimated DC value to the current filter output.   If both dc-rst and dc-frz are set, the digital DC cancellation filter is skipped.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dc_rst" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Reset DC value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dc_follow" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DC Following is turned on. In this mode,  when a valid sync word is detected, the current DC offset is saved,  this value is then used as the initial DC offset for next RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_50" value="8272" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>tbd</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="CLKGEN_BAND" value="8273" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Clock generator band</SUMMARY>
      <DESCRIPTION>Clock generator band</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="Band" lsb="0" size="3">
          <ENUMERATION value="0">
            <DESCRIPTION>Output is FVCO/4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Output is FVCO/6.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Output is FVCO/8.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Output is FVCO/12.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>Output is FVCO/16.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sy_sel" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal mode, 200uA less current than High Performance mode. Set by modem calculator. Requires different freq_inte and freq_frac settings than High Performance mode. FBDIV=fVCO/4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>High Performance.  FBDIV=fVCO/2.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_52" value="8274" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="PLL_SETTLE_TIME" value="8275" default="40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>PLL settle time</SUMMARY>
      <DESCRIPTION>PLL settle time in us</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="pll_settle" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE13_7_0" value="8448" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 13th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE12_7_0" value="8449" default="0xBA" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 12th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE11_7_0" value="8450" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 11th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE10_7_0" value="8451" default="0x51" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 10th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE9_7_0" value="8452" default="0xCF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 9th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE8_7_0" value="8453" default="0xA9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 8th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE7_7_0" value="8454" default="0xC9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 7th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE6_7_0" value="8455" default="0xFC" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 6th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE5_7_0" value="8456" default="0x1B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 5th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE4_7_0" value="8457" default="0x1E" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 4th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE3_7_0" value="8458" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 3rd filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE2_7_0" value="8459" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 2nd filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE1_7_0" value="8460" default="0xFC" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 1st filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE0_7_0" value="8461" default="0xFD" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 0th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM0" value="8462" default="0x15" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 13th ~ 10th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe13_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 13th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe12_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 12th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe11_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 11th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe10_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 10th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM1" value="8463" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 9th ~ 6th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe9_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 9th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe8_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 8th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe7_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 7th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe6_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 6th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM2" value="8464" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 5th ~ 2th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe5_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 5th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe4_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 4th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe3_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 3rd CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe2_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 2nd CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM3" value="8465" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 1st ~ 0th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe1_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 1st CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe0_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 0th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE13_7_0" value="8466" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 13th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE12_7_0" value="8467" default="0xC4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 12th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE11_7_0" value="8468" default="0x30" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 11th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE10_7_0" value="8469" default="0x7F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 10th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE9_7_0" value="8470" default="0xF5" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 9th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE8_7_0" value="8471" default="0xB5" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 8th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE7_7_0" value="8472" default="0xB8" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 7th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE6_7_0" value="8473" default="0xDE" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 6th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE5_7_0" value="8474" default="0x05" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 5th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE4_7_0" value="8475" default="0x17" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 4th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE3_7_0" value="8476" default="0x16" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 3rd filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE2_7_0" value="8477" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 2nd filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE1_7_0" value="8478" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 1st filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE0_7_0" value="8479" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 0th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM0" value="8480" default="0x15" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 13th ~ 10th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe13_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 13th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe12_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 12th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe11_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 11th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe10_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 10th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM1" value="8481" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 9th ~ 6th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe9_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 9th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe8_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 8th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe7_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 7th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe6_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 6th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM2" value="8482" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 5th ~ 2th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe5_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 5th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe4_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 4th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe3_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 3rd CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe2_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 2nd CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM3" value="8483" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 1st ~ 0th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe1_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 1st CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe0_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 0th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_1" value="12288" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 1 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_1" value="12289" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 1 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_1" value="12290" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Pacekt match enable and match 1 configuration.</SUMMARY>
      <DESCRIPTION>Enable packet match processing and pattern 1 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MATCH_EN" lsb="6" size="1">
          <DESCRIPTION>Note: This bit is quite different from other pattern match controlling.</DESCRIPTION>
          <ENUMERATION value="1" name="MATCH_ENABLE">
            <DESCRIPTION>Enable packet match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 1 offset.</SUMMARY>
          <DESCRIPTION>Pattern match 1 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_2" value="12291" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_2" value="12292" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_2" value="12293" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 2 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 2 offset.</SUMMARY>
          <DESCRIPTION>Match 2 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_3" value="12294" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_3" value="12295" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_3" value="12296" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 3 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 3 offset.</SUMMARY>
          <DESCRIPTION>Match 3 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_4" value="12297" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_4" value="12298" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_4" value="12299" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 4 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 4 offset.</SUMMARY>
          <DESCRIPTION>Match 4 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="TX_LENGTH" value="4096" default="0x08" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble length</SUMMARY>
      <DESCRIPTION>Byte or nibble length of preamble to send, depends on LENGTH_CONFIG field in PREAMBLE_CONFIG property.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_STD_1" value="4097" default="0x14" feature="pro2" dev="1" wip="0">
      <SUMMARY>Standard preamble configuration</SUMMARY>
      <DESCRIPTION>Note: This field only applies to standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_THRESH" lsb="0" size="7">
          <RANGE min="0" max="127" />
          <DESCRIPTION>Number of preamble bits that must be valid to detect a valid preamble.</DESCRIPTION>
          <DESCRIPTION>Zero is a valid value in this field means that the preamble checking will be skipped.</DESCRIPTION>
        </FIELD>
        <FIELD name="SKIP_SYNC_TIMEOUT" lsb="7" size="1">
          <ENUMERATION value="0x1" name="ENABLE">
            <DESCRIPTION>In standard packet mode, if set the system will ignore the syncword search timeout reset.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_NSTD" value="4098" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Non-standard preamble configuation</SUMMARY>
      <DESCRIPTION>Note: This field only applies to non-standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_ERRORS" lsb="5" size="3">
          <RANGE min="0" max="7" />
          <DESCRIPTION>Number of preamble bit errors that are allowed when detecting a valid preamble.</DESCRIPTION>
        </FIELD>
        <FIELD name="PATTERN_LENGTH" lsb="0" size="5">
          <RANGE min="0" max="31" />
          <DESCRIPTION>This value plus 1 is the number of valid bits of PREAMBLE_PATTERN.  If PREAM_TX_LENGTH is longer, this pattern will repeat.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_STD_2" value="4099" default="0x0F" feature="pro2" dev="1" wip="0">
      <SUMMARY>Standard preamble configuration</SUMMARY>
      <DESCRIPTION>Note: This field only applies to standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_PREAMBLE_TIMEOUT" lsb="0" size="4">
          <RANGE min="0" max="15" />
          <DESCRIPTION>Number of nibbles to search for before determining that a preamble does not exist. This is usually used for hopping.</DESCRIPTION>
        </FIELD>
        <FIELD name="RX_PREAMBLE_TIMEOUT_EXTEND" lsb="4" size="4">
          <DESCRIPTION>This is only used for a long preamble timeout, more than 15 nibbles.</DESCRIPTION>
          <DESCRIPTION>If this field is non-zero, then  PREAMBLE_TIMEOUT is RX_PREAMBLE_TIMEOUT_EXTEND by 15 nibbles, up to 225 nibbles.</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG" value="4100" default="0x21" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble configuration bits</SUMMARY>
      <DESCRIPTION>Misc preamble configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="STANDARD_PREAM" lsb="0" size="2">
          <ENUMERATION value="0x0" name="PRE_NS">
            <DESCRIPTION>Use non-standard preamble</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="PRE_1010">
            <DESCRIPTION>Use standard preamble of 1010.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2" name="PRE_0101">
            <DESCRIPTION>Use standard preamble of 0101.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MAN_ENABLE" lsb="2" size="1">
          <ENUMERATION value="0x0" name="NO_MAN">
            <DESCRIPTION>Preamble is not manchester encoded.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="EN_MAN">
            <DESCRIPTION>Preamble is manchester encoded.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MAN_CONST" lsb="3" size="1">
          <ENUMERATION value="0x0" name="NO_CON">
            <DESCRIPTION>When Manchester is enabled, if preamble pattern is 0101, the post-Manchester transmitted bits will be 10011001? If the preamble pattern is 1010, the post-Manchester transmitted bits will be 01100110...</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="CONST">
            <DESCRIPTION>When Manchester is enabled, if preamble pattern is 0101, the pre-Manchester pattern will be 1111, the post-Manchester transmitted bits will be 01010101... If the preamble pattern is 1010, the pre-Manchester pattern will be 0000, the post-Manchester transmitted bits will be 10101010....</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LENGTH_CONFIG" lsb="4" size="1">
          <ENUMERATION value="0x0" name="NIBBLE">
            <DESCRIPTION>Preamble tx_length register is in nibbles.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="BYTE">
            <DESCRIPTION>Preamble tx_length register is in bytes.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PREAM_FIRST_1_OR_0" lsb="5" size="1">
          <ENUMERATION value="0x0" name="FIRST_0">
            <DESCRIPTION>First bit is 0, calculated from the calculator.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="FIRST_1">
            <DESCRIPTION>First bit is 1, calculated from the calculator.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_31_24" value="4101" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_23_16" value="4102" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_15_8" value="4103" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_7_0" value="4104" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="CONFIG" value="4352" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sync configuration bits</SUMMARY>
      <DESCRIPTION>Misc sync word configuration bits. Least significant bit of sync word is transmitted/received first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="LENGTH" lsb="0" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is 8 bits, sync byte 3 is used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is 16 bits, sync bytes 2 and 3 are used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Sync word is 24 bits, sync bytes 1, 2, and 3 are used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>Sync word is 32 bits, sync bytes 0, 1, 2, and 3 are used.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANCH" lsb="2" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is not manchester encoded.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is manchester encoded.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK" lsb="3" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is not 4FSK modulated.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is 4FSK modulated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RX_ERRORS" lsb="4" size="3">
          <DESCRIPTION>Number of sync bit errors that are allowed in the sync field during receive sync detection.</DESCRIPTION>
        </FIELD>
        <FIELD name="SKIP_TX" lsb="7" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is transmitted as defined by LENGTH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is not transmitted.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_31_24" value="4353" default="0x2D" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 3 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_23_16" value="4354" default="0xD4" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 2 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_15_8" value="4355" default="0x2D" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_7_0" value="4356" default="0xD4" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="CRC_CONFIG" value="4608" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Select a CRC polynomial and seed</SUMMARY>
      <DESCRIPTION>Pick the desired CRC polynomial and CRC seed.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="CRC_POLYNOMIAL" lsb="0" size="4">
          <ENUMERATION value="0" name="NO_CRC">
            <DESCRIPTION>No CRC.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ITU_T_CRC8">
            <DESCRIPTION>ITU-T CRC8:   X8+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="IEC_16">
            <DESCRIPTION>IEC-16:       X16+X14+X12+X11+X9+X8+X7+X4+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="BAICHEVA_16">
            <DESCRIPTION>Baicheva-16:  X16+X15+X12+X7+X6+X4+X3+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CRC_16_IBM">
            <DESCRIPTION>CRC-16 (IBM): X16+X15+X2+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CCITT_16">
            <DESCRIPTION>CCIT-16:      X16+X12+X5+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="KOOPMAN">
            <DESCRIPTION>Koopman:      X32+X30+X29+X28+X26+X20+X19+X17+X16+X15+X11+X10+X7+X6+X4+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="IEEE_802_3">
            <DESCRIPTION>IEEE 802.3:   X32+X26+X23+X22+X16+X12+X11+X10+X8+X7+X5+X4+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="CASTAGNOLI">
            <DESCRIPTION>Castagnoli:   X32+X28+X27+X26+X25+X23+X22+X20+X19+X18+X14+X13+X11+X10+X9+X8+X6+1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ALT_CRC_POLYNOMIAL" lsb="4" size="3" internal="1">
          <ENUMERATION value="0" name="NO_CRC">
            <DESCRIPTION>No CRC.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ITU_T_CRC8">
            <DESCRIPTION>ITU-T CRC8:   X8+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="IEC_16">
            <DESCRIPTION>IEC-16:       X16+X14+X12+X11+X9+X8+X7+X4+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="BAICHEVA_16">
            <DESCRIPTION>Baicheva-16:  X16+X15+X12+X7+X6+X4+X3+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CRC_16_IBM">
            <DESCRIPTION>CRC-16 (IBM): X16+X15+X2+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CCITT_16">
            <DESCRIPTION>CCIT-16:      X16+X12+X5+1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_SEED" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Use all 0's for the CRC Seed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Use all 1's for the CRC Seed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_POLY_15_8" value="4609" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of data whitening polynomial value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_SEED.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_POLY_7_0" value="4610" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of data whitening polynomial</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_SEED.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_SEED_15_8" value="4611" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of data whitening seed value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_SEED_7_0" value="4612" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of data whitening seed value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_BIT_NUM" value="4613" default="0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Which whitening polynomial bit to use for data scrambling</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_SEED and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="15" />
      <BYTE>
        <FIELD name="WHT_BIT_NUM" lsb="0" size="4">
          <ENUMERATION value="0x0">
            <DESCRIPTION>0  to use for data scrambling</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>1  to use for data scrambling</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SW_CRC_CTRL" lsb="6" size="1" internal="1">
          <DESCRIPTION>Enables the software crc calculation over the packet.  Should only be used if the software whitening is used.</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Disable - Don't enable sofware CRC engine.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Enable software CRC engine.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SW_WHT_CTRL" lsb="7" size="1" internal="1">
          <ENUMERATION value="0x0" name="DISABLE">
            <DESCRIPTION>Disable the software whitening algorithm.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="ENABLE">
            <DESCRIPTION>Enable the software whitening algorithm.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="CONFIG1" value="4614" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>General packet configuration bits</SUMMARY>
      <DESCRIPTION>General packet configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="BIT_ORDER" lsb="0" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Msb first for all fields. Bit 7 transmitted first timewise. Note: Preamble and sync word are always transmitted lsb first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Lsb first for all fields. Bit 0 transmitted first timewise.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENDIAN" lsb="1" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>CRC low bytes are received/transmitted first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>CRC high bytes are received/transmitted first.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_INVERT" lsb="2" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Leave each CRC bit intact.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Invert each CRC bit before transmit.  Invert received CRC before comparison.  Data in fifo remains untouched.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANCH_POL" lsb="3" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>0 is encoded/decoded to/from 10 Manchester pattern.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>0 is encoded/decoded to/from 01 Manchester pattern.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RX_MULTI_PKT" lsb="4" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Turn off receive chain after packet received.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Leave receive chain enabled after packet received.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK_EN" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The modem is not in 4FSK mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>The modem is in 4FSK mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PH_RX_DISABLE" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Packet handler is enabled in RX.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Packet handler is disabled in RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PH_FIELD_SPLIT" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Field level properties (property 0x120D to 0x1220) are shared between TX and RX.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Field level properties are split between TX and RX. TX: from 0x120D ~ 0x1220, RX: from 0x1221 ~ 0x1234</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="CHIP_MAP" value="4615" default="0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Controls mapping chips to bits</SUMMARY>
      <DESCRIPTION>When the Demod is in 4FSK mode, and the PH is in 2FSK no Manchester mode, this controls which 2 chips sequence will be mapped to the each level.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="PLUS_3_LEVEL_MAP" lsb="0" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a PLUS_3_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 1. For transmit, if a 1 is the next bit to be transmitted, the two chips that will be transmitted are the contents of PLUS_3_LEVEL_MAP (which equal 00 in this case).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Upon receiving a PLUS_3_LEVEL_MAP sequence (which equals 01 in this case. First 0, then 1), the resulting bit in the RX_DATA buffer will be a 1. For transmit if a 1 is the next bit to be transmitted, the two chips that will be transmitted are the contents of PLUS_3_LEVEL_MAP (which equal 01 in this case. first 0, then 1).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PLUS_1_LEVEL_MAP" lsb="2" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a PLUS_1_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 1. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Upon receiving a PLUS_1_LEVEL_MAP sequence (which equal 10 in this case. First 1, then 0), the resulting bit in the RX_DATA buffer will be a 1. For transmit: This field is ignored.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MINUS_1_LEVEL_MAP" lsb="4" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a MINUS_1_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 0. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>Upon receiving a MINUS_1_LEVEL_MAP sequence (which equals 11 in this case), the resulting bit in the RX_DATA buffer will be a 0. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MINUS_3_LEVEL_MAP" lsb="6" size="2">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Upon receiving a MINUS_3_LEVEL_MAP sequence (which equals 01 in this case. First 0, then 1), the resulting bit in the RX_DATA buffer will be a 0. For transmit, if a 0 is the next bit to be transmitted, the two chips that will be transmitted are the contents of MINUS_3_LEVEL_MAP (which equals 01 in this case. First 0, then 1).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Upon receiving a MINUS_3_LEVEL_MAP sequence (which equals 10 in this case. First 1, then 0), the resulting bit in the RX_DATA buffer will be a 0. For transmit, if a 0 is the next bit to be transmitted, the two chips that will be transmitted are the contents of MINUS_3_LEVEL_MAP (which equals 10 in this case. First 1, then 0).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN" value="4616" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Provides information regarding how to use the length from the received packet.</SUMMARY>
      <DESCRIPTION>This property is used for variable length packet reception.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="DST_FIELD" lsb="0" size="3">
          <DESCRIPTION>Selects field number that will vary in length.</DESCRIPTION>
          <DESCRIPTION>A value of 0 in this field specifies fixed packet length mode. Field 2 to 5 can be designated as variable length field.</DESCRIPTION>
        </FIELD>
        <FIELD name="IN_FIFO" lsb="3" size="1">
          <ENUMERATION value="0x0" name="CUT_OUT">
            <DESCRIPTION>The data bytes containing the length field are not put in the fifo.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="LEAVE_IN">
            <DESCRIPTION>The data bytes containing the length field are put in the fifo.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SIZE" lsb="4" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>The length field is one byte in length.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>The length field is two bytes in length.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ENDIAN" lsb="5" size="1">
          <ENUMERATION value="0x0" name="LITTLE">
            <DESCRIPTION>The length field is least significant byte first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="BIG">
            <DESCRIPTION>The length field is most significant byte first.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN_FIELD_SOURCE" value="4617" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field number containing the embedded length field.</SUMMARY>
      <DESCRIPTION>This property is used in variable packet mode defining where the length field is in the packet.</DESCRIPTION>
      <DESCRIPTION>The length field must be the last byte in a fixed length field and precede the variable length field</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="SRC_FIELD" lsb="0" size="3">
          <DESCRIPTION>Selects field number that contains the length field.</DESCRIPTION>
          <DESCRIPTION>A value of 0 in this field is treated as 1.</DESCRIPTION>
          <RANGE min="0" max="4" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN_ADJUST" value="4618" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Adjust length field by this amount to derive the byte count of the variable length field.</SUMMARY>
      <DESCRIPTION>This property is added to the value extracted from the length field in the packet.</DESCRIPTION>
      <DESCRIPTION>The result is then used to set the length of the selected destination field that varies in length.</DESCRIPTION>
      <DESCRIPTION>This constant is typically defined in a protocol specification or can be derived from the specification.</DESCRIPTION>
      <DESCRIPTION>For example, if a protocol defines the first byte as the length field, the length field specifies the number of subsequent payload excluding the CRC bytes, LEN_ADJUST should be set to 0; If the length field specifies the number of subsequent payload including the CRC bytes, LEN_ADJUST should be set to the negative number of the CRC byte count in 2's complement.</DESCRIPTION>
      <DESCRIPTION>LEN_ADJUST is a signed char.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="PKT" name="TX_THRESHOLD" value="4619" default="0x30" feature="pro2" dev="1" wip="0">
      <SUMMARY>TX almost empty threshold.</SUMMARY>
      <DESCRIPTION>Transmit almost empty interrupt fires when the amount of space in the transmit fifo equal to or greater than TX_THRESHOLD.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="64" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_THRESHOLD" value="4620" default="0x30" feature="pro2" dev="1" wip="0">
      <SUMMARY>RX almost full threshold.</SUMMARY>
      <DESCRIPTION>Receive almost full interrupt fires when there are RX_THRESHOLD number of bytes present in the receive fifo.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="64" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_LENGTH_12_8" value="4621" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_1_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_LENGTH_7_0" value="4622" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_CONFIG" value="4623" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 1 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="PN_START" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load PN-9 engine with seed value at the start of this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_CRC_CONFIG" value="4624" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 1 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="ALT_CRC_START" lsb="6" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load 16-bit CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_START" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_LENGTH_12_8" value="4625" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_2_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_LENGTH_7_0" value="4626" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_CONFIG" value="4627" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 2 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_CRC_CONFIG" value="4628" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 2 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_LENGTH_12_8" value="4629" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_3_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_LENGTH_7_0" value="4630" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_CONFIG" value="4631" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 3 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_CRC_CONFIG" value="4632" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 3 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_LENGTH_12_8" value="4633" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_4_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_LENGTH_7_0" value="4634" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_CONFIG" value="4635" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 4 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_CRC_CONFIG" value="4636" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 4 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_LENGTH_12_8" value="4637" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_5_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_LENGTH_7_0" value="4638" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_CONFIG" value="4639" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 5 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_CRC_CONFIG" value="4640" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 5 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_LENGTH_12_8" value="4641" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_1_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_LENGTH_7_0" value="4642" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_CONFIG" value="4643" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 1 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="PN_START" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load PN-9 engine with seed value at the start of this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_CRC_CONFIG" value="4644" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 1 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="ALT_CRC_START" lsb="6" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load 16-bit CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_START" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_LENGTH_12_8" value="4645" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_2_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_LENGTH_7_0" value="4646" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_CONFIG" value="4647" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 2 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_CRC_CONFIG" value="4648" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 2 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_LENGTH_12_8" value="4649" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_3_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_LENGTH_7_0" value="4650" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_CONFIG" value="4651" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 3 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_CRC_CONFIG" value="4652" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 3 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_LENGTH_12_8" value="4653" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_4_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_LENGTH_7_0" value="4654" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_CONFIG" value="4655" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 4 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_CRC_CONFIG" value="4656" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 4 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_LENGTH_12_8" value="4657" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_5_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_LENGTH_7_0" value="4658" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_CONFIG" value="4659" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 5 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_CRC_CONFIG" value="4660" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 5 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="INTE" value="16384" default="0x3C" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Frac-N PLL integer number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL integer number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="inte" lsb="0" size="7">
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_2" value="16385" default="0x08" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 2 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_2" lsb="0" size="3">
          <RANGE min="0" max="7" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_1" value="16386" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 1 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_1" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_0" value="16387" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 0 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="CHANNEL_STEP_SIZE_1" value="16388" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 1 of channel step size.</SUMMARY>
      <DESCRIPTION>Channel frequency step size used when using EZ frequency programming. EZ frequency programming is defined by base frequency (inte + frac ) + channel number * step size.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="channel_step_size_1" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="CHANNEL_STEP_SIZE_0" value="16389" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 0 of channel step size.</SUMMARY>
      <DESCRIPTION>Channel frequency step size used when using EZ frequency programming. EZ frequency programming is defined by base frequency (inte + frac ) + channel number * step size.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="channel_step_size_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="W_SIZE" value="16390" default="0x20" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>30MHz clock cycles</SUMMARY>
      <DESCRIPTION>30MHz clock cycles</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="w_size" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="VCOCNT_RX_ADJ" value="16391" default="0xFF" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>VCO target count adjustment for RX</SUMMARY>
      <DESCRIPTION>VCO target count adjustment for RX, signed</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="vcocnt_rx_adj" lsb="0" size="8">
          <RANGE min="-128" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="CONTROL" value="20480" default="0x04" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>RX hop control.</SUMMARY>
      <DESCRIPTION>Sets RSSI timeout value and select RX hop condition.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="RSSI_TIMEOUT" lsb="0" size="4">
          <DESCRIPTION>Sets the RSSI time out expressed in nibbles.</DESCRIPTION>
        </FIELD>
        <FIELD name="HOP_EN" lsb="4" size="3">
          <DESCRIPTION>RX hop condition.</DESCRIPTION>
          <ENUMERATION value="0" name="HOP_DISABLE">
            <DESCRIPTION>Hop disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HOP_PM_TO">
            <DESCRIPTION>Hop if preamble timeout occurs.</DESCRIPTION>
            <DESCRIPTION>If no preamble detected after RX preamble timeout, then hop.  Otherwise a preamble is detected, stay on channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="HOP_RSSI_PM_TO">
            <DESCRIPTION>Hop if either RSSI timeout occurs or preamble timeout occurs.</DESCRIPTION>
            <DESCRIPTION>Either timeout condition forces hop, whichever occurs first.  Otherwise stay on channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="HOP_PM_SYNC_TO">
            <DESCRIPTION>Hop if preamble timeout or invalid sync word.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="HOP_RSSI_PM_SYNC_TO">
            <DESCRIPTION>Hop on RSSI timeout, preamble timeout or invalid sync word.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_SIZE" value="20481" default="0x01" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Number of entries in the RX hop table.</SUMMARY>
      <DESCRIPTION>Number of entries in the RX hop table.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_HOP_TABLE_SIZE" lsb="0" size="7">
          <RANGE min="1" max="64" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_0" value="20482" default="0" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.1 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.1 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_1" value="20483" default="1" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.2 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.2 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_2" value="20484" default="2" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.3 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.3 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_3" value="20485" default="3" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.4 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.4 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_4" value="20486" default="4" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.5 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.5 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_5" value="20487" default="5" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.6 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.6 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_6" value="20488" default="6" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.7 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.7 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_7" value="20489" default="7" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.8 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.8 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_8" value="20490" default="8" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.9 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.9 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_9" value="20491" default="9" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.10 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.10 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_10" value="20492" default="10" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.11 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.11 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_11" value="20493" default="11" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.12 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.12 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_12" value="20494" default="12" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.13 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.13 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_13" value="20495" default="13" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.14 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.14 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_14" value="20496" default="14" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.15 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.15 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_15" value="20497" default="15" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.16 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.16 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_16" value="20498" default="16" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.17 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.17 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_17" value="20499" default="17" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.18 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.18 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_18" value="20500" default="18" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.19 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.19 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_19" value="20501" default="19" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.20 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.20 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_20" value="20502" default="20" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.21 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.21 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_21" value="20503" default="21" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.22 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.22 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_22" value="20504" default="22" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.23 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.23 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_23" value="20505" default="23" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.24 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.24 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_24" value="20506" default="24" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.25 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.25 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_25" value="20507" default="25" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.26 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.26 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_26" value="20508" default="26" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.27 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.27 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_27" value="20509" default="27" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.28 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.28 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_28" value="20510" default="28" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.29 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.29 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_29" value="20511" default="29" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.30 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.30 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_30" value="20512" default="30" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.31 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.31 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_31" value="20513" default="31" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.32 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.32 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_32" value="20514" default="32" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.33 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.33 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_33" value="20515" default="33" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.34 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.34 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_34" value="20516" default="34" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.35 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.35 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_35" value="20517" default="35" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.36 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.36 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_36" value="20518" default="36" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.37 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.37 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_37" value="20519" default="37" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.38 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.38 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_38" value="20520" default="38" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.39 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.39 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_39" value="20521" default="39" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.40 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.40 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_40" value="20522" default="40" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.41 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.41 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_41" value="20523" default="41" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.42 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.42 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_42" value="20524" default="42" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.43 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.43 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_43" value="20525" default="43" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.44 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.44 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_44" value="20526" default="44" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.45 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.45 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_45" value="20527" default="45" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.46 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.46 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_46" value="20528" default="46" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.47 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.47 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_47" value="20529" default="47" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.48 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.48 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_48" value="20530" default="48" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.49 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.49 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_49" value="20531" default="49" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.50 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.50 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_50" value="20532" default="50" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.51 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.51 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_51" value="20533" default="51" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.52 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.52 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_52" value="20534" default="52" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.53 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.53 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_53" value="20535" default="53" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.54 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.54 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_54" value="20536" default="54" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.55 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.55 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_55" value="20537" default="55" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.56 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.56 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_56" value="20538" default="56" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.57 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.57 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_57" value="20539" default="57" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.58 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.58 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_58" value="20540" default="58" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.59 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.59 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_59" value="20541" default="59" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.60 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.60 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_60" value="20542" default="60" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.61 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.61 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_61" value="20543" default="61" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.62 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.62 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_62" value="20544" default="62" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.63 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.63 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_63" value="20545" default="63" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.64 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.64 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPI_ACTIVE_SEQ_DELAY_15_8" value="61952" default="0x02" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Upper byte of sequencer delay from spi active to ready.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPI_ACTIVE_SEQ_DELAY_7_0" value="61953" default="0x8A" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Lower byte of sequencer delay from spi active to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="READY_SEQ_DELAY" value="61954" default="0x82" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Sequencer delay from ready to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="TX_TUNE_SEQ_DELAY" value="61955" default="0x1E" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Sequencer delay from tx tune to tx.</SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RX_SEQ_DELAY_15_8" value="61956" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Upper byte of Sequencer delay from rx to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RX_SEQ_DELAY_7_0" value="61957" default="0x91" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Lower byte of Sequencer delay from rx to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="CAL_ENABLE_VTR" value="61958" default="0x61" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VTR calibration enables.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CAL_EN_VTR_XO" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr xo cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_RX" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr rx cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_TX" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr tx cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_ADC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr adc cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_SY" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr sy cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_V3P3" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco v3p3 cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_V1P5" lsb="6" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco v1p5 cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_LADR" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco ladr cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="CAL_ENABLE" value="61959" default="0x15" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Calibration enables.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CAL_EN_BOOT_OSC" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform boot osc cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RC_CAL_32K" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform rc32k cal on every warm boot.  Always performed at cold boot and on CAL timer expiration.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_PGA_OFS" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform pga ofs cal on every entry into RX.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RC_CAL_FOR_ADC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform rc32k cal for adc on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RFPKD_FULL" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform full RF peak detector cal on every warm boot.  Full Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RFPKD_FAST" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform fast RF peak detector cal on every entry into RX.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_SPARE6" lsb="6" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform xxx cal on every warm boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_SPARE7" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform xxx cal on every warm boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_V3P3_TARGET_VOLTAGE" value="61960" default="0xFB" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO v3.3 target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_V1P5_TARGET_VOLTAGE" value="61961" default="0x08" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO v1.5 target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_LADR_TARGET_VOLTAGE" value="61962" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO Ladder target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL_ADC_TARGET_15_8" value="61963" default="0x7D" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32K ADC cal target</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <DESCRIPTION>Upper byte of RC Cal ADC Target in Hz.</DESCRIPTION>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL_ADC_TARGET_7_0" value="61964" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32K ADC cal target</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <DESCRIPTION>Lower byte of RC Cal ADC Target in Hz.</DESCRIPTION>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL" value="61965" default="0x4" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="FINE_CAL_CYCLES" lsb="0" size="8">
        <DESCRIPTION>Number of RC32k cycles to measure RC frequency over. (nc)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL1" value="61966" default="0x44" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="COARSE_CAL_CYCLES" lsb="0" size="4">
        <DESCRIPTION>Number of RC32k cycles to measure RC frequency over. (nc)</DESCRIPTION>
      </FIELD>
      <FIELD name="COARSE_ADC_CAL_CYCLES" lsb="4" size="4">
        <DESCRIPTION>Number of RC32k cycles to measure RC32k frequency over for ADC cal. (nc)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL2" value="61967" default="0x42" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="HIGH_CURR_CHOP" lsb="6" size="2">
        <ENUMERATION value="0" name="CHOP_DIS_HI_DIS">
          <DESCRIPTION>Operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="1" name="CHOP_EN_HI_DIS">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="2" name="CHOP_DIS_HI_EN">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="3" name="CHOP_EN_HI_EN">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SETTLE_CYCLES" lsb="0" size="6">
        <DESCRIPTION>Number of RC32k cycles to wait for clock to settle after changing frequency and before checking frequency. (ns)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="BOOT_OSC_CAL" value="61968" default="0x09" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Boot osc calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="XO_CAPCODE_RESTORE_DELAY" lsb="3" size="5">
        <DESCRIPTION>Delay before restoring XO_CAPCODE.</DESCRIPTION>
      </FIELD>
      <FIELD name="BOOT_OSC_ADJ" lsb="0" size="3">
        <DESCRIPTION>Adjustment value for Boot osc.  This value is subtracted from BOSC aconfig register after boot osc cal.  There is an additional adjustment factor applied based on crystal frequency.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="BOOT_OSC_CAL1" value="61969" default="0x02" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Boot osc calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CRYSTAL_OK_DELAY" lsb="0" size="8">
        <DESCRIPTION>Delay after restoring capcode, before polling crystal ok.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_TEMP_SLOPE" value="61970" default="0x63" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_TEMP_INTERCEPT" value="61971" default="0x4A" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SY_GAIN_ERROR" value="61972" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>AuxADC gain adjustment, 8-bit signed.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SY_OFFSET_ERROR" value="61973" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>AuxADC offset adjustment, 8-bit signed.</SUMMARY>
      <TARGETRELEASE>ROM2-Partial</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="ADC_VOLTAGE_TRIM" value="61974" default="0x0F" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_RXFE_LPF" value="61975" default="0x35" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_ADC_LPF" value="61976" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_LOAD5_LPF" value="61977" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_LPF" value="61978" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_COM_LPF" value="61979" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_TX_LPF" value="61980" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_TX_LPF" value="61981" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RESERVED_F2_1E" value="61982" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_RXFE_HPF" value="61983" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_ADC_HPF" value="61984" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_LOAD5_HPF" value="61985" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_HPF" value="61986" default="0x30" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>
        This is the value that will be used for the CLKGEN ACONFIG register for RX if <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:Band > 4.
      </SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_COM_HPF" value="61987" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_TX_HPF" value="61988" default="0x20" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>
        This is the value that will be used for the CLKGEN ACONFIG register for TX if <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:Band > 4.
      </SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_TX_HPF" value="61989" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="PH_WATERMARK" value="61990" default="0x62" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <FIELD name="RX_WATERMARK" lsb="4" size="4">
        <DESCRIPTION></DESCRIPTION>
        <RANGE min="1" max="8" />
      </FIELD>
      <FIELD name="TX_WATERMARK" lsb="0" size="4">
        <DESCRIPTION></DESCRIPTION>
        <RANGE min="1" max="8" />
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="PROC_MON_RCAL" value="61991" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REF_CAL_BANDGAP" value="61992" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>REF_CAL bandgap calibration</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SAMPLER_CFG" value="61993" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPARE1" value="61994" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>For use in patches</SUMMARY>
      <TARGETRELEASE></TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="MODULATION" value="9216" default="0x02" feature="common" dev="1" wip="0">
      <SUMMARY>Configure modulation using the EZ config feature.</SUMMARY>
      <DESCRIPTION>This property selects a modulation type, modulation source and tx direct mode control if supported.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="MOD_TYPE" lsb="0" size="2">
          <ENUMERATION value="0" name="CW" feature="tx">
            <DESCRIPTION>CW</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="OOK">
            <DESCRIPTION>OOK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="FSK">
            <DESCRIPTION>FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GFSK">
            <DESCRIPTION>GFSK</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MOD_SOURCE" lsb="3" size="2">
          <ENUMERATION value="0" name="PACKET">
            <DESCRIPTION>Modulation source is packet handler fifo</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIRECT">
            <DESCRIPTION>Modulation source is direct mode pin.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="PSEUDO">
            <DESCRIPTION>Modulation source is pseudo-random generator</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_GPIO" lsb="5" size="2" feature="tx">
          <DESCRIPTION>
            Selects which GPIO will be used as the TX data source if MOD_SOURCE = DIRECT.  The gpio selected here must be configured (using <REFERENCE>GPIO_PIN_CFG</REFERENCE>) as a CMOS input.
          </DESCRIPTION>
          <ENUMERATION value="0" name="GPIO0">
            <DESCRIPTION>TX direct mode uses gpio0 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="GPIO1">
            <DESCRIPTION>TX direct mode uses gpio1 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="GPIO2">
            <DESCRIPTION>TX direct mode uses gpio2 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GPIO3">
            <DESCRIPTION>TX direct mode uses gpio3 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_TYPE" lsb="7" size="1" feature="tx">
          <ENUMERATION value="0" name="SYNC">
            <DESCRIPTION>Direct mode operates in synchronous mode, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ASYNC">
            <DESCRIPTION>Direct mode operates in asynchronous mode, applies to TX only.  GFSK is not supported.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="CONFIG_SELECT" value="9217" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Select the index from EZ config table.</SUMMARY>
      <DESCRIPTION>This property selects the configuration index from a predefined EZConfig table.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CONFIG_INDEX" lsb="0" size="8">
          <ENUMERATION value="0" name="NONE">
            <DESCRIPTION>Select none</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="CONFIG_INDEX_1">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_9.6kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CONFIG_INDEX_2">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_10.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="CONFIG_INDEX_3">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_15.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CONFIG_INDEX_4">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_19.2kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CONFIG_INDEX_5">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_20.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="CONFIG_INDEX_6">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_38.4kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="CONFIG_INDEX_7">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_40.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="CONFIG_INDEX_8">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_50.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CONFIG_INDEX_9">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="CONFIG_INDEX_10">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="CONFIG_INDEX_11">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_128.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="CONFIG_INDEX_12">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_2.4kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="CONFIG_INDEX_13">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_4.8kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="CONFIG_INDEX_14">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_5.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="CONFIG_INDEX_15">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_9.6kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="CONFIG_INDEX_16">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_10.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="CONFIG_INDEX_17">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_15.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="18" name="CONFIG_INDEX_18">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_19.2kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="19" name="CONFIG_INDEX_19">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_20.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="20" name="CONFIG_INDEX_20">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_38.4kbps_chBW76.8kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="21" name="CONFIG_INDEX_21">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_40.0kbps_chBW85.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="22" name="CONFIG_INDEX_22">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_50.0kbps_chBW110.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="23" name="CONFIG_INDEX_23">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="24" name="CONFIG_INDEX_24">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="25" name="CONFIG_INDEX_25">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="26" name="CONFIG_INDEX_26">
            <DESCRIPTION>283-350MHz_OOK_2.4kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="27" name="CONFIG_INDEX_27">
            <DESCRIPTION>283-350MHz_OOK_4.8kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="28" name="CONFIG_INDEX_28">
            <DESCRIPTION>283-350MHz_OOK_5.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="29" name="CONFIG_INDEX_29">
            <DESCRIPTION>283-350MHz_OOK_9.6kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="30" name="CONFIG_INDEX_30">
            <DESCRIPTION>283-350MHz_OOK_10.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31" name="CONFIG_INDEX_31">
            <DESCRIPTION>283-350MHz_OOK_15.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="32" name="CONFIG_INDEX_32">
            <DESCRIPTION>283-350MHz_OOK_19.2kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="33" name="CONFIG_INDEX_33">
            <DESCRIPTION>283-350MHz_OOK_20.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="34" name="CONFIG_INDEX_34">
            <DESCRIPTION>283-350MHz_OOK_38.4kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="35" name="CONFIG_INDEX_35">
            <DESCRIPTION>283-350MHz_OOK_40.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="36" name="CONFIG_INDEX_36">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_9.6kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="37" name="CONFIG_INDEX_37">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_10.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="38" name="CONFIG_INDEX_38">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_15.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="39" name="CONFIG_INDEX_39">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_19.2kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="40" name="CONFIG_INDEX_40">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_20.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="41" name="CONFIG_INDEX_41">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_38.4kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="42" name="CONFIG_INDEX_42">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_40.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="43" name="CONFIG_INDEX_43">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_50.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="44" name="CONFIG_INDEX_44">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_96.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="45" name="CONFIG_INDEX_45">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_100.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="46" name="CONFIG_INDEX_46">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_128.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="47" name="CONFIG_INDEX_47">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_2.4kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="48" name="CONFIG_INDEX_48">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_4.8kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="49" name="CONFIG_INDEX_49">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_5.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="50" name="CONFIG_INDEX_50">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_9.6kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="51" name="CONFIG_INDEX_51">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_10.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="52" name="CONFIG_INDEX_52">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_15.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="53" name="CONFIG_INDEX_53">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_19.2kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="54" name="CONFIG_INDEX_54">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_20.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="55" name="CONFIG_INDEX_55">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_38.4kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="56" name="CONFIG_INDEX_56">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_40.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="57" name="CONFIG_INDEX_57">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_50.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="58" name="CONFIG_INDEX_58">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="59" name="CONFIG_INDEX_59">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="60" name="CONFIG_INDEX_60">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="61" name="CONFIG_INDEX_61">
            <DESCRIPTION>425-525MHz_OOK_2.4kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="62" name="CONFIG_INDEX_62">
            <DESCRIPTION>425-525MHz_OOK_4.8kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="63" name="CONFIG_INDEX_63">
            <DESCRIPTION>425-525MHz_OOK_5.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="64" name="CONFIG_INDEX_64">
            <DESCRIPTION>425-525MHz_OOK_9.6kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="65" name="CONFIG_INDEX_65">
            <DESCRIPTION>425-525MHz_OOK_10.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="66" name="CONFIG_INDEX_66">
            <DESCRIPTION>425-525MHz_OOK_15.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="67" name="CONFIG_INDEX_67">
            <DESCRIPTION>425-525MHz_OOK_19.2kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="68" name="CONFIG_INDEX_68">
            <DESCRIPTION>425-525MHz_OOK_20.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="69" name="CONFIG_INDEX_69">
            <DESCRIPTION>425-525MHz_OOK_38.4kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="70" name="CONFIG_INDEX_70">
            <DESCRIPTION>425-525MHz_OOK_40.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="71" name="CONFIG_INDEX_71">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_9.6kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="72" name="CONFIG_INDEX_72">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_10.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="73" name="CONFIG_INDEX_73">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_15.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="74" name="CONFIG_INDEX_74">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_19.2kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="75" name="CONFIG_INDEX_75">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_20.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="76" name="CONFIG_INDEX_76">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_38.4kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="77" name="CONFIG_INDEX_77">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_40.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="78" name="CONFIG_INDEX_78">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_50.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="79" name="CONFIG_INDEX_79">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_96.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="80" name="CONFIG_INDEX_80">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_100.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="81" name="CONFIG_INDEX_81">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_128.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="82" name="CONFIG_INDEX_82">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_2.4kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="83" name="CONFIG_INDEX_83">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_4.8kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="84" name="CONFIG_INDEX_84">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_5.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="85" name="CONFIG_INDEX_85">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_9.6kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="86" name="CONFIG_INDEX_86">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_10.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="87" name="CONFIG_INDEX_87">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_15.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="88" name="CONFIG_INDEX_88">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_19.2kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="89" name="CONFIG_INDEX_89">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_20.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="90" name="CONFIG_INDEX_90">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_38.4kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="91" name="CONFIG_INDEX_91">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_40.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="92" name="CONFIG_INDEX_92">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_50.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="93" name="CONFIG_INDEX_93">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="94" name="CONFIG_INDEX_94">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="95" name="CONFIG_INDEX_95">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="96" name="CONFIG_INDEX_96">
            <DESCRIPTION>850-960MHz_OOK_2.4kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="97" name="CONFIG_INDEX_97">
            <DESCRIPTION>850-960MHz_OOK_4.8kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="98" name="CONFIG_INDEX_98">
            <DESCRIPTION>850-960MHz_OOK_5.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="99" name="CONFIG_INDEX_99">
            <DESCRIPTION>850-960MHz_OOK_9.6kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="100" name="CONFIG_INDEX_100">
            <DESCRIPTION>850-960MHz_OOK_10.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="101" name="CONFIG_INDEX_101">
            <DESCRIPTION>850-960MHz_OOK_15.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="102" name="CONFIG_INDEX_102">
            <DESCRIPTION>850-960MHz_OOK_19.2kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="103" name="CONFIG_INDEX_103">
            <DESCRIPTION>850-960MHz_OOK_20.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="104" name="CONFIG_INDEX_104">
            <DESCRIPTION>850-960MHz_OOK_38.4kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="105" name="CONFIG_INDEX_105">
            <DESCRIPTION>850-960MHz_OOK_40.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="PKT" value="9218" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>EZ config packet configure.</SUMMARY>
      <DESCRIPTION>This property selects packet configuration options.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="CRC_ENABLE" lsb="0" size="1">
          <DESCRIPTION>Selectes whether to use CRC for transmit or recieve</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>DISABLE - CRC will not be automatically transmitted, and will not be checked on receive.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>ENABLE - CRC will be appended to the end of the transmitted packet and will be checked on receive.  If a CRC error occurs the CRC .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
  </CHIP>
  <CHIP type="Si4455" revision="B0" name="EZRadio2">
    <COMMAND name="NOP" value="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>No operation command</SUMMARY>
      <DESCRIPTION>Can be used to ensure communication with the device.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED></APIUPDATED>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PART_INFO" value="0x01" feature="common" dev="1" wip="0">
      <SUMMARY>Reports basic information about the device.</SUMMARY>
      <DESCRIPTION>Returns Part Number, Part Version, ROM ID, etc</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CHIPREV" address="1" type="u8">
          <DESCRIPTION>Chip Mask Revision</DESCRIPTION>
        </REPLY>
        <REPLY name="PART" address="2" type="u16">
          <DESCRIPTION>Part Number.  e.g. si4440 will return - 0x4440)</DESCRIPTION>
        </REPLY>
        <REPLY name="PBUILD" address="4" type="u8">
          <DESCRIPTION>Part Build.</DESCRIPTION>
        </REPLY>
        <REPLY name="ID" address="5" type="u16">
          <DESCRIPTION>Id</DESCRIPTION>
        </REPLY>
        <REPLY name="CUSTOMER" address="7" type="u8">
          <DESCRIPTION>Customer ID</DESCRIPTION>
        </REPLY>
        <REPLY name="ROMID" address="8" type="u8">
          <DESCRIPTION>ROM Id</DESCRIPTION>
        </REPLY>
        <REPLY name="BOND" address="9" type="u8" internal="1">
          <DESCRIPTION>Bond Option</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="POWER_UP" value="0x02" feature="boot" dev="1" wip="0">
      <SUMMARY>Power-up device and mode selection. Modes include operational function</SUMMARY>
      <DESCRIPTION>Power-up the device with the specified function.  Power-up is complete when the CTS bit is set. This command may  take longer to set the CTS bit than other commands.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="BOOT_OPTIONS" address="1" type="bitfield">
          <FIELD name="FUNC" lsb="0" size="6">
            <DESCRIPTION>Selects the boot function of the device</DESCRIPTION>
            <ENUMERATION value="0" name="BOOT">
              <DESCRIPTION>Boot Loader</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRX">
              <DESCRIPTION>Transceiver</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="63" name="LOADED" internal="1">
              <DESCRIPTION>Image already loaded, just boot.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="PATCH" lsb="7" size="1">
            <DESCRIPTION>Select patch mode.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Boot normally.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>
                Copy image selected by FUNC to RAM, but do not boot. After  CTS is set, RAM may be patched via <REFERENCE>PATCH_ARGS</REFERENCE> and  <REFERENCE>PATCH_DATA</REFERENCE> commands.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="XTAL_OPTIONS" address="2" type="bitfield">
          <FIELD name="TCXO" lsb="0" size="1">
            <DESCRIPTION>Select if TCXO is in use.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>XTAL is not TCXO.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>XTAL is TCXO.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="XO_FREQ" address="3" type="u32">
          <DESCRIPTION>Frequency of TCXO or external crystal oscillator in Hz. The default is 30000000 (30MHz).</DESCRIPTION>
          <RANGE min="25000000" max="32000000" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="RAM_TEST" value="0x03" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>Tests the contents and operation of RAM.</SUMMARY>
      <DESCRIPTION>Calculate CRC of RAMs selected by MEMORY mask.</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="OPERATION" address="1" type="bitfield">
          <DESCRIPTION>Memory mask for RAMs to CRC.</DESCRIPTION>
          <FIELD name="MCUPX_CRC" size="1" lsb="0">
            <DESCRIPTION>If set, compute CRC of MCUPX RAM</DESCRIPTION>
          </FIELD>
          <FIELD name="MCUPX_RAM_TEST" size="1" lsb="7">
            <DESCRIPTION>If set, run RAM test on MCUPX RAM.  When tests are complete part should be reset.  Simple fill and verify of RAM.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CRC_START_ADDR" address="2" type="u16">
          <DESCRIPTION>Address to start CRC calculation at.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="CRC_SIZE" address="4" type="u16">
          <DESCRIPTION>Number of bytes to calculate CRC over.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RAM_TEST_FILL_BYTE" address="6" type="u8">
          <DESCRIPTION>Fill byte to run RAM test with.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RESULT" address="1" type="bitfield">
          <FIELD name="RAM_TEST_PASS" lsb="0" size="1">
            <DESCRIPTION>Indicates if the ram test passed or failed</DESCRIPTION>
            <ENUMERATION value="0" name="FAILED">
              <DESCRIPTION>FAILED - RAM Test Failed.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="PASSED">
              <DESCRIPTION>PASSED - RAM Test Passed.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="OTP_CRC" address="2" type="u16">
          <DESCRIPTION>CRC of application from OTP.</DESCRIPTION>
        </REPLY>
        <REPLY name="CRC" address="4" type="u16">
          <DESCRIPTION>CRC of selected RAMs</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_IMAGE" value="0x04" feature="boot" dev="1" wip="0">
      <SUMMARY>Loads image from NVM/ROM into RAM.</SUMMARY>
      <DESCRIPTION>Loads the selected function into RAM for execution or patching</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FLAGS" address="1" type="bitfield">
          <FIELD name="FUNC" lsb="0" size="4">
            <DESCRIPTION>Selects the image to load</DESCRIPTION>
            <ENUMERATION value="0" name="BOOT">
              <DESCRIPTION>Boot Loader - No image is loaded</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRX">
              <DESCRIPTION>Transceiver</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="VERIFYCRC" lsb="5" size="1" internal="1">
            <DESCRIPTION>Verify CRC. If no match, do not load NVM and report error. Set in patches along with CRC.</DESCRIPTION>
          </FIELD>
          <FIELD name="NONVM" lsb="4" size="1" internal="1">
            <DESCRIPTION>Do not load image from NVM, this is a full download.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CRC" address="2" internal="1" type="u16">
          <DESCRIPTION>
            CRC value which the RAMs must match after the image is loaded. If VERIFYCRC is not set,  then the CRC supplied is ignored. If the CRC does not match,  no <REFERENCE>PATCH_ARGS</REFERENCE>, <REFERENCE>PATCH_DATA</REFERENCE>, <REFERENCE>PATCH_COPY</REFERENCE> or <REFERENCE>POWER_UP</REFERENCE> commands will be accepted.  This condition can be cleared by sending another PATCH_IMAGE command with VERIFYCRC cleared.
          </DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED1" address="4" type="u8" internal="1">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED2" address="5" type="u8" internal="1">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="KEY1" address="6" type="u8" internal="1">
          <DESCRIPTION>decryption key1 for patch</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="KEY2" address="7" type="u8" internal="1">
          <DESCRIPTION>decryption key2 for patch</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_ARGS" value="0x05" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Initialize parameters for patching</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PIP" address="1" type="u8">
          <DESCRIPTION>Patch In Progress. This bit is set in all but the the final PATCH_ARGS command.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED1" address="2" type="u8">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED2" address="5" type="u8">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="CRC" address="6" type="u16">
          <DESCRIPTION>
            Validates the data loaded from patch commands. If the CRC fails, no further <REFERENCE>PATCH_DATA</REFERENCE>, <REFERENCE>PATCH_ARGS</REFERENCE>, <REFERENCE>PATCH_COPY</REFERENCE> or <REFERENCE>POWER_UP</REFERENCE> commands will be accepted.
          </DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_DATA" value="0xE0" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Load patch data. Technically, there are 16 PATCH_DATA commands 0x10-0x1F. CMD[2:0]  is the number of valid bytes in the command. CMD[3] is the LSB of the CRC.</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS internal="1">
        <PARAMETER name="DATA0" address="1" type="u8">
          <DESCRIPTION>encrypted patch data byte to load into RAM</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="2" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="3" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="4" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="5" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA5" address="6" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA6" address="7" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA7" address="8" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_COPY" value="0x06" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Patch RAM by copying from ROM/RAM/NVM to RAMs</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SRC_ADDR" address="1" type="u16">
          <DESCRIPTION>Memory Controller source address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DST_ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="COUNT" address="5" type="u16">
          <DESCRIPTION>Number of bytes to copy.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_COPY_2" value="0x0A" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>
        This is the same command as <REFERENCE>PATCH_COPY</REFERENCE> with the lsb of the crc set.
      </DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SRC_ADDR" address="1" type="u16">
          <DESCRIPTION>Memory Controller source address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DST_ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="COUNT" address="5" type="u16">
          <DESCRIPTION>Number of bytes to copy.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="TEST_DATA" value="0x09" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>Read NVM Test Data block</SUMMARY>
      <DESCRIPTION>Reports Test Data block read from NVM</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="OFFSET" address="1" type="u8">
          <DESCRIPTION>Offset in test data block to begin reading at.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="TEST0" address="1" type="u8">
        </REPLY>
        <REPLY name="TEST1" address="2" type="u8">
        </REPLY>
        <REPLY name="TEST2" address="3" type="u8">
        </REPLY>
        <REPLY name="TEST3" address="4" type="u8">
        </REPLY>
        <REPLY name="TEST4" address="5" type="u8">
        </REPLY>
        <REPLY name="TEST5" address="6" type="u8">
        </REPLY>
        <REPLY name="TEST6" address="7" type="u8">
        </REPLY>
        <REPLY name="TEST7" address="8" type="u8">
        </REPLY>
        <REPLY name="TEST8" address="9" type="u8">
        </REPLY>
        <REPLY name="TEST9" address="10" type="u8">
        </REPLY>
        <REPLY name="TESTA" address="11" type="u8">
        </REPLY>
        <REPLY name="TESTB" address="12" type="u8">
        </REPLY>
        <REPLY name="TESTC" address="13" type="u8">
        </REPLY>
        <REPLY name="TESTD" address="14" type="u8">
        </REPLY>
        <REPLY name="TESTE" address="15" type="u8">
        </REPLY>
        <REPLY name="TESTF" address="16" type="u8">
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_PH_STATUS" value="0x21" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the packet handler status.</SUMMARY>
      <DESCRIPTION>Returns current packet handler status bytes and possibly clears pending packet handler interrupts.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PH_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending RX_FIFO_ALMOST_FULL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND_CLR" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending TX_FIFO_ALMOST_EMPTY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND_CLR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If clear, Clear pending CRC16_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending CRC_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending PACKET_RX interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND_CLR" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending PACKET_SENT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND_CLR" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MISS interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND_CLR" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MATCH interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="PH_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX_FIFO_ALMOST_FULL interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX_FIFO_ALMOST_EMPTY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC16_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, PACKET_RX interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, PACKET_SENT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MISS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MATCH interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_STATUS" address="2" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX fifo is above watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX fifo is below watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC-16 error</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC-32 error</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, Packet Received</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, Packet Sent</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet was discarded because filter did not match</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet matched filter.</DESCRIPTION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_MODEM_STATUS" value="0x22" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the modem status byte.</SUMMARY>
      <DESCRIPTION>Returns and possibly clears the current modem status byte.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="MODEM_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="SYNC_DETECT_PEND_CLR" lsb="0" size="1">
            <DESCRIPTION>If clear, Clear pending SYNC_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND_CLR" lsb="1" size="1">
            <DESCRIPTION>If clear, Clear pending PREAMBLE_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_PREAMBLE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI_JUMP interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_SYNC interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="MODEM_PEND" address="1" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, SYNC_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, PREAMBLE_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, INVALID_PREAMBLE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, RSSI interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, RSSI_JUMP interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, INVALID_SYNC interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_STATUS" address="2" type="bitfield">
          <FIELD name="SYNC_DETECT" lsb="0" size="1">
            <DESCRIPTION>If set, sync has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT" lsb="1" size="1">
            <DESCRIPTION>If set, preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE" lsb="2" size="1">
            <DESCRIPTION>If set, invalid preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI" lsb="3" size="1">
            <DESCRIPTION>
              If set, RSSI is above <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP" lsb="4" size="1">
            <DESCRIPTION>
              If set, RSSI jump above <REFERENCE>MODEM_RSSI_JUMP_THRESH</REFERENCE> has occured
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC" lsb="5" size="1">
            <DESCRIPTION>If set, invalid sync has been detected</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CURR_RSSI" address="3" type="u8">
          <DESCRIPTION>Current RSSI reading from the modem.</DESCRIPTION>
        </REPLY>
        <REPLY name="LATCH_RSSI" address="4" type="u8">
          <DESCRIPTION>
            Latched RSSI reading from the modem as configured by <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>.  Reset to 0 at the start of every RX.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="ANT1_RSSI" address="5" type="u8">
          <DESCRIPTION>RSSI of ANT1 while antenna diversity.  Latched during preamble evaluation and avaliable for reading after sync detection.</DESCRIPTION>
        </REPLY>
        <REPLY name="ANT2_RSSI" address="6" type="u8">
          <DESCRIPTION>RSSI of ANT2 while antenna diversity.  Latched during preamble evaluation and avaliable for reading after sync detection.</DESCRIPTION>
        </REPLY>
        <REPLY name="AFC_FREQ_OFFSET" address="7" type="u16">
          <DESCRIPTION>The AFC value that is generated by the AFC loop during receive mode.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_CHIP_STATUS" value="0x23" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the chip status.</SUMMARY>
      <DESCRIPTION>Returns current chip status bytes and possibly clears pending chip status interrupts.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHIP_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="WUT_PEND_CLR" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending WUT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND_CLR" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending LOW_BATT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending CHIP_READY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending CMD_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending STATE_CHANGE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND_CLR" lsb="6" size="1">
            <DESCRIPTION>If clear, Clear pending CAL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CHIP_PEND" address="1" type="bitfield">
          <FIELD name="WUT_PEND" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, WUT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, LOW_BATT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_READY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, CMD_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, STATE_CHANGE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND" lsb="6" size="1">
            <DESCRIPTION>If set, CAL interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_STATUS" address="2" type="bitfield">
          <FIELD name="WUT" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, wakeup timer has expired</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, low battery has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY" lsb="2" size="1">
            <DESCRIPTION>If set, chip is ready to accept commands</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR" lsb="3" size="1">
            <DESCRIPTION>If set, command error has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE" lsb="4" size="1">
            <DESCRIPTION>If set, a state change has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR" lsb="5" size="1">
            <DESCRIPTION>If set, fifo underflow or overflow occured</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL" lsb="6" size="1">
            <DESCRIPTION>If set, calibration timer has expired</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CMD_ERR_STATUS" address="3" type="u8">
          <DESCRIPTION>Last command error cause.  Only valid if CMD_ERROR status bit is set.</DESCRIPTION>
          <ENUMERATION value="0x00" name="CMD_ERROR_NONE">
            <DESCRIPTION>No error.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x10" name="CMD_ERROR_BAD_COMMAND">
            <DESCRIPTION>Bad command issued.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x11" name="CMD_ERROR_BAD_ARG">
            <DESCRIPTION>Argment(s) in issued command were invalid.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x12" name="CMD_ERROR_COMMAND_BUSY">
            <DESCRIPTION>Command was issued before previous command was completed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x20" name="CMD_ERROR_BAD_NVM">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x30" name="CMD_ERROR_BAD_PATCH">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x31" name="CMD_ERROR_BAD_BOOTMODE">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x40" name="CMD_ERROR_BAD_PROPERTY">
            <DESCRIPTION>Bad Property ID was provided.</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_INT_STATUS" value="0x20" feature="common" dev="1" wip="0">
      <SUMMARY>Returns the interrupt status byte.</SUMMARY>
      <DESCRIPTION>Returns the current interrupt status byte.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PH_CLR_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending RX_FIFO_ALMOST_FULL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND_CLR" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending TX_FIFO_ALMOST_EMPTY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND_CLR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If clear, Clear pending CRC16_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending CRC_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending PACKET_RX interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND_CLR" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending PACKET_SENT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND_CLR" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MISS interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND_CLR" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MATCH interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="MODEM_CLR_PEND" address="2" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND_CLR" lsb="0" size="1">
            <DESCRIPTION>If clear, Clear pending SYNC_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND_CLR" lsb="1" size="1">
            <DESCRIPTION>If clear, Clear pending PREAMBLE_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_PREAMBLE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI_JUMP interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_SYNC interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CHIP_CLR_PEND" address="3" type="bitfield">
          <FIELD name="WUT_PEND_CLR" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending WUT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND_CLR" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending LOW_BATT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending CHIP_READY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending CMD_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending STATE_CHANGE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND_CLR" lsb="6" size="1">
            <DESCRIPTION>If clear, Clear pending CAL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="INT_PEND" address="1" type="bitfield">
          <FIELD name="PH_INT_STATUS_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, PH_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="MODEM_INT_STATUS_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, MODEM_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_INT_STATUS_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="INT_STATUS" address="2" type="bitfield">
          <FIELD name="PH_INT_STATUS" lsb="0" size="1">
            <DESCRIPTION>If set, packet handler status has interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="MODEM_INT_STATUS" lsb="1" size="1">
            <DESCRIPTION>If set, modem status has interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_INT_STATUS" lsb="2" size="1">
            <DESCRIPTION>If set, chip status has interrupt pending</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_PEND" address="3" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX_FIFO_ALMOST_FULL interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX_FIFO_ALMOST_EMPTY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC16_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, PACKET_RX interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, PACKET_SENT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MISS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MATCH interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_STATUS" address="4" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX fifo is above watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX fifo is below watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC-16 error</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC-32 error</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, Packet Received</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, Packet Sent</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet was discarded because filter did not match</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet matched filter.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_PEND" address="5" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, SYNC_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, PREAMBLE_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, INVALID_PREAMBLE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, RSSI interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, RSSI_JUMP interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, INVALID_SYNC interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_STATUS" address="6" type="bitfield">
          <FIELD name="SYNC_DETECT" lsb="0" size="1">
            <DESCRIPTION>If set, sync has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT" lsb="1" size="1">
            <DESCRIPTION>If set, preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE" lsb="2" size="1">
            <DESCRIPTION>If set, invalid preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI" lsb="3" size="1">
            <DESCRIPTION>
              If set, RSSI is above <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP" lsb="4" size="1">
            <DESCRIPTION>
              If set, RSSI jump above <REFERENCE>MODEM_RSSI_JUMP_THRESH</REFERENCE> has occured
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC" lsb="5" size="1">
            <DESCRIPTION>If set, invalid sync has been detected</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_PEND" address="7" type="bitfield">
          <FIELD name="WUT_PEND" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, WUT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, LOW_BATT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_READY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, CMD_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, STATE_CHANGE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND" lsb="6" size="1">
            <DESCRIPTION>If set, CAL interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_STATUS" address="8" type="bitfield">
          <FIELD name="WUT" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, wakeup timer has expired</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, low battery has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY" lsb="2" size="1">
            <DESCRIPTION>If set, chip is ready to accept commands</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR" lsb="3" size="1">
            <DESCRIPTION>If set, command error has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE" lsb="4" size="1">
            <DESCRIPTION>If set, a state change has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR" lsb="5" size="1">
            <DESCRIPTION>If set, fifo underflow or overflow occured</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL" lsb="6" size="1">
            <DESCRIPTION>If set, calibration timer has expired</DESCRIPTION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FUNC_INFO" value="0x10" feature="common" dev="1" wip="0">
      <SUMMARY>Returns the Function revision information of the device.</SUMMARY>
      <DESCRIPTION>
        Return Function revision numbers for currently loaded functional mode firmware. Contrast with <REFERENCE>PART_INFO</REFERENCE>
      </DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="REVEXT" address="1" type="u8">
          <DESCRIPTION>External revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="REVBRANCH" address="2" type="u8">
          <DESCRIPTION>Branch revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="REVINT" address="3" type="u8">
          <DESCRIPTION>Internal revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="PATCH" address="4" type="u16">
          <DESCRIPTION>ID of applied patch. This is also the last 2 bytes in the associated patch file (*.csg).</DESCRIPTION>
          <DESCRIPTION>0x0000 = No patch applied.</DESCRIPTION>
        </REPLY>
        <REPLY name="FUNC" address="6" type="u8">
          <DESCRIPTION>Current functional mode</DESCRIPTION>
          <ENUMERATION value="0" name="BOOT">
            <DESCRIPTION>Part is currently in boot mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="TRX">
            <DESCRIPTION>Tranceiver</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
        <REPLY name="SVNFLAGS" address="7" type="bitfield" internal="1">
          <FIELD name="LOCALMOD" lsb="0" size="1">
            <DESCRIPTION>If set, image has local modifications. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
          </FIELD>
          <FIELD name="MIXEDREV" lsb="1" size="1">
            <DESCRIPTION>If set, image has mixed revisions. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
          </FIELD>
          <FIELD name="LOCATION" lsb="4" size="2">
            <DESCRIPTION>Trunk, Branch or Tag</DESCRIPTION>
            <ENUMERATION value="0" name="TAG">
              <DESCRIPTION>Built from a SVN Tag</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="BRANCH">
              <DESCRIPTION>Built from a SVN Branch. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="TRUNK">
              <DESCRIPTION>Built from the SVN Trunk. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="SVNREV" address="8" type="u32" internal="1">
          <DESCRIPTION>Subersion Revision image was built from.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="SET_PROPERTY" value="0x11" feature="common" dev="1" wip="0">
      <SUMMARY>Sets the value of a property.</SUMMARY>
      <DESCRIPTION>Sets a property common to one or more commands. These are similar to parameters for a  api command but are not expected to change frequently and may be controlled by higher layers of  the user's software. Setting some properties may not cause the device to take immediate  action, however the property will take affect once a command which uses it is issued.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GROUP" address="1" type="u8">
          <DESCRIPTION>Selects the group of the property to set.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="NUM_PROPS" address="2" type="u8">
          <DESCRIPTION>Number of properties to write starting at START_PROP.</DESCRIPTION>
          <RANGE min="1" max="12" />
        </PARAMETER>
        <PARAMETER name="START_PROP" address="3" type="u8">
          <DESCRIPTION>
            Selects the property index to set. The available properties are  determined by the part number and the <REFERENCE>POWER_UP</REFERENCE>:FUNC selection.
          </DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA0" address="4" type="u8">
          <DESCRIPTION>Value of the property START_PROP</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="5" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 1 (don't care if NUM_PROPS &lt; 2 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="6" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 2 (don't care if NUM_PROPS &lt; 3 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="7" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 3 (don't care if NUM_PROPS &lt; 4 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="8" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 4 (don't care if NUM_PROPS &lt; 5 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA5" address="9" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 5 (don't care if NUM_PROPS &lt; 6 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA6" address="10" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 6 (don't care if NUM_PROPS &lt; 7 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA7" address="11" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 7 (don't care if NUM_PROPS &lt; 8 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA8" address="12" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 8 (don't care if NUM_PROPS &lt; 9 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA9" address="13" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 9 (don't care if NUM_PROPS &lt; 10 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA10" address="14" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 10 (don't care if NUM_PROPS &lt; 11 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA11" address="15" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 11 (don't care if NUM_PROPS &lt; 12 )</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_PROPERTY" value="0x12" feature="common" dev="1" wip="0">
      <SUMMARY>Retrieve a property's value.</SUMMARY>
      <DESCRIPTION>
        Retrieve a property's value; The value will either be the default or the value set with <REFERENCE>SET_PROPERTY</REFERENCE>.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GROUP" address="1" type="u8">
          <DESCRIPTION>Selects the group of the properties to retrieve.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="NUM_PROPS" address="2" type="u8">
          <DESCRIPTION>Number of properties to retrieve starting at START_PROP.</DESCRIPTION>
          <RANGE min="1" max="16" />
        </PARAMETER>
        <PARAMETER name="START_PROP" address="3" type="u8">
          <DESCRIPTION>
            Selects the first property index to retrieve.  The available properties are  determined by the part number and the <REFERENCE>POWER_UP</REFERENCE>:FUNC selection.
          </DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA0" address="1" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE>
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA1" address="2" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 1 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 2 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA2" address="3" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 2 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 3 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA3" address="4" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 3 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 4 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA4" address="5" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 4 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 5 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA5" address="6" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 5 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 6 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA6" address="7" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 6 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 7 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA7" address="8" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 7 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 8 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA8" address="9" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 8 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 9 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA9" address="10" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 9 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 10 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA10" address="11" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 10 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 11 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA11" address="12" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 11 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 12 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA12" address="13" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 12 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 13 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA13" address="14" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 13 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 14 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA14" address="15" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 14 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 15 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA15" address="16" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 15 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 16 )
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FIFO_INFO" value="0x15" feature="common" dev="1" wip="0">
      <SUMMARY>Provides access to transmit and receive fifo counts and reset.</SUMMARY>
      <DESCRIPTION>This command is normally used for error recovery, fifo hardware does not need to be reset prior to use.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIFO" address="1" type="bitfield">
          <FIELD name="TX" lsb="0" size="1" feature="tx">
            <ENUMERATION value="1">
              <DESCRIPTION>Resets transmit data fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RX" lsb="1" size="1" feature="rx">
            <ENUMERATION value="1">
              <DESCRIPTION>Resets receive data fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RX_FIFO_COUNT" address="1" type="u8" />
        <DESCRIPTION>Number of bytes currently in receive fifo.</DESCRIPTION>
        <REPLY name="TX_FIFO_SPACE" address="2" type="u8">
          <DESCRIPTION>Amount of space currently available in transmit fifo.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PACKET_INFO" value="0x16" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns information about the last packet received and optionally overrides field length.</SUMMARY>
      <DESCRIPTION>This command is used to retrieve the length field extracted from the packet when using variable length packets.</DESCRIPTION>
      <DESCRIPTION>On 802.15.4g receive mode, the FCS byte length embedded in the FHR is included to inform the host of the number of FCS bytes in the FIFO following the MAC Payload. if FCS is 0, 2 is added to the return length; if FCS is 1, 4 is added to the return length.</DESCRIPTION>
      <DESCRIPTION>If arguments follow, it can also be used to override packet length that was originally programmed with non-zero RX_LEN in START_RX or field length originally programmed with PKT field length properties.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIELD_NUMBER" address="1" type="bitfield">
          <FIELD name="FIELD_NUM" lsb="0" size="5">
            <ENUMERATION value="0x00">
              <DESCRIPTION>Nothing to override.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x01">
              <DESCRIPTION>Override FIELD 1 length or RX_LEN in START_RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x02">
              <DESCRIPTION>Override FIELD 2 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x04">
              <DESCRIPTION>Override FIELD 3 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x08">
              <DESCRIPTION>Override FIELD 4 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x10">
              <DESCRIPTION>Override FIELD 5 length.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="LEN" address="2" type="u16">
          <DESCRIPTION>Length in bytes.</DESCRIPTION>
          <RANGE min="1" max="8191" />
        </PARAMETER>
        <PARAMETER name="LEN_DIFF" address="4" type="u16">
          <DESCRIPTION>Difference in bytes based on the original field length or RX_LEN. Signed.</DESCRIPTION>
          <RANGE min="-32768" max="32767" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="LENGTH_15_8" address="1" type="u8">
          <DESCRIPTION>Most significant byte of the extracted length</DESCRIPTION>
        </REPLY>
        <REPLY name="LENGTH_7_0" address="2" type="u8">
          <DESCRIPTION>Least significant byte of the extracted length</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="IRCAL" value="0x17" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Calibrate IR.</SUMMARY>
      <DESCRIPTION>Calibrate image rejection.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SEARCHING_STEP_SIZE" address="1" type="bitfield">
          <FIELD name="COURSE_STEP_SIZE" lsb="0" size="4">
            <DESCRIPTION>Course Step Size of course stepping.</DESCRIPTION>
            <RANGE min="0" max="15" />
            <ENUMERATION value="0">
              <DESCRIPTION>Value 0 is usedn to skip course stepping</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="FINE_STEP_SIZE" lsb="4" size="2">
            <DESCRIPTION>Step size of fine stepping.</DESCRIPTION>
            <RANGE min="0" max="3" />
            <ENUMERATION value="0">
              <DESCRIPTION>Value 0 is used to skip fine stepping.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="INITIAL_PH_AMP" lsb="6" size="1">
            <DESCRIPTION>Initial ph and amp value when start IR calibration.</DESCRIPTION>
            <ENUMERATION value="1">
              <DESCRIPTION>use zero for phase and amplitude values as starting values</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0">
              <DESCRIPTION>use previous calibration values as starting values (default)</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="SEARCHING_RSSI_AVG" address="2" type="bitfield">
          <FIELD name="RSSI_COURSE_AVG" lsb="0" size="2">
            <DESCRIPTION>How many measurements(2^avg) per RSSI measurement while course stepping.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>1 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>4 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>8 measurements</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SKIP_CAL" lsb="2" size="1" internal="1">
            <DESCRIPTION>Skip calibration and skip reverting parameters, only configure the parameters for IR cal.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>do calibration and then revert parameters</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>skip calibration and reverting parameters</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RSSI_FINE_AVG" lsb="4" size="2">
            <DESCRIPTION>How many measurements(2^avg) per RSSI measurement while fine stepping.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>1 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>4 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>8 measurements</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SKIP_INIT_SEARCH_STAT" lsb="6" size="1" internal="1">
            <DESCRIPTION>Whether initialize the searching process(clear the saved information when step-by-step searching)</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Start a new search</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Continue to search.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="STEP_BY_STEP" lsb="7" size="1" internal="1">
            <DESCRIPTION>Whether only do one step searching. If we do only one step searching, then we don't revert the pararmeters when the API call is finished. If we calibarte IR step-by-step, the calibration state will automatically changed, please refer the return state</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Do automatically searching</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Only search one step.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_CHAIN_SETTING1" address="3" type="bitfield">
          <FIELD name="PGA_GAIN" lsb="0" size="3">
            <DESCRIPTION>Set PGA Gain, see PGA datasheet.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>6dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>9dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>12dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="6">
              <DESCRIPTION>0dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="7">
              <DESCRIPTION>3dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>others are all 6dB</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="CLOSE_SHUNT_SWITCH" lsb="3" size="1">
            <DESCRIPTION>Close shunt switch.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Open LNA input shunt switch</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Close Open LNA input shunt switch switch</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RF_SOURCE_PWR" lsb="4" size="2">
            <DESCRIPTION>Power of internal generator(Default 3).</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>smallest</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>small</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>big</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>biggest</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="IRCLKDIV" lsb="6" size="1">
            <DESCRIPTION>Set irclkdiv</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Set to nominal gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Harmonics at N x 30 MHz</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="EN_HRMNIC_GEN" lsb="7" size="1">
            <DESCRIPTION>Enable harmonic generator.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Not enable</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Enable</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_CHAIN_SETTING2" address="4" type="bitfield">
          <FIELD name="ADC_HIGH_GAIN" lsb="0" size="1">
            <DESCRIPTION>Set ADC to high gain.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Set to nominal gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Set to high gain</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RSSI_READ_DLEAY" lsb="4" size="4" internal="1">
            <DESCRIPTION>How many bits clock delay before read RSSI when calbration. Delay = (2 + RSSI_READ_DLEAY)*bit_clock).</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>2 + 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 + 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="15">
              <DESCRIPTION>2 + 15</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CAL_STATE" address="1" type="u8" internal="1">
          <DESCRIPTION>Current calibration state</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Not in proc</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>PH fine stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>AMP fine stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>PH course stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8">
            <DESCRIPTION>AMP course stepping</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
        <REPLY name="RSSI" address="2" type="u8" internal="1">
          <DESCRIPTION>Current value of register RSSI. Usually the RSSI value is the RSSI of current AMP/PH. If (DIRECT_CHANGE = 1) or (CAL_STATE is different to privous value), then this means the search direction is changed, now the RSSI is the value before change direction. If it is this condition the RSSI of current value should be ready out by sfr_read.</DESCRIPTION>
        </REPLY>
        <REPLY name="DIR_CH" address="3" type="u8" internal="1">
          <DESCRIPTION>Whether search direction changed</DESCRIPTION>
        </REPLY>
        <REPLY name="LAST_RSSI" address="4" type="u8" internal="1">
          <DESCRIPTION>New for ROM3, return the final RSSI value after IR calibration.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PROTOCOL_CFG" value="0x18" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sets the chip up for specified protocol.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PROTOCOL" address="1" type="u8">
          <DESCRIPTION>Selects which protocol to configure the chip for.</DESCRIPTION>
          <ENUMERATION name="GENERIC" value="0">
            <DESCRIPTION>Packet format is generic, no dynamic reprogramming of packet handler properties.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION name="IEEE802154G" value="1">
            <DESCRIPTION>Packet format is IEEE802.15.4g compliant. The following properties are overriden: PKT_CRC_CONFIG, CRC_ENDIAN/BIT_ORDER in PKT_CONFG1 for TX and RX, PKT_FIELD_1_CRC_CONFIG for RX. Other applicable properties in the packet handler group still need to be programmed. Field 1 should have the length of 16 bits to contain the PHR with PKT_LEN_FIELD_SOURCE set to 1 for RX. PSDU field shall use Field 2 with variable length. Field 2 length should be set to the maximum allowed including the anticipated FCS length. It is anticipated that the FCS will be calculated by the host and transmitted over the air. Si4440 will receive PHR and put FCS in the FIFO for the host to retrieve and check. Therefore, CRC shouldn't be enabled on Si4440.</DESCRIPTION>
          </ENUMERATION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GPIO_PIN_CFG" value="0x13" feature="common" dev="1" wip="0">
      <SUMMARY>Configures the gpio pins</SUMMARY>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GPIO0" address="1" type="bitfield">
          <FIELD name="GPIO0_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO0_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO1" address="2" type="bitfield">
          <FIELD name="GPIO1_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO1_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO2" address="3" type="bitfield">
          <FIELD name="GPIO2_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO2_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO3" address="4" type="bitfield">
          <FIELD name="GPIO3_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO3_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NIRQ" address="5" type="bitfield">
          <FIELD name="NIRQ_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="nirq" value="39">
              <DESCRIPTION>Active low interrupt signal</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="NIRQ_DRV_PULL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="SDO" address="6" type="bitfield">
          <FIELD name="SDO_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SDO_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GEN_CONFIG" address="7" type="bitfield">
          <FIELD name="DRV_STRENGTH" lsb="5" size="2">
            <ENUMERATION name="HIGH" value="0">
              <DESCRIPTION>GPIOs configured as outputs will have highest drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_HIGH" value="1">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_LOW" value="2">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="LOW" value="3">
              <DESCRIPTION>GPIOs configured as outputs will have lowest drive strength.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="GPIO0" address="1" type="bitfield">
          <FIELD name="GPIO0r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO0_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO1" address="2" type="bitfield">
          <FIELD name="GPIO1r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO1_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO2" address="3" type="bitfield">
          <FIELD name="GPIO2r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO2_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO3" address="4" type="bitfield">
          <FIELD name="GPIO3r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO3STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="NIRQ" address="5" type="bitfield">
          <FIELD name="NIRQr" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="nirq" value="39">
              <DESCRIPTION>Active low interrupt signal</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="NIRQSTATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="SDO" address="6" type="bitfield">
          <FIELD name="SDOr" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SDOSTATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GEN_CONFIG" address="7" type="bitfield">
          <FIELD name="DRV_STRENGTH" lsb="5" size="2">
            <ENUMERATION name="HIGH" value="0">
              <DESCRIPTION>GPIOs configured as outputs will have highest drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_HIGH" value="1">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_LOW" value="2">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="LOW" value="3">
              <DESCRIPTION>GPIOs configured as outputs will have lowest drive strength.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PEEK" value="0xF0" feature="debug" internal="1" dev="1" wip="0">
      <SUMMARY>Read a memory location if the feature is enabled.</SUMMARY>
      <DESCRIPTION>Read a memory location in the MCU memory.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADDR0" address="1" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR1" address="3" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR2" address="5" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR3" address="7" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR4" address="9" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR5" address="11" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR6" address="13" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA0" address="1" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR0 == 0 )</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA1" address="2" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR1 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA2" address="3" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR2 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA3" address="4" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR3 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA4" address="5" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR4 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA5" address="6" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR5 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA6" address="7" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR6 == 0 ).</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="POKE" value="0xF1" feature="debug" internal="1" dev="1" wip="0">
      <SUMMARY>Write a memory location if the feature is enabled.</SUMMARY>
      <DESCRIPTION>Write a memory location in the MCU.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADDR0" address="1" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA0" address="3" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR0 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR1" address="4" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="6" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR1 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR2" address="7" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="9" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR2 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR3" address="10" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="12" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR3 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR4" address="13" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="15" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR4 == 0).</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_ADC_READING" value="0x14" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Retrieve the results of possible ADC conversions.</SUMMARY>
      <DESCRIPTION>Performs and returns results of selected ADC conversions.  This command takes ~1ms per conversion enabled below.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADC_EN" address="1" type="bitfield">
          <FIELD name="ADC_GPIO_PIN" lsb="0" size="2">
            <DESCRIPTION>Select GPIOx pin. The pin must be set as input</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Measure voltage of GPIO0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Measure voltage of GPIO1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>Measure voltage of GPIO2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>Measure voltage of GPIO3</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="ADC_GPIO_EN" lsb="2" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion on GPIO, will read 0 value in reply</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of GPIO, results in GPIO_ADC. Vgpio = 3*GPIO_ADC/1280</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="BATTERY_VOLTAGE_EN" lsb="3" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion of battery voltage, will read 0 value in reply BATTERY_ADC</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of battery voltage, results in BATTERY_ADC. Vbatt = 3*BATTERY_ADC/1280</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="TEMPERATURE_EN" lsb="4" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion of temperature, will read 0 value in reply TEMPERATURE</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of temperature, result in TEMP_ADC. Temp in Celsius = ((800 + TEMP_SLOPE)/4096)*TEMP_ADC - (INTERCEPT/2 + 256)</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="ADC_CFG" address="2" type="bitfield">
          <FIELD name="ATT0" lsb="0" size="2">
            <DESCRIPTION>Set att0 when vgpio be measured</DESCRIPTION>
            <ENUMERATION value="0" name="NONE">
              <DESCRIPTION>X 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="HALF">
              <DESCRIPTION>X 1/2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="THIRD">
              <DESCRIPTION>X 1/3</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3" name="FOURTH">
              <DESCRIPTION>X 1/4</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="VBAT_ATT2" lsb="2" size="2">
            <DESCRIPTION>Set vbat_att2 when vgpio be measured</DESCRIPTION>
            <ENUMERATION value="0" name="NONE">
              <DESCRIPTION>X 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="HALF">
              <DESCRIPTION>X 1/2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="THIRD">
              <DESCRIPTION>X 1/3</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3" name="FOURTH">
              <DESCRIPTION>X 1/4</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="UDTIME" lsb="4" size="4">
            <DESCRIPTION>ADC conversion = ADC_CLK / 12 / 2^(UDTIME +1), ADC_CLK = 30 MHz</DESCRIPTION>
            <ENUMERATION value="12">
              <DESCRIPTION>ADC_CLK /12 /8192 = 305 Hz</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="GPIO_ADC" address="1" type="u16">
          <DESCRIPTION>ADC value of voltage on GPIO</DESCRIPTION>
        </REPLY>
        <REPLY name="BATTERY_ADC" address="3" type="u16">
          <DESCRIPTION>ADC value of battery voltage</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_ADC" address="5" type="u16">
          <DESCRIPTION>ADC value of temperature sensor voltage</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_SLOPE" address="7" type="u8">
          <DESCRIPTION>Slope in the formula of Vtempadc -- Temperature</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_INTERCEPT" address="8" type="u8">
          <DESCRIPTION>Intercept in the formula of Vtempadc -- Temperature</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_TX" value="0x31" feature="tx" dev="1" wip="0">
      <SUMMARY>Switches to TX state and starts packet transmission.</SUMMARY>
      <DESCRIPTION>Switches to TX state when condition is met.  Command arguments are retained though sleep state, so they only need to be written when they change.  CTS will not return high until in TX state.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHANNEL" address="1" type="u8">
          <DESCRIPTION>
            Channel number to tune the receiver to.  Frequency is determined using integer, fractional, and step size properties in the FREQ_CONTROL property group.  This value will be overwritten with <REFERENCE>START_RX</REFERENCE>:CHANNEL
          </DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="CONDITION" address="2" type="bitfield">
          <FIELD name="START" lsb="0" size="2">
            <ENUMERATION value="0">
              <DESCRIPTION>Start TX immediately.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Start TX when wake up timer expires.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RETRANSMIT" lsb="2" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Send data that has been written to fifo.  If fifo is empty a fifo underflow interrupt will occur.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Send last packet again.  If this option is used, ensure that no new data is written to the fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="TXCOMPLETE_STATE" lsb="4" size="4">
            <DESCRIPTION>State to go to when current packet transmission completes.  If this parameter is not sent with the command, the last value specified is used.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="TX_LEN" address="3" type="u16">
          <DESCRIPTION>If this field is nonzero, the packet will be transmitted using only field 1.  If this field is zero, the configuration of the packet handler fields is used.  If RETRANSMIT is set, this field is ignored.</DESCRIPTION>
          <RANGE min="0" max="8191" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_RX" value="0x32" feature="rx" dev="1" wip="0">
      <SUMMARY>Switches to RX state. Command arguments are retained though sleep state, so these only need to be written when they change.</SUMMARY>
      <DESCRIPTION>Switches to RX state when condition is met.  Switch to specified state when RX packet completes.  CTS will not return until in RX mode</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHANNEL" address="1" type="u8">
          <DESCRIPTION>
            Channel number to transmit the packet on.  Frequency is determined using integer, fractional, and step size properties in the FREQ_CONTROL property group.  This value will be overwritten with <REFERENCE>START_TX</REFERENCE>:CHANNEL
          </DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="CONDITION" address="2" type="bitfield">
          <FIELD name="START" lsb="0" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Start RX immediately.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Start RX when wake up timer expires.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_LEN" address="3" type="u16">
          <DESCRIPTION>If this field is nonzero, the packet will be received using only field 1.  If this field is zero, the configuration of the packet handler fields is used.</DESCRIPTION>
          <RANGE min="0" max="8191" />
        </PARAMETER>
        <PARAMETER name="NEXT_STATE1" address="5" type="bitfield">
          <FIELD name="RXTIMEOUT_STATE" lsb="0" size="4">
            <DESCRIPTION>
              If preamble detection times out, RX will transition to RXTIMEOUT_STATE. See <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE> for details regarding how to configure preamble timeout.  Defaults to 0.
            </DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NEXT_STATE2" address="6" type="bitfield">
          <FIELD name="RXVALID_STATE" lsb="0" size="4">
            <DESCRIPTION>RX transitions to RXVALID_STATE if CRC check passes when CRC is enabled via PKT group properties. If CRC is not enabled, upon receiving packet received interrupt, RX transitions to RXVALID_STATE.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NEXT_STATE3" address="7" type="bitfield">
          <FIELD name="RXINVALID_STATE" lsb="0" size="4">
            <DESCRIPTION>If CRC checking is enabled, in case of CRC error, RX will transition to RXINVALID_STATE.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="RX_HOP" value="0x36" feature="pro2" dev="1" wip="0">
      <SUMMARY>Hop to a new frequency while in RX.</SUMMARY>
      <DESCRIPTION>While in RX state this will hop to the frequency specified by the parameters and start searching for a preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="INTE" address="1" type="u8">
          <DESCRIPTION>INTE register value</DESCRIPTION>
          <RANGE min="0" max="127" />
        </PARAMETER>
        <PARAMETER name="FRAC2" address="2" type="u8">
          <DESCRIPTION>FRAC2 register value</DESCRIPTION>
          <RANGE min="0" max="15" />
        </PARAMETER>
        <PARAMETER name="FRAC1" address="3" type="u8">
          <DESCRIPTION>FRAC1 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="FRAC0" address="4" type="u8">
          <DESCRIPTION>FRAC0 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT1" address="5" type="u8">
          <DESCRIPTION>VCO_CNT1 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT0" address="6" type="u8">
          <DESCRIPTION>VCO_CNT0 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="CHANGE_STATE" value="0x34" feature="common" dev="1" wip="0">
      <SUMMARY>Update state machine entries.</SUMMARY>
      <DESCRIPTION>This command is used to manually switch to a specified state.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="NEXT_STATE1" address="1" type="bitfield">
          <FIELD name="NEW_STATE" lsb="0" size="4">
            <DESCRIPTION>State to go to immediately.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_MFSK" value="0x35" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Start direct frequency offset transmission mode.</SUMMARY>
      <DESCRIPTION>This command is used to switch to direct frequency offset transmission mode.</DESCRIPTION>
      <DESCRIPTION>Configures MSB or LSB, invert data or not, median frequency offset.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="DIR_MODE_CFG" address="1" type="bitfield">
          <FIELD name="msb_first" lsb="1" size="1">
            <DESCRIPTION>Allows to shift in SPI data as MSB first or LSB first.</DESCRIPTION>
            <ENUMERATION value="0" name="LSB_FIRST">
              <DESCRIPTION>LSB first</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="MSB_FIRST">
              <DESCRIPTION>MSB first</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="scale_factor" lsb="4" size="2">
            <DESCRIPTION>Data samples will be scaled prior to be written to the  modem offset registers.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>This sampled data X1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>This sampled data X2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>This sampled data X4</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>This sampled data X8</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="inv_data" lsb="6" size="1">
            <DESCRIPTION>Invert SDI data.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Not invert SDI data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>SDI data will be inverted prior to be shift in.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="FREQ_OFFSET" address="2" type="u16">
          <DESCRIPTION>Median frequency offset value, in 2's Complement.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="AGC_OVERRIDE" value="0xD0" feature="common" dev="1" wip="0" internal="1">
      <SUMMARY>Override the AGC</SUMMARY>
      <DESCRIPTION>This command is used to allow override of the AGC.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="AGC_OVERRIDE" address="1" type="bitfield">
          <FIELD name="LNA_GAIN_CFG" lsb="0" size="3">
            <DESCRIPTION>LNA Gain</DESCRIPTION>
          </FIELD>
          <FIELD name="DIS_LNA_AGC" lsb="3" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Use hardware AGC to control LNA gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Disable LNA hardware AGC, set LNA gain to fixed value</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="PGA_GAIN_CFG" lsb="4" size="3">
            <DESCRIPTION>PGA Gain configuration.</DESCRIPTION>
          </FIELD>
          <FIELD name="DIS_PGA_AGC" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Use hardware AGC to control PGA gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Disable PGA hardware AGC, set PGA gain to fixed value</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="REQUEST_DEVICE_STATE" value="0x33" feature="common" dev="1" wip="0">
      <SUMMARY>Request current device state.</SUMMARY>
      <DESCRIPTION>Requests the current state of the device and lists pending TX and RX requests.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CURR_STATE" address="1" type="bitfield">
          <FIELD name="MAIN_STATE" lsb="0" size="4">
            <DESCRIPTION>Current State.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="CURRENT_CHANNEL" address="2" type="u8">
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="READ_CMD_BUFF" value="0x44" feature="common" dev="1" wip="0">
      <SUMMARY>Used to read CTS and the command response.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF0" address="1" type="u8">
          <DESCRIPTION>Byte 0 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF1" address="2" type="u8">
          <DESCRIPTION>Byte 1 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF2" address="3" type="u8">
          <DESCRIPTION>Byte 2 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF3" address="4" type="u8">
          <DESCRIPTION>Byte 3 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF4" address="5" type="u8">
          <DESCRIPTION>Byte 4 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF5" address="6" type="u8">
          <DESCRIPTION>Byte 5 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF6" address="7" type="u8">
          <DESCRIPTION>Byte 6 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF7" address="8" type="u8">
          <DESCRIPTION>Byte 7 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF8" address="9" type="u8">
          <DESCRIPTION>Byte 8 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF9" address="10" type="u8">
          <DESCRIPTION>Byte 9 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF10" address="11" type="u8">
          <DESCRIPTION>Byte 10 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF11" address="12" type="u8">
          <DESCRIPTION>Byte 11 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF12" address="13" type="u8">
          <DESCRIPTION>Byte 12 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF13" address="14" type="u8">
          <DESCRIPTION>Byte 13 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF14" address="15" type="u8">
          <DESCRIPTION>Byte 14 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF15" address="16" type="u8">
          <DESCRIPTION>Byte 15 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_A_READ" value="0x50" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with A.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_A_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_B_READ" value="0x51" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with B.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_B_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_C_READ" value="0x53" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with C.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_C_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_D_READ" value="0x57" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with C.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_D_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="WRITE_TX_FIFO" value="0x66" feature="common" dev="1" wip="0">
      <SUMMARY>Writes the TX FIFO.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command has no response to be read.
        If you write more data than the  TX FIFO can hold it will trigger a FIFO Overflow interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIRST_BYTE" address="1" type="u8">
          <DESCRIPTION>First byte to write to the TX FIFO</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="READ_RX_FIFO" value="0x77" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the RX FIFO.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
        If you read more data than the  RX FIFO contains it will trigger a FIFO Underflow interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FIRST_BYTE" address="0" type="u8">
          <DESCRIPTION>First byte in the RX FIFO.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <PROPERTY group="GLOBAL" name="XO_TUNE" value="0" default="0x40" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure crystal oscillator frequency tuning bank</SUMMARY>
      <DESCRIPTION>Crystal oscillator frequency tuning value.  0x00 is maximum frequency value and 0x7F is lowest frequency value. Each LSB code corresponds to a 70fF capacitance change. The total adjustment range assuming a 30MHz XTAL is +/-100ppm.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="127" />
      <BYTE>
        <FIELD name="TUNE_VALUE" lsb="0" size="7">
          <ENUMERATION value="0" name="FASTEST_FREQUENCY">
            <DESCRIPTION>Maximum frequency</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="127" name="SLOWEST_FREQUENCY">
            <DESCRIPTION>Lowest frequency</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="CLK_CFG" value="1" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Clock configuration options</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CLK_32K_SEL" lsb="0" size="3">
          <SUMMARY>Selects 32 kHz clock source</SUMMARY>
          <ENUMERATION value="0" name="OFF">
            <DESCRIPTION>32 kHz clock is disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="RC">
            <DESCRIPTION>32 kHz clock is driven by internal RC oscillator</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CRYSTAL">
            <DESCRIPTION>32 kHz clock is driven by External crystal</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="DIVIDED_CLK_SEL" lsb="3" size="3">
          <SUMMARY>Selected divided clock output divider.</SUMMARY>
          <ENUMERATION value="0" name="DIV_1">
            <DESCRIPTION>Clock output is system clock divided by 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIV_2">
            <DESCRIPTION>Clock output is system clock divided by 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="DIV_3">
            <DESCRIPTION>Clock output is system clock divided by 3.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="DIV_7_5">
            <DESCRIPTION>Clock output is system clock divided by 7.5.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="DIV_10">
            <DESCRIPTION>Clock output is system clock divided by 10.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="DIV_15">
            <DESCRIPTION>Clock output is system clock divided by 15.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="DIV_30">
            <DESCRIPTION>Clock output is system clock divided by 30.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="DIVIDED_CLK_EN" lsb="6" size="1">
          <SUMMARY>Enables divided clock output from the GPIOs.</SUMMARY>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Divided clock output is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Divided clock output is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="LOW_BATT_THRESH" value="2" default="0x18" feature="pro2" dev="1" wip="0">
      <SUMMARY>Low battery threshold</SUMMARY>
      <DESCRIPTION>Sets the low battery threshold</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="THRESHOLD" lsb="0" size="5">
          <RANGE min="0" max="31">! desc - "vdd_thresh = (30 + THRESH)/20. Default 2.7V"</RANGE>
          <ENUMERATION value="0" name="HIGH_POWER">
            <DESCRIPTION>1.52V</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31" name="LOW_POWER">
            <DESCRIPTION>3.13V</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="CONFIG" value="3" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Global configuration settings</SUMMARY>
      <DESCRIPTION>Various settings that affect entire chip. If PROTOCOL is specified, the chip is placed into protocol aware state.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="POWER_MODE" lsb="0" size="1">
          <ENUMERATION value="0" name="HIGH_POWER">
            <DESCRIPTION>High performance mode for RX and TX. RX current = 13mA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="LOW_POWER">
            <DESCRIPTION>Low power mode for RX and TX. RX current = 10mA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PROTOCOL" lsb="1" size="3">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Packet format is generic, no dynamic reprogramming of packet handler properties.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Packet format is IEEE802.15.4g compliant.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="FIFO_MODE" lsb="4" size="1">
          <ENUMERATION value="0" name="SPLIT_FIFO">
            <DESCRIPTION>TX and RX FIFO are independent, 64-byte size for each other.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HALF_DUPLEX_FIFO">
            <DESCRIPTION>TX/RX FIFO are sharing with 128-byte size buffer.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_CONFIG" value="4" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>GLOBAL WUT configuation</SUMMARY>
      <DESCRIPTION>Program WUT and enable events, Low Battery Detector support , Low Duty Cycle operation.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CAL_EN" lsb="0" size="1">
          <ENUMERATION value="0" name="DISABLE_CAL">
            <DESCRIPTION>Disable calibration timer</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_CAL">
            <DESCRIPTION>Enable calibration timer.  This will cause the  for 32kHz RC calibration.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_EN" lsb="1" size="1">
          <ENUMERATION value="0" name="DISABLE_WUT">
            <DESCRIPTION>Disable wake up timer</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_WUT">
            <DESCRIPTION>Enable wake up timer</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_LBD_EN" lsb="2" size="1">
          <ENUMERATION value="0" name="DISABLE_LBD">
            <DESCRIPTION>Disable low battery detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_LBD">
            <DESCRIPTION>Enable low battery detect on WUT inteval</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_CAL_PERIOD" lsb="3" size="3">
          <DESCRIPTION>If enabled by CAL_EN, selects how often to power up the chip and perform 32 kHz rc calibration.</DESCRIPTION>
          <ENUMERATION value="0" name="1_SEC">
            <DESCRIPTION>1 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="2_SEC">
            <DESCRIPTION>2 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="4_SEC">
            <DESCRIPTION>4 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="8_SEC">
            <DESCRIPTION>8 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="16_SEC">
            <DESCRIPTION>16 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="32_SEC">
            <DESCRIPTION>32 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="64_SEC">
            <DESCRIPTION>64 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="128_SEC">
            <DESCRIPTION>128 sec</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_LDC_EN" lsb="6" size="2">
          <ENUMERATION value="0" name="DISABLE_LDC">
            <DESCRIPTION>Disable LDC operation</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="RX_LDC">
            <DESCRIPTION>LDC RX Mode.  START_RX end state is used . - Could allow hopping, need to determine how to support LDC in this case</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="TX_LDC">
            <DESCRIPTION>treated as wake-up - START_TX. - START_TX end state is used .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_M_15_8" value="5" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_M_15_8</SUMMARY>
      <DESCRIPTION>Sets HW WUT_M higher byte</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_M_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_M_7_0" value="6" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_M_7_0</SUMMARY>
      <DESCRIPTION>Sets HW WUT_M lower byte.  The M (mantissa) value is only used to define the WUT, and must be set to a minimum of decimal 1.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_M_7_0" lsb="0" size="8">
          <RANGE min="1" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_R" value="7" default="0x20" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_R</SUMMARY>
      <DESCRIPTION>Sets HW WUT_R.  The R (exponent) value is shared between the WUT and the LDC mode duration. The value of R can be 0, and is limited to a maximum of decimal 20 (10100).</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_R" lsb="0" size="5">
          <RANGE min="0" max="20" />
        </FIELD>
        <FIELD name="WUT_SLEEP" lsb="5" size="1">
          <ENUMERATION value="0" name="READY">
            <DESCRIPTION>Go to Ready state after WUT</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SLEEP">
            <DESCRIPTION>Go to Sleep state after WUT</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RSSI_CHECK" lsb="6" size="1">
          <ENUMERATION value="0" name="READY">
            <DESCRIPTION>Disabel check RSSI threshold after Rx state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SLEEP">
            <DESCRIPTION>Enable check RSSI threshold after RX state</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_LDC" value="8" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_LDC</SUMMARY>
      <DESCRIPTION>Sets M for Low Duty Cycle duration.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_LDC" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="ENABLE" value="256" default="0x04" feature="common" dev="1" wip="0">
      <SUMMARY>Interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables top-level interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="PH_INT_STATUS_EN" lsb="0" size="1">
          <DESCRIPTION>If set, Enables PH_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="MODEM_INT_STATUS_EN" lsb="1" size="1">
          <DESCRIPTION>If set, Enables MODEM_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CHIP_INT_STATUS_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables CHIP_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="PH_ENABLE" value="257" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Packet handler interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables packet handler interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIFO_ALMOST_FULL_EN" lsb="0" size="1" feature="rx">
          <DESCRIPTION>If set, Enables RX_FIFO_ALMOST_FULL interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="TX_FIFO_ALMOST_EMPTY_EN" lsb="1" size="1" feature="tx">
          <DESCRIPTION>If set, Enables TX_FIFO_ALMOST_EMPTY interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CRC16_ERROR_EN" lsb="2" size="1" feature="pro2" internal="1">
          <DESCRIPTION>If set, Enables CRC16_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CRC_ERROR_EN" lsb="3" size="1" feature="rx">
          <DESCRIPTION>If set, Enables CRC_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PACKET_RX_EN" lsb="4" size="1" feature="rx">
          <DESCRIPTION>If set, Enables PACKET_RX interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PACKET_SENT_EN" lsb="5" size="1" feature="tx">
          <DESCRIPTION>If set, Enables PACKET_SENT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FILTER_MISS_EN" lsb="6" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables FILTER_MISS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FILTER_MATCH_EN" lsb="7" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables FILTER_MATCH interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="MODEM_ENABLE" value="258" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Modem interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables modem interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="SYNC_DETECT_EN" lsb="0" size="1">
          <DESCRIPTION>If set, Enables SYNC_DETECT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PREAMBLE_DETECT_EN" lsb="1" size="1">
          <DESCRIPTION>If set, Enables PREAMBLE_DETECT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="INVALID_PREAMBLE_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables INVALID_PREAMBLE interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_EN" lsb="3" size="1">
          <DESCRIPTION>If set, Enables RSSI interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_JUMP_EN" lsb="4" size="1">
          <DESCRIPTION>If set, Enables RSSI_JUMP interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="INVALID_SYNC_EN" lsb="5" size="1">
          <DESCRIPTION>If set, Enables INVALID_SYNC interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="CHIP_ENABLE" value="259" default="0x04" feature="common" dev="1" wip="0">
      <SUMMARY>Chip interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables chip interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_EN" lsb="0" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables WUT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="LOW_BATT_EN" lsb="1" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables LOW_BATT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CHIP_READY_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables CHIP_READY interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CMD_ERROR_EN" lsb="3" size="1">
          <DESCRIPTION>If set, Enables CMD_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="STATE_CHANGE_EN" lsb="4" size="1">
          <DESCRIPTION>If set, Enables STATE_CHANGE interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_EN" lsb="5" size="1">
          <DESCRIPTION>If set, Enables FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CAL_EN" lsb="6" size="1">
          <DESCRIPTION>If set, Enables CAL interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="A_MODE" value="512" default="0x01" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register A Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register A.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_A_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="B_MODE" value="513" default="0x02" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register B Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register B.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_B_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="C_MODE" value="514" default="0x09" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register C Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register C.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_C_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="D_MODE" value="515" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register D Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register D.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_A_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="MODE" value="8704" default="0x08" feature="pro2" dev="1" wip="0">
      <SUMMARY>PA operating mode and groups.</SUMMARY>
      <DESCRIPTION>Specify PA mode and HPA/MPA groups</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM2</APIUPDATED>
      <BYTE>
        <FIELD name="PA_MODE" lsb="0" size="2">
          <DESCRIPTION>PA mode.</DESCRIPTION>
          <ENUMERATION value="0" name="CLE">
            <DESCRIPTION>CLE - Switch, for Square Wave or Class E</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SWC">
            <DESCRIPTION>SWC - Switch Current</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PA_GROUP" lsb="2" size="4">
          <DESCRIPTION>ODEV group and unit configuration for devices using programmable step size PA.</DESCRIPTION>
          <ENUMERATION value="1" name="HPA0_1GRP">
            <DESCRIPTION>HPA0 1 group on.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="HPA0_2GRP">
            <DESCRIPTION>HPA0 2 groups on.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PA_RAMP" lsb="7" size="1">
          <DESCRIPTION>PA ramp.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable Txramp</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable Txramp</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="PWR_LVL" value="8705" default="0x7F" feature="common" dev="1" wip="0">
      <SUMMARY>PA Level Configuration</SUMMARY>
      <DESCRIPTION>Set the number of unit LV ODEV devices used in each group.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="DDAC" lsb="0" size="7">
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="BIAS_CLKDUTY" value="8706" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>PA Bias and TX clock duty cycle configuration</SUMMARY>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="OB" lsb="0" size="6">
          <DESCRIPTION>Set the bias current in Switch Current mode for each UNIT of ODEV.</DESCRIPTION>
          <RANGE min="0" max="63" />
        </FIELD>
        <FIELD name="CLK_DUTY" lsb="6" size="2">
          <DESCRIPTION>Select 25% or 50% duty cycle clocks for transmitter to improve transmit efficiency.</DESCRIPTION>
          <ENUMERATION value="0" name="DIFF_50">
            <DESCRIPTION>TXP: 50%, TXN: 50%</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIFF_25">
            <DESCRIPTION>TXP: 25%, TXN: 25%</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="SINGLE_50">
            <DESCRIPTION>TXP: 50%, TXN: 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="SINGLE_25">
            <DESCRIPTION>TXP: 25%, TXN: 0</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="TC" value="8707" default="0x5D" feature="pro2" internal="0" dev="1" wip="0">
      <SUMMARY>PA cascode ramping Configuration</SUMMARY>
      <DESCRIPTION>Configuration control for PA power ramping in order to minimize switching spectrum noise.  In (G)FSK mode, the values of TC and FSK_MOD_DLY should be programmed together so data modulation only occurs after the PA power ramping has been completed.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="FSK_MOD_DLY" lsb="5" size="3">
          <DESCRIPTION>In (G)FSK mode this is the delay from PA enable to the start of modulation.  This is necessary to give the PA time to ramp.</DESCRIPTION>
          <ENUMERATION value="0" name="2_US">
            <DESCRIPTION>Modulation will begin 2us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="6_US">
            <DESCRIPTION>Modulation will begin 6us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="10_US">
            <DESCRIPTION>Modulation will begin 10us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="14_US">
            <DESCRIPTION>Modulation will begin 14us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="18_US">
            <DESCRIPTION>Modulation will begin 18us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="22_US">
            <DESCRIPTION>Modulation will begin 22us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="26_US">
            <DESCRIPTION>Modulation will begin 26us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="30_US">
            <DESCRIPTION>Modulation will begin 30us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TC" lsb="0" size="5">
          <DESCRIPTION>Ramping time (up and down) for the HV cascode of output device.           The ramp rate is determined by the formula: Ramp time=20us/(32-TC)        NOTE: If using (G)FSK modulation this value must be programmed to a value less than 29.</DESCRIPTION>
          <RANGE min="0" max="31" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="RAMP_EX" value="8708" default="0x00" feature="pro2" internal="0" dev="1" wip="0">
      <SUMMARY>PA ramping voltage driving txramp pad Configuration</SUMMARY>
      <DESCRIPTION>Txramp_stop will receive ook signal from digital and translate that into a 0 to 1.5V ramping voltage driving txramp pad. This is used to provide a ramping reference for external power amplifier.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="TC" lsb="0" size="4">
          <DESCRIPTION>Ramping time (up and down) determined by the formula: Ramp time=20us/(32-TC).</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
        <FIELD name="VSET" lsb="4" size="4">
          <DESCRIPTION>Regulator voltage settings. 0 represents 1.0v, 15 represents 1.5v</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="PFDCP_CPFF" value="8960" default="0x2C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Feed forward charge pump current selection.</SUMMARY>
      <DESCRIPTION>The current level is 5uA times the selection value.</DESCRIPTION>
      <DESCRIPTION>The 7th bit is a test bit to be used only for debugging  when the phase noise is excessive. The 7th bit gives 160uA and not 32.uA.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="cp_ff_cur" lsb="0" size="7">
          <ENUMERATION value="0">
            <DESCRIPTION>0 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>5 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="127">
            <DESCRIPTION>Maximum 475 uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="PFDCP_CPINT" value="8961" default="0x0E" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Integration charge pump current selection.</SUMMARY>
      <DESCRIPTION>The current level is 5uA times the selection value.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="cp_int_cur" lsb="0" size="4">
          <ENUMERATION value="0">
            <DESCRIPTION>0 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>5 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>Maximum 75 uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="VCO_KV" value="8962" default="0x0B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Scaling on integrated-path Kv and feed forward path Kv.</SUMMARY>
      <DESCRIPTION>Scaling on integrated-path Kv and feed forward path Kv.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="kv_int" lsb="0" size="2">
          <DESCRIPTION>Sets the scaling on integrated-path Kv.</DESCRIPTION>
          <ENUMERATION value="0" name="GND">
            <DESCRIPTION>Sets kv_int port of VCO to ground,  this is independent of kv_int_opnlop settings.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="33PERCENT">
            <DESCRIPTION>Sets kv_int to 1/3 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="66PENCENT">
            <DESCRIPTION>Sets kv_int to 2/3 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="MAX">
            <DESCRIPTION>Sets kv_int to its maximum value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="kv_dir" lsb="2" size="2">
          <DESCRIPTION>Sets the scaling on feed forward path Kv.</DESCRIPTION>
          <ENUMERATION value="0" name="GND">
            <DESCRIPTION>Sets kv_dir port of VCO to ground,  this is independent of kv_dir_opnlop settings.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HALF">
            <DESCRIPTION>Sets kv_dir to 1/2 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="MAX">
            <DESCRIPTION>Sets kv_dir to its maximum value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="kv_min" lsb="4" size="1">
          <DESCRIPTION>Absolute minimum value of KV, this is independeant of VCO_KVCAL setting.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>use property VCO_KVCAL value</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>sets KV to minimum value</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT3" value="8963" default="0x04" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Loop filter of R2 value</SUMMARY>
      <DESCRIPTION>The value of R2 from 18kOhm to 144kOhm.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_r2" lsb="0" size="3">
          <RANGE min="0" max="7" />
          <ENUMERATION value="0">
            <DESCRIPTION>R2 = 18k</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>R2 = 144k</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT2" value="8964" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>value of C2 for loop filter</SUMMARY>
      <DESCRIPTION>The value of C2 from 877fF to 11.25pF with 335fF LSB, 5-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_c2" lsb="0" size="5">
          <ENUMERATION value="0">
            <DESCRIPTION>C2 = 877fF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31">
            <DESCRIPTION>C2 = 11.25pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT1" value="8965" default="0x73" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>value of C1 and C3 for loop filter</SUMMARY>
      <DESCRIPTION>value of C1 and C3 for loop filter</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_c3" lsb="0" size="2">
          <DESCRIPTION>The value of C3 linearly from 9pF up to 12pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>C3 =  9pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>C3 = 10pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>C3 = 11pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>C3 = 12pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="lpf_ff_c1_code" lsb="2" size="2">
          <DESCRIPTION>Offsets the value of C1 with 1pF steps from 0 up to 3pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>delta C1 = 0pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>delta C1 = 1pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>delta C1 = 2pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>delta C1 = 3pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="lpf_ff_c1" lsb="4" size="3">
          <DESCRIPTION>The value of C1 from 4.55pF to 7.21pF with 380fF LSB, 3-bit.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>C1 = 4.55pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>C1 = 4.93pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>C1 = 5.31pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>C1 = 5.69pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>C1 = 6.07pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>C1 = 6.45pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>C1 = 6.83pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>C1 = 7.21pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT0" value="8966" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Bias current of the loop filter.</SUMMARY>
      <DESCRIPTION>Bias current of the loop filter, 25uA, 34uA, 50uA or 100uA.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_bias" lsb="0" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>25uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>34uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>50uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>100uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="VCO_KVCAL" value="8967" default="0x05" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Scaling entire KV of VCO.</SUMMARY>
      <DESCRIPTION>Scaling on VCO KV for all parameters.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="kvcal" lsb="0" size="4">
          <DESCRIPTION>Sets the scaling on the VCO ladder</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Max voltage settings</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>Min voltage settings</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="15" />
        </FIELD>
        <FIELD name="ladr_select" lsb="4" size="1">
          <DESCRIPTION>Enable VCO ladder.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable VCO ladder</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable VCO ladder</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MOD_TYPE" value="8192" default="0x02" feature="pro2" dev="1" wip="0">
      <SUMMARY>Modulation Type</SUMMARY>
      <DESCRIPTION>This property selects between OOK, FSK, 4FSK and GFSK modulation, modulation source, and tx direct mode control.</DESCRIPTION>
      <DESCRIPTION>The modulator must be configured for one mode through the entire packet.  If portions of the packet alternate between FSK and 4FSK modes, the modem should be programmed to 4FSK mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="MOD_TYPE" lsb="0" size="3">
          <ENUMERATION value="0" name="CW">
            <DESCRIPTION>CW</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="OOK">
            <DESCRIPTION>OOK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="2FSK">
            <DESCRIPTION>2FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="2GFSK">
            <DESCRIPTION>2GFSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="4FSK">
            <DESCRIPTION>4FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="4GFSK">
            <DESCRIPTION>4GFSK</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MOD_SOURCE" lsb="3" size="2">
          <ENUMERATION value="0" name="PACKET">
            <DESCRIPTION>Modulation source is packet handler fifo</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIRECT">
            <DESCRIPTION>Modulation source is direct mode pin</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="PSEUDO">
            <DESCRIPTION>Modulation source is pseudo-random generator</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_GPIO" lsb="5" size="2">
          <DESCRIPTION>
            Selects which GPIO will be used as the TX data source if MOD_SOURCE = DIRECT.  The gpio selected here must be configured (using <REFERENCE>GPIO_PIN_CFG</REFERENCE>) as a CMOS input.
          </DESCRIPTION>
          <ENUMERATION value="0" name="GPIO0">
            <DESCRIPTION>TX direct mode uses gpio0 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="GPIO1">
            <DESCRIPTION>TX direct mode uses gpio1 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="GPIO2">
            <DESCRIPTION>TX direct mode uses gpio2 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GPIO3">
            <DESCRIPTION>TX direct mode uses gpio3 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_TYPE" lsb="7" size="1">
          <ENUMERATION value="0" name="SYNC">
            <DESCRIPTION>Direct mode operates in synchronous mode, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ASYNC">
            <DESCRIPTION>Direct mode operates in asynchronous mode, applies to TX only.  GFSK is not supported.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MAP_CONTROL" value="8193" default="0x80" feature="pro2" dev="1" wip="0">
      <SUMMARY>Controls bit mapping.</SUMMARY>
      <DESCRIPTION>Modem Mapping Control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="eninv_adcq" internal="1" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert ADC Q channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert ADC Q channel.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="eninv_fd" lsb="4" size="1">
          <DESCRIPTION>If set, frequency deviation's priority  from negative to positive.</DESCRIPTION>
        </FIELD>
        <FIELD name="eninv_txbit" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert TX data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert TX data bits.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="eninv_rxbit" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert RX data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert RX data bits.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enmanch" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Disable Manchester coding.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable Manchester coding.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DSM_CTRL" value="8194" default="0x07" feature="pro2" dev="1" wip="0">
      <SUMMARY>DSM control</SUMMARY>
      <DESCRIPTION>Delta Sigma Modulator control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dsm_order" lsb="0" size="2">
          <DESCRIPTION>DSM Mode</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>0 order, with 0 output continuously.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>1st order, on noise shaping.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>2nd order, MASH 1-1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>3rd order, MASH 1-1-1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsm_lsb" lsb="2" size="1">
          <DESCRIPTION>If set, DSM LSB input will be high all times.</DESCRIPTION>
        </FIELD>
        <FIELD name="dsm_rst" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>DSM reset is not active.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM will be in reset state until it is clear.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmdttp" lsb="4" size="1">
          <DESCRIPTION>Dithering type</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>+1/0 is added to DSM input LSB.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>+1/-1 is added to DSM input LSB.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmdt_en" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>DSM dithering is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM dithering is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsm_mode" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>MASH 1-1-1 DSM will be selected.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>A single loop DSM will be selected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmclk_sel" lsb="7" size="1">
          <DESCRIPTION>DSM clock source selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>DSM clock comes from 30MHz PLL feedback clock.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM clock comes from 30MHz crystal clock.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_2" value="8195" default="0x0F" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_23_16" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_1" value="8196" default="0x42" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_0" value="8197" default="0x40" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_3" value="8198" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 3 of TX NCOs modulo and TX filter oversampling ratio.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_25_24" lsb="0" size="2">
          <RANGE min="0" max="3" />
        </FIELD>
        <FIELD name="txosr" lsb="2" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>TX filter's output oversampling ratio is 10. GFSK Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>TX filter's output oversampling ratio is 40. GFSP Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>TX filter's output oversampling ratio is 20. GFSP Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Reserved</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_2" value="8199" default="0xC9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_23_16" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_1" value="8200" default="0xC3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_0" value="8201" default="0x80" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380.  Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_2" value="8202" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of TX frequency deviation (a 17-bit unsigned number).  This only programs the MSB of TX frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_16" lsb="0" size="1">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_1" value="8203" default="0x06" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_0" value="8204" default="0xD3" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_OFFSET_1" value="8205" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of frequency offset adjustment(a 16-bit signed number).</SUMMARY>
      <DESCRIPTION>In TX mode, frequency offset is used to provide an offset to  the programmed TX frequency. This allows fine tuning of the TX frequency  to account for the variability of the TX reference frequency.</DESCRIPTION>
      <DESCRIPTION>In RX mode, only when AFC is disabled, the frequency offset can be  adjusted manually by this property.</DESCRIPTION>
      <DESCRIPTION>Frequency offset adjustment is a signed 16-bit.  The range is from -400kHz to +400kHz.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqoffset_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_OFFSET_0" value="8206" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of frequency offset(a 16-bit signed number).</SUMMARY>
      <DESCRIPTION>In TX mode, frequency offset is used to provide an offset to  the programmed TX frequency. This allows fine tuning of the TX frequency  to account for the variability of the TX reference frequency.</DESCRIPTION>
      <DESCRIPTION>In RX mode, only when AFC is disabled, the frequency offset can be  adjusted manually by this property.</DESCRIPTION>
      <DESCRIPTION>Frequency offset adjustment is a signed 16-bit.  The range is from -400kHz to +400kHz.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqoffset_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_8" value="8207" default="0x67" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 8th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 8th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_7" value="8208" default="0x60" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 7th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 7th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe7" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_6" value="8209" default="0x4D" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 6th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 6th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe6" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_5" value="8210" default="0x36" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 5th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 5th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe5" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_4" value="8211" default="0x21" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 4th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 4th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe4" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_3" value="8212" default="0x11" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 3rd coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 3rd coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe3" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_2" value="8213" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 2nd coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 2nd coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe2" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_1" value="8214" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 1st coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 1st coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe1" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_0" value="8215" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 0th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 0th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_RAMP_DELAY" value="8216" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>TX filter ramp delay setting.</SUMMARY>
      <DESCRIPTION>Unit in TX bit cycle, it is calculated according to modulation type.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ramp_dly" lsb="0" size="3">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MDM_CTRL" value="8217" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>MDM control</SUMMARY>
      <DESCRIPTION>Detector selection and PM pattern configuration.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ph_src_sel" lsb="7" size="1">
          <DESCRIPTION>BCR/Slicer phase source selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Input from phase computer output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Input from detector's output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_CONTROL" value="8218" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Fixed or scalable IF.</SUMMARY>
      <DESCRIPTION>Specifies fixed-IF(468.75kHz), zero-IF, or scalable IF.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="fixif" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>scaled-IF mode</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>fixed-IF mode, if_freq should be set to 468.75kHz</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="zeroif" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>normal mode</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>zero-IF mode, if_freq should be set to 0</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_2" value="8219" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of IF frequency setting.</SUMMARY>
      <DESCRIPTION>Bits 16 an 17 of the 18-bit IF frequency. Specify fixed-IF(468.75kHz), zero-IF, or scalable IF.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_17_16" lsb="0" size="2">
          <DESCRIPTION>Bits 16 an 17 of the 18-bit IF frequency.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_1" value="8220" default="0xC0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of IF frequency setting</SUMMARY>
      <DESCRIPTION>IF frequency is 18-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_0" value="8221" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of IF frequency setting</SUMMARY>
      <DESCRIPTION>IF frequency is 18-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DECIMATION_CFG1" value="8222" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the three CIC filter decimator ratios.</SUMMARY>
      <DESCRIPTION>Specifies the exponent of decimation ratios of the three CIC decimators in RX filter chain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ndec0" lsb="1" size="3">
          <DESCRIPTION>OOK modem CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec0.</DESCRIPTION>
          <DESCRIPTION>ndec0 should be set to 0 for non-OOK modem.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>decimating by 16</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>decimating by 32</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>decimating by 64</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>decimating by 128</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ndec1" lsb="4" size="2">
          <DESCRIPTION>First stage CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec1.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ndec2" lsb="6" size="2">
          <DESCRIPTION>Second stage CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec2.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DECIMATION_CFG0" value="8223" default="0x20" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies miscellaneous decimator filter selections.</SUMMARY>
      <DESCRIPTION>This property specifies the selection of the two polyphase filters preceding CIC filters,  the droop compensation filter, the RX decimate by 8 2x filter and the channel filter power mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxgainx2" lsb="0" size="1">
          <DESCRIPTION>Double filter's gain for decimating by 8.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>double filter's gain for decimating by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dwn2byp" lsb="4" size="1">
          <DESCRIPTION>Controls decimation by 2 filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass decimate-by-2 polyphase filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dwn3byp" lsb="5" size="1">
          <DESCRIPTION>Controls decimation by 3 filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass decimate-by-3 polyphase filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="droopfltbyp" lsb="6" size="1">
          <DESCRIPTION>Controls droop compensation filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass droop compensation filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="chflt_lopw" lsb="7" size="1">
          <DESCRIPTION>Controls channel filter power mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Channel filter operates in low power mode,  i.e., the number of taps is reduced from 27 to 15.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_20" value="8224" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_21" value="8225" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_OSR_1" value="8226" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of RX symbol oversampling rate at BCR/Slicer (12-bit unsigned number).</SUMMARY>
      <DESCRIPTION>High byte of RX symbol oversampling rate at BCR/Slicer (12-bit unsigned number).</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxosr_11_8" lsb="0" size="4">
          <DESCRIPTION>High byte of RX symbol oversampling rate at BCR/Slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_OSR_0" value="8227" default="0x4B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of RX symbol oversampling rate at BCR/Slicer.</SUMMARY>
      <DESCRIPTION>Low byte of RX symbol oversampling rate at BCR/Slicer, total 12 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxosr_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of RX symbol oversampling rate at BCR/Slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_2" value="8228" default="0x06" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Specifies the 6 MSBs of the BCR NCO offset.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_21_16" lsb="0" size="6">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_1" value="8229" default="0xD3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_0" value="8230" default="0xA0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Low byte of RX NCO offset.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GAIN_1" value="8231" default="0x06" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR loop gain (an unsigned 11-bit number).</SUMMARY>
      <DESCRIPTION>High byte of clock recovery timing loop gain, total 11 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crgain_10_8" lsb="0" size="3">
          <DESCRIPTION>High byte of clock recovery timing loop gain.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GAIN_0" value="8232" default="0xD3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of RX BCR loop gain.</SUMMARY>
      <DESCRIPTION>Low byte of clock recovery timing loop gain, total 11 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crgain_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GEAR" value="8233" default="0x02" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX BCR loop gear control.</SUMMARY>
      <DESCRIPTION>RX BCR loop gear control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crslow" lsb="0" size="3">
          <DESCRIPTION>The slow gear applies after preamble is detected.  The effective BCR loop gain of: crgain/(2^crslow) will be applied in clock recovery  timing loop.</DESCRIPTION>
        </FIELD>
        <FIELD name="crfast" lsb="3" size="3">
          <DESCRIPTION>The fast gear applies before preamble is detected.  The effective BCR loop gain of: crgain/(2^crfast) will be applied in clock recovery  timing loop.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_MISC1" value="8234" default="0xC0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>: Byte 1 of RX BCR loop misc control.</SUMMARY>
      <DESCRIPTION>specifies the RX BCR loop misc controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="bcrfbbyp" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR feedback phase compensation is bypassed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="slicefbbyp" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Slicer feedback phase compensation is bypassed</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rxncocomp" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR NCO compensation is enabled when data rate error is greater than 1%.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Rxcomp_lat" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>BCR NCO compensation is sampled by end of preamble</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR NCO compensation is sampled by preamble detection</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Crgainx2" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR loop gain is doubled</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Dis_midpt" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR midpoint phase correction is disabled; this bit shall be  set if preamble is in '1010' patterns.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Esc_midpt" lsb="0" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>When BCR mid-point phase is detected, NCO will stop running  for one sample clock to escape BCR mid-point phase sample.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>When BCR mid-point phase is detected, current phase error is  added to NCO to escape BCR mid-point phase sample.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_MISC0" value="8235" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of RX BCR loop misc control.</SUMMARY>
      <DESCRIPTION>Specifies the RX BCR loop misc controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="adcwatch" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC watch dog is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC watch dog is enabled. If the invalid preamble is detected and  no 1010 pattern is detected, ADC reset will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="adcrst" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC watch dog is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable ADC reset from AGC loop.  If IF-PD's current and previous high threshold exceed,  ADC reset will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="distogg" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enabled. If the phase differential output is zero,  the discriminator output will be toggling.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ph0size" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>5 consecutive zeros of phase differential output will cause RX machine reset.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>3 consecutive zeros of phase differential output will cause RX machine reset.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GEAR" value="8236" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX AFC loop gear control.</SUMMARY>
      <DESCRIPTION>RX AFC loop gear control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afc_slow" lsb="0" size="3">
          <DESCRIPTION>AFC Low Gear setting.</DESCRIPTION>
          <DESCRIPTION>It will be applied to AFC gain control after the preamble is detected.</DESCRIPTION>
        </FIELD>
        <FIELD name="afc_fast" lsb="3" size="3">
          <DESCRIPTION>AFC High Gear setting.</DESCRIPTION>
          <DESCRIPTION>It will be applied to AFC gain control before the preamble is detected.</DESCRIPTION>
        </FIELD>
        <FIELD name="gear_sw" lsb="6" size="2">
          <DESCRIPTION>AFC gear swith control source.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Preamble detection</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Sync word detection</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Estimated frequency error of Mean detector is consecutively  less than the half eye-threshold. NOTE: This consecutive number is defined in register sch_frzth.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Preamble detection</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_WAIT" value="8237" default="0x23" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX AFC loop wait time control.</SUMMARY>
      <DESCRIPTION>Short and long wait periods after AFC correction.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lgwait" lsb="0" size="4">
          <DESCRIPTION>This specifies the long wait period per AFC correction cycle after preamble is detected.  When set to '0' then AFC is disabled.</DESCRIPTION>
        </FIELD>
        <FIELD name="shwait" lsb="4" size="4">
          <DESCRIPTION>This specifies the short wait period per AFC correction cycle before preamble is detected. Effective wait time is (shwait+1)*2Tb.  When set to '0' then AFC is disabled.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GAIN_1" value="8238" default="0x83" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of AFC loop gain</SUMMARY>
      <DESCRIPTION>High byte of AFC loop gain, total 13 bits</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="afcgain_12_8" lsb="0" size="5">
          <DESCRIPTION>High byte of AFC loop gain.</DESCRIPTION>
        </FIELD>
        <FIELD name="afcbd" lsb="6" size="1">
          <SUMMARY>Select CH filter coefficients.</SUMMARY>
          <DESCRIPTION>If set, CH filter coefficients will be switched to the second CH filter coefficients (rx2coe0~13) from the first CH filter coefficients (rx1coe0~13) after the preamble is detected.  If clear, CH  filter will use the first CH filter coefficients (rx1coe0~13) for the entire RX.</DESCRIPTION>
        </FIELD>
        <FIELD name="enafc" lsb="7" size="1">
          <DESCRIPTION>Enable frequency estimator.</DESCRIPTION>
          <DESCRIPTION>If set, estimated frequency error will be available to feedback to  frac-N, BCR and slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GAIN_0" value="8239" default="0x69" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of AFC loop gain</SUMMARY>
      <DESCRIPTION>Low byte of AFC loop gain, total 13 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afcgain_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of AFC loop gain.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_LIMITER_1" value="8240" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Freeze AFC and set high byte of AFC limiter.</SUMMARY>
      <DESCRIPTION>Freeze AFC and set high byte of AFC limiter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afclim_14_8" lsb="0" size="7">
          <DESCRIPTION>High byte of AFC limiter, total 15 bits</DESCRIPTION>
          <DESCRIPTION>If the MSB of AFC limiter is set, internal limiter value is afclim * 8.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_LIMITER_0" value="8241" default="0x40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of AFC limiter.</SUMMARY>
      <DESCRIPTION>Low byte of AFC limiter. Total 15 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afclim_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_MISC" value="8242" default="0xA0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies misc AFC control bits.</SUMMARY>
      <DESCRIPTION>Specifies misc AFC control bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="enafcfrz" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>AFC will operate over the entire packet.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will be frozen after the gear switching.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enfbpll" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable AFC correction value to feedback to PLL.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="en2Tb_est" lsb="5" size="1">
          <DESCRIPTION>This bit must be set for standard packet mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>AFC will use MA or Mean detector frequency estimator's output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will use 2Tb frequency estimator's output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enfzpmend" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will be frozen at end of '10101' pattern preamble.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enafc_clksw" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>2Tb frequency estimator's clock will be  switched from free-running bit clock to BCR's bit clock  after the preamble is detected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ook_zerog" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>FSK LO modulation will be enabled in ook zero-IF mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>GFSK LO modulation will be enabled in ook zero-IF mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="non_frzen" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>AFC frozen will be disabled while Mean detector found longer consecutive ones or zeros than search period.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC frozen will be enabled while Mean detector found longer consecutive ones or zeros than search period .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_ZIFOFF" value="8243" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>AFC fixed frequency offset in zero IF mode.</SUMMARY>
      <DESCRIPTION>AFC fixed frequency offset in zero IF mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="zeroff" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ADC_CTRL" value="8244" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sigma Deta ADC controlling.</SUMMARY>
      <DESCRIPTION>ADC complex or real mode selection</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="realadc" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC complex mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC real mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="en_drst" lsb="3" size="1">
          <ENUMERATION value="1">
            <DESCRIPTION>Enable direct reset by modem.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="hgain" lsb="4" size="1">
          <ENUMERATION value="1">
            <DESCRIPTION>Adds 12dB gain to ADC input for IR calibration.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_CONTROL" value="8245" default="0xE0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>AGC control</SUMMARY>
      <DESCRIPTION>AGC control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rst_pkdt_period" lsb="0" size="1">
          <DESCRIPTION>Reset peak detector periodically.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Reset only when the digital received a '1' from  the synchronized peak detector output</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC will reset the peak detector periodically.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="adc_gain_cor_en" lsb="1" size="1">
          <DESCRIPTION>Sets ADC input gain when minimal AGC gain is detected.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>ADC input gain correction is disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC input gain is lowered by 6dB</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="agc_slow" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC speed will is reduced by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sgi_n" lsb="4" size="1">
          <DESCRIPTION>AGC stop increasing gain override bit.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>AGC gain increases during signal reductions are prevented.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC gain increases during signal reductions are allowed.  Only effective during preamble, prior to detection of PREAMBLE_VALID  signal in ANT-DIV mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rfpdslow" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>RFPG loop will slow down the gain decrease in -6dB step.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RFPG loop will slow down the gain decrease in -3dB step.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ifpdslow" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>IFPG loop will slow down the gain decrease in -6dB step.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>IFPG loop will slow down the gain decrease in -3dB step.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="agcovpkt" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The full AGC operates only during Preamble,  gain increases over remainder of packet are not allowed.  Gain reductions in the event of signal level increases are always allowed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC function operates over the entire packet.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_36" value="8246" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_37" value="8247" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_WINDOW_SIZE" value="8248" default="0x11" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the AGC measurement and settling window size.</SUMMARY>
      <DESCRIPTION>Sets PGA and LNA settling time window and measurement time window.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="settlewin" lsb="0" size="4">
          <DESCRIPTION>Settling window size, effective settling time is settlewin/Fs_rx period)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
        <FIELD name="measwin" lsb="4" size="4">
          <DESCRIPTION>Measurement window size, effective measurement time  is measwin/Fs_rx period)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_RFPD_DECAY" value="8249" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Sets RF detector decay time.</SUMMARY>
      <DESCRIPTION>Sets RF detector decay time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rfpd_decay" lsb="0" size="8">
          <DESCRIPTION>Effective decay time is rfpdcay/Fs_rx)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_IFPD_DECAY" value="8250" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Sets IF detector decay time.</SUMMARY>
      <DESCRIPTION>Sets IF detector decay time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ifpd_decay" lsb="0" size="8">
          <DESCRIPTION>Effective decay time is ifpdcay/Fs_rx)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_GAIN1" value="8251" default="0x0B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the gain factor of the secondary branch in 4(G)FSK ISI-suppression.</SUMMARY>
      <DESCRIPTION>Controls 4(G)FSK suppression gain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fsk_isis_disable" lsb="7" size="1">
          <DESCRIPTION>Second phase compensation factor for 4(G)FSK.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Disable 4(G)FSK ISI-suppression.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4fsk_gain1" lsb="0" size="7">
          <DESCRIPTION>Gain factor of the secondary branch in 4(G)FSK ISI-suppression.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_GAIN0" value="8252" default="0x1C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the gain factor of the primary branch in 4(G)FSK ISI-suppression.</SUMMARY>
      <DESCRIPTION>Controls 4(G)FSK suppression gain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fsk_gain0" lsb="0" size="7">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_TH1" value="8253" default="0x40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of 4(G)FSK slicer threshold.</SUMMARY>
      <DESCRIPTION>High byte of 4(G)FSK slicer threshold.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskth_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_TH0" value="8254" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of 4(G)FSK slicer threshold.</SUMMARY>
      <DESCRIPTION>Low byte of 4(G)FSK slicer threshold.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskth_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_MAP" value="8255" default="0xB4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>4(G)FSK symbol mapping code.</SUMMARY>
      <DESCRIPTION>4(G)FSK symbol mapping code.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskmap" lsb="0" size="8">
          <ENUMERATION value="180">
            <DESCRIPTION>Graycoding</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="228">
            <DESCRIPTION>Graycoding is bypass - normal binary mapping is used.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_PDTC" value="8256" default="0x2B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK Peak Detector Time Control.</SUMMARY>
      <DESCRIPTION>OOK peak detector decay and attack time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="decay" lsb="0" size="4">
          <DESCRIPTION>OOK peak detector decay time.</DESCRIPTION>
          <DESCRIPTION>Peak detector value discharges at rate  proportional to 2^(-decay).</DESCRIPTION>
        </FIELD>
        <FIELD name="attack" lsb="4" size="3">
          <DESCRIPTION>OOK peak detector attack time.</DESCRIPTION>
          <DESCRIPTION>Peak detector value charges up at rate  proportional to 2^(-attack).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_BLOPK" value="8257" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK control</SUMMARY>
      <DESCRIPTION>Defined how many dB below PK.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="bw_pk" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_CNT1" value="8258" default="0xA4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK control</SUMMARY>
      <DESCRIPTION>OOK control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="squelch" lsb="0" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>Squelch function is off.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>When no signal is received, there is  no toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>When PM is not detected, there is no  toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>When no signal or PM is not detected,  there is no toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="slicer_fast" lsb="2" size="1">
          <DESCRIPTION>This bit effects 2(G)FSK/OOK mode only.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Discriminator's slicer output is  de-glitched by bit clock.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Discriminator's slicer output is  de-glitched by sample clock to reduce  turn-around time.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="raw_syn" lsb="3" size="1">
          <DESCRIPTION>If set, raw data output is synchronized to bit clock.</DESCRIPTION>
        </FIELD>
        <FIELD name="ma_freqdwn" lsb="4" size="1">
          <DESCRIPTION>If set, estimated frequency from MA detector  will be trunked 4 bits to avoid overflow.</DESCRIPTION>
          <DESCRIPTION>AFC gain should be increased 16 times if this  bit is set.</DESCRIPTION>
          <DESCRIPTION>It is recommended to set this bit for  Rb smaller than 1kbps and/or hModInd greater than 50  if MA detector's frequency error estimator is  selected.</DESCRIPTION>
        </FIELD>
        <FIELD name="ookfrzen" lsb="5" size="1">
          <DESCRIPTION>This bit only has an effect after preamble is detected.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC and OOK moving average detector's  threshold output will be frozen after the preamble is detected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="s2p_map" lsb="6" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>S2p_mapping 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>S2p_mapping 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>S2p_mapping 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>S2p_mapping 3</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_MISC" value="8259" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Control OOK Peak Detector.</SUMMARY>
      <DESCRIPTION>Control OOK Peak Detector.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ookfastma" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Deploy longer MA filter window</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="detector" lsb="0" size="2">
          <DESCRIPTION>Controls the data detector.</DESCRIPTION>
          <ENUMERATION value="0" name="ma_pk">
            <DESCRIPTION>In OOK modem only, both MA detector  and peak detector will be selected and two  detector's outputs were AND'd together for the final result.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="pk">
            <DESCRIPTION>Peak detector will be selected for OOK  modem or Raw data mode. When OOK peak detector is enabled,  then the attack and decay rates of how the  peak level is charged up or discharged down  is programmable. The larger the value in these  fields, the slower the attack and decay  times.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="ma">
            <DESCRIPTION>MA detector will be selected for OOK  modem or Raw data mode.</DESCRIPTION>
            <DESCRIPTION>When the Moving Average Detector is  enabled, then the slicing threshold is  developed from the average of the previous  data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="mean">
            <DESCRIPTION>Max-Min detector will be selected for  Raw data mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_SEARCH" value="8260" default="0x56" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Defines search period control for raw / nonstandard mode.</SUMMARY>
      <DESCRIPTION>Searching period for high and low gear.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="schprd_low" lsb="0" size="2">
          <DESCRIPTION>Searching period of MA or Mean inside the  detector during low gear.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Tb * 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Tb * 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Tb * 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Tb * 16</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="schprd_hi" lsb="2" size="2">
          <DESCRIPTION>Searching period of MA or Mean inside the  detector during high gear.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Tb * 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Tb * 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Tb * 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Tb * 16</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sch_frzth" lsb="4" size="3">
          <DESCRIPTION>Mean search frozen threshold.</DESCRIPTION>
        </FIELD>
        <FIELD name="sch_frzen" lsb="7" size="1">
          <DESCRIPTION>Freeze MA or Mean searching engine once switch to low gear.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_CONTROL" value="8261" default="0x02" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Defines gain and enable controls for raw / nonstandard mode.</SUMMARY>
      <DESCRIPTION>Defines gain and enable controls for raw / nonstandard mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="unstdpk" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>MA or mean frequency error estimator.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="conschk_byp" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>If unstdpk is '1', and conschk_byp= '0', the  consecutive '1' or '0' of payload data during 'Sch_Period' will stop the mean  value being updated.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="pm_pattern" lsb="2" size="2">
          <DESCRIPTION>PM pattern configuration.  The preamble detection is done inside modem.</DESCRIPTION>
          <ENUMERATION value="0" name="1010">
            <DESCRIPTION>If preamble has '1010' pattern, modem  is recommended to work on standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="consecutive_one">
            <DESCRIPTION>If preamble has more than 32-bit  consecutive '1' pattern, modem is recommended  to work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="consecutive_zero">
            <DESCRIPTION>If preamble has more than 32-bit  consecutive '0' pattern, modem is recommended  work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="random">
            <DESCRIPTION>If preamble is random data, modem is  recommended to work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rawgain" lsb="0" size="2">
          <DESCRIPTION>Raw data MA filter gain.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Gain = 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Gain = 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Gain = 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Gain = 1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_EYE_1" value="8262" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</SUMMARY>
      <DESCRIPTION>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="raweye_10_8" lsb="0" size="3">
          <DESCRIPTION>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_EYE_0" value="8263" default="0xA3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of eye-open detector threshold.</SUMMARY>
      <DESCRIPTION>Eye-open detector threshold is a unsigned 11-bit.  The reset of bits are set by property RAW_EYE_1</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="raweye_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ANT_DIV_MODE" value="8264" default="0x12" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Antenna mode setting</SUMMARY>
      <DESCRIPTION>Antenna mode seting</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="anwait" lsb="0" size="3">
          <DESCRIPTION>The period between toggling selection of antennas. During the initial search for a  valid packet (i.e., the search for the first PREAMBLE_VALID signal), a timer is  maintained to determine when to periodically toggle between antennas.  This default  value of this timeout period is 16 bit periods, but is configurable by anwait. The periods between toggling of antennas = ( anwait + 2 ) * 4 bit.</DESCRIPTION>
        </FIELD>
        <FIELD name="skip2phth" lsb="3" size="1">
          <DESCRIPTION>The threshold of skipping second phase PM detection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>16dB threshold is set for skipping second phase PM detection.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>11dB threshold is set for skipping second phase PM detection.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="skip2ph" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The antenna diversity algorithm always measures  the RSSI value on the alternate antenna, regardless of signal strength on the  initial antenna.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>the current RSSI value on the first antenna which observes  a PREAMBLE_VALID signal is greater than the value (determined by  bit 'skip2phth')  above the previous RSSI value from the alternate  antenna, the signal is deemed sufficiently strong; there is no need  to switch to and evaluate the second antenna.  If the difference in  RSSI value is less than the value (determined by bit 'skip2phth'), the  algorithm proceeds with evaluation of the signal strength on the alternate  antenna, as normal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="byp1p5" lsb="5" size="1">
          <DESCRIPTION>Bias of the second phase antenna selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>0dB</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>1.5dB</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="swant_timer" lsb="6" size="2">
          <DESCRIPTION>Additional number of bit periods to wait for RSSI value to  stabilize during Antenna Diversity 2nd phase antenna evaluation. ].  Effective only during Antenna Diversity.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Swant_time_0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Swant_time_1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Swant_time_2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Swant_time_3</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ANT_DIV_CONTROL" value="8265" default="0x80" feature="pro2" dev="1" wip="0">
      <SUMMARY>Specifies antenna diversity controls.  Antenna diversity mode is valid for standard packet only.</SUMMARY>
      <DESCRIPTION>Specifies pm detection threshold and GPIO config in antenna diversity mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="antdiv" lsb="0" size="3">
          <DESCRIPTION>The GPIO must be configured for antenna diversity  for the algorithm to work properly.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=1, GPIO Ant2=0: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=0, GPIO Ant2=1: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=1, GPIO Ant2=0: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=0, GPIO Ant2=1: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm in beacon mode: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm in beacon mode: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="matap" lsb="3" size="1">
          <DESCRIPTION>Number of taps for moving average filter during Antenna Diversity RSSI evaluation. Allows for reduced noise variation on measured RSSI value but with slower update rate.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Filter tap length is 8*Tb prior to first PREAMBLE_VALID, and 4*Tb thereafter.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Filter tap length is 8*Tb.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ant2pm_thd" lsb="4" size="4">
          <DESCRIPTION>The second phase preamble detection threshold in ANT-DIV mode. Default is set to 8 bits threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_THRESH" value="8266" default="0xFF" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI threshold control</SUMMARY>
      <DESCRIPTION>Selects threshold for clear channel assessment.  If RSSI value is above this threshold, the CCA GPIO  will be high.  If the RSSI value crosses above this threshold and the RSSI interrupt will be generated.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_JUMP_THRESH" value="8267" default="0x0C" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI jumping detection threshold.</SUMMARY>
      <DESCRIPTION>RSSI jumping detection threshold, step in 1dB.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rssijmpthd" lsb="0" size="7">
          <DESCRIPTION>RSSI jumping detection threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_CONTROL" value="8268" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI control</SUMMARY>
      <DESCRIPTION>
        Selects where in the packet to latch the RSSI value in the RSSI Latch fast response register.  The latched value can also be read using <REFERENCE>GET_MODEM_STATUS</REFERENCE> command.
      </DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="LATCH" lsb="0" size="3">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Latch disabled, will always read 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="PREAMBLE">
            <DESCRIPTION>Latches at preamble detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="SYNC">
            <DESCRIPTION>Latches at sync detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="RX_STATE1">
            <DESCRIPTION>Latches RSSI 8Tb  after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="RX_STATE2">
            <DESCRIPTION>Latches RSSI 16Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="RX_STATE3">
            <DESCRIPTION>Latches RSSI 24Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="RX_STATE4">
            <DESCRIPTION>Latches RSSI 32Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="RX_STATE5">
            <DESCRIPTION>Latches RSSI 40Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="AVERAGE" lsb="4" size="1">
          <ENUMERATION value="0" name="AVERAGE1">
            <DESCRIPTION>RSSI updated every bit.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="AVERAGE4">
            <DESCRIPTION>RSSI averaged over 4 bits</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_CONTROL2" value="8269" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI control</SUMMARY>
      <DESCRIPTION>
        Enable RSSI jumping detection.  Used to detect an RSSI jump as configured by <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>  while receiving a packet.  Can be useful to detect interferring or secondary incoming packet.
      </DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="enjmprx" lsb="1" size="1">
          <DESCRIPTION>If set, RSSI jumping detection will force  RX machine to reset.</DESCRIPTION>
        </FIELD>
        <FIELD name="jmpdlylen" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>RSSI jumping detection is running  with 2Tb</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RSSI jumping detection is running  with 4Tb</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enrssijmp" lsb="3" size="1">
          <DESCRIPTION>Enable RSSI jumping detection.</DESCRIPTION>
          <DESCRIPTION>Once RSSI difference between 2Tb or 4Tb  is above the RSSI jumping threshold, and interrupt  will be generated.</DESCRIPTION>
        </FIELD>
        <FIELD name="rssijmp_up" lsb="4" size="1">
          <DESCRIPTION>If set, enable RSSI jumping-up detection.</DESCRIPTION>
        </FIELD>
        <FIELD name="rssijmp_dwn" lsb="5" size="1">
          <DESCRIPTION>If set, enable RSSI jumping-down detection.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_COMP" value="8270" default="0x32" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI reading offset.</SUMMARY>
      <DESCRIPTION>Offsets RSSI curve in 1dB steps.  32 is no offset, lower will adjust RSSI down, and higher will adjust RSSI up.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rssi_comp" lsb="0" size="7">
          <DESCRIPTION>RSSI reading offset.</DESCRIPTION>
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DC_CONTROL" value="8271" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Modem DC cancellation controls.</SUMMARY>
      <DESCRIPTION>Modem DC cancellation controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dc_gear" lsb="0" size="3">
          <DESCRIPTION>the forgetting factor in the integrator inside DC cancellation. Decimating rate is 2^ndec0. ndec0 should be set to 0 for non-OOK modem. Effective forgetting factor is 2^(-9+dc_gear)</DESCRIPTION>
        </FIELD>
        <FIELD name="dc_freez" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>freeze estimated DC value to the current filter output.   If both dc-rst and dc-frz are set, the digital DC cancellation filter is skipped.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dc_rst" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Reset DC value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dc_follow" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DC Following is turned on. In this mode,  when a valid sync word is detected, the current DC offset is saved,  this value is then used as the initial DC offset for next RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_50" value="8272" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>tbd</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="CLKGEN_BAND" value="8273" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Clock generator band</SUMMARY>
      <DESCRIPTION>Clock generator band</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="Band" lsb="0" size="3">
          <ENUMERATION value="0">
            <DESCRIPTION>Output is FVCO/4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Output is FVCO/6.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Output is FVCO/8.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Output is FVCO/12.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>Output is FVCO/16.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sy_sel" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal mode, 200uA less current than High Performance mode. Set by modem calculator. Requires different freq_inte and freq_frac settings than High Performance mode. FBDIV=fVCO/4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>High Performance.  FBDIV=fVCO/2.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_52" value="8274" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="PLL_SETTLE_TIME" value="8275" default="40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>PLL settle time</SUMMARY>
      <DESCRIPTION>PLL settle time in us</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="pll_settle" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE13_7_0" value="8448" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 13th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE12_7_0" value="8449" default="0xBA" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 12th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE11_7_0" value="8450" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 11th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE10_7_0" value="8451" default="0x51" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 10th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE9_7_0" value="8452" default="0xCF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 9th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE8_7_0" value="8453" default="0xA9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 8th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE7_7_0" value="8454" default="0xC9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 7th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE6_7_0" value="8455" default="0xFC" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 6th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE5_7_0" value="8456" default="0x1B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 5th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE4_7_0" value="8457" default="0x1E" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 4th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE3_7_0" value="8458" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 3rd filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE2_7_0" value="8459" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 2nd filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE1_7_0" value="8460" default="0xFC" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 1st filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE0_7_0" value="8461" default="0xFD" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 0th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM0" value="8462" default="0x15" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 13th ~ 10th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe13_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 13th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe12_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 12th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe11_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 11th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe10_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 10th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM1" value="8463" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 9th ~ 6th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe9_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 9th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe8_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 8th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe7_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 7th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe6_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 6th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM2" value="8464" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 5th ~ 2th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe5_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 5th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe4_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 4th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe3_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 3rd CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe2_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 2nd CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM3" value="8465" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 1st ~ 0th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe1_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 1st CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe0_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 0th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE13_7_0" value="8466" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 13th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE12_7_0" value="8467" default="0xC4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 12th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE11_7_0" value="8468" default="0x30" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 11th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE10_7_0" value="8469" default="0x7F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 10th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE9_7_0" value="8470" default="0xF5" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 9th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE8_7_0" value="8471" default="0xB5" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 8th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE7_7_0" value="8472" default="0xB8" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 7th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE6_7_0" value="8473" default="0xDE" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 6th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE5_7_0" value="8474" default="0x05" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 5th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE4_7_0" value="8475" default="0x17" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 4th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE3_7_0" value="8476" default="0x16" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 3rd filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE2_7_0" value="8477" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 2nd filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE1_7_0" value="8478" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 1st filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE0_7_0" value="8479" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 0th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM0" value="8480" default="0x15" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 13th ~ 10th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe13_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 13th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe12_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 12th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe11_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 11th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe10_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 10th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM1" value="8481" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 9th ~ 6th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe9_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 9th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe8_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 8th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe7_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 7th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe6_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 6th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM2" value="8482" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 5th ~ 2th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe5_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 5th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe4_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 4th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe3_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 3rd CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe2_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 2nd CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM3" value="8483" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 1st ~ 0th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe1_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 1st CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe0_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 0th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_1" value="12288" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 1 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_1" value="12289" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 1 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_1" value="12290" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Pacekt match enable and match 1 configuration.</SUMMARY>
      <DESCRIPTION>Enable packet match processing and pattern 1 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MATCH_EN" lsb="6" size="1">
          <DESCRIPTION>Note: This bit is quite different from other pattern match controlling.</DESCRIPTION>
          <ENUMERATION value="1" name="MATCH_ENABLE">
            <DESCRIPTION>Enable packet match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 1 offset.</SUMMARY>
          <DESCRIPTION>Pattern match 1 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_2" value="12291" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_2" value="12292" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_2" value="12293" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 2 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 2 offset.</SUMMARY>
          <DESCRIPTION>Match 2 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_3" value="12294" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_3" value="12295" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_3" value="12296" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 3 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 3 offset.</SUMMARY>
          <DESCRIPTION>Match 3 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_4" value="12297" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_4" value="12298" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_4" value="12299" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 4 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 4 offset.</SUMMARY>
          <DESCRIPTION>Match 4 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="TX_LENGTH" value="4096" default="0x08" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble length</SUMMARY>
      <DESCRIPTION>Byte or nibble length of preamble to send, depends on LENGTH_CONFIG field in PREAMBLE_CONFIG property.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_STD_1" value="4097" default="0x14" feature="pro2" dev="1" wip="0">
      <SUMMARY>Standard preamble configuration</SUMMARY>
      <DESCRIPTION>Note: This field only applies to standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_THRESH" lsb="0" size="7">
          <RANGE min="0" max="127" />
          <DESCRIPTION>Number of preamble bits that must be valid to detect a valid preamble.</DESCRIPTION>
          <DESCRIPTION>Zero is a valid value in this field means that the preamble checking will be skipped.</DESCRIPTION>
        </FIELD>
        <FIELD name="SKIP_SYNC_TIMEOUT" lsb="7" size="1">
          <ENUMERATION value="0x1" name="ENABLE">
            <DESCRIPTION>In standard packet mode, if set the system will ignore the syncword search timeout reset.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_NSTD" value="4098" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Non-standard preamble configuation</SUMMARY>
      <DESCRIPTION>Note: This field only applies to non-standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_ERRORS" lsb="5" size="3">
          <RANGE min="0" max="7" />
          <DESCRIPTION>Number of preamble bit errors that are allowed when detecting a valid preamble.</DESCRIPTION>
        </FIELD>
        <FIELD name="PATTERN_LENGTH" lsb="0" size="5">
          <RANGE min="0" max="31" />
          <DESCRIPTION>This value plus 1 is the number of valid bits of PREAMBLE_PATTERN.  If PREAM_TX_LENGTH is longer, this pattern will repeat.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_STD_2" value="4099" default="0x0F" feature="pro2" dev="1" wip="0">
      <SUMMARY>Standard preamble configuration</SUMMARY>
      <DESCRIPTION>Note: This field only applies to standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_PREAMBLE_TIMEOUT" lsb="0" size="4">
          <RANGE min="0" max="15" />
          <DESCRIPTION>Number of nibbles to search for before determining that a preamble does not exist. This is usually used for hopping.</DESCRIPTION>
        </FIELD>
        <FIELD name="RX_PREAMBLE_TIMEOUT_EXTEND" lsb="4" size="4">
          <DESCRIPTION>This is only used for a long preamble timeout, more than 15 nibbles.</DESCRIPTION>
          <DESCRIPTION>If this field is non-zero, then  PREAMBLE_TIMEOUT is RX_PREAMBLE_TIMEOUT_EXTEND by 15 nibbles, up to 225 nibbles.</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG" value="4100" default="0x21" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble configuration bits</SUMMARY>
      <DESCRIPTION>Misc preamble configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="STANDARD_PREAM" lsb="0" size="2">
          <ENUMERATION value="0x0" name="PRE_NS">
            <DESCRIPTION>Use non-standard preamble</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="PRE_1010">
            <DESCRIPTION>Use standard preamble of 1010.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2" name="PRE_0101">
            <DESCRIPTION>Use standard preamble of 0101.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MAN_ENABLE" lsb="2" size="1">
          <ENUMERATION value="0x0" name="NO_MAN">
            <DESCRIPTION>Preamble is not manchester encoded.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="EN_MAN">
            <DESCRIPTION>Preamble is manchester encoded.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MAN_CONST" lsb="3" size="1">
          <ENUMERATION value="0x0" name="NO_CON">
            <DESCRIPTION>When Manchester is enabled, if preamble pattern is 0101, the post-Manchester transmitted bits will be 10011001? If the preamble pattern is 1010, the post-Manchester transmitted bits will be 01100110...</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="CONST">
            <DESCRIPTION>When Manchester is enabled, if preamble pattern is 0101, the pre-Manchester pattern will be 1111, the post-Manchester transmitted bits will be 01010101... If the preamble pattern is 1010, the pre-Manchester pattern will be 0000, the post-Manchester transmitted bits will be 10101010....</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LENGTH_CONFIG" lsb="4" size="1">
          <ENUMERATION value="0x0" name="NIBBLE">
            <DESCRIPTION>Preamble tx_length register is in nibbles.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="BYTE">
            <DESCRIPTION>Preamble tx_length register is in bytes.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PREAM_FIRST_1_OR_0" lsb="5" size="1">
          <ENUMERATION value="0x0" name="FIRST_0">
            <DESCRIPTION>First bit is 0, calculated from the calculator.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="FIRST_1">
            <DESCRIPTION>First bit is 1, calculated from the calculator.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_31_24" value="4101" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_23_16" value="4102" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_15_8" value="4103" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_7_0" value="4104" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="CONFIG" value="4352" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sync configuration bits</SUMMARY>
      <DESCRIPTION>Misc sync word configuration bits. Least significant bit of sync word is transmitted/received first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="LENGTH" lsb="0" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is 8 bits, sync byte 3 is used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is 16 bits, sync bytes 2 and 3 are used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Sync word is 24 bits, sync bytes 1, 2, and 3 are used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>Sync word is 32 bits, sync bytes 0, 1, 2, and 3 are used.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANCH" lsb="2" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is not manchester encoded.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is manchester encoded.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK" lsb="3" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is not 4FSK modulated.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is 4FSK modulated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RX_ERRORS" lsb="4" size="3">
          <DESCRIPTION>Number of sync bit errors that are allowed in the sync field during receive sync detection.</DESCRIPTION>
        </FIELD>
        <FIELD name="SKIP_TX" lsb="7" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is transmitted as defined by LENGTH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is not transmitted.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_31_24" value="4353" default="0x2D" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 3 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_23_16" value="4354" default="0xD4" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 2 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_15_8" value="4355" default="0x2D" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_7_0" value="4356" default="0xD4" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="CRC_CONFIG" value="4608" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Select a CRC polynomial and seed</SUMMARY>
      <DESCRIPTION>Pick the desired CRC polynomial and CRC seed.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="CRC_POLYNOMIAL" lsb="0" size="4">
          <ENUMERATION value="0" name="NO_CRC">
            <DESCRIPTION>No CRC.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ITU_T_CRC8">
            <DESCRIPTION>ITU-T CRC8:   X8+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="IEC_16">
            <DESCRIPTION>IEC-16:       X16+X14+X12+X11+X9+X8+X7+X4+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="BAICHEVA_16">
            <DESCRIPTION>Baicheva-16:  X16+X15+X12+X7+X6+X4+X3+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CRC_16_IBM">
            <DESCRIPTION>CRC-16 (IBM): X16+X15+X2+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CCITT_16">
            <DESCRIPTION>CCIT-16:      X16+X12+X5+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="KOOPMAN">
            <DESCRIPTION>Koopman:      X32+X30+X29+X28+X26+X20+X19+X17+X16+X15+X11+X10+X7+X6+X4+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="IEEE_802_3">
            <DESCRIPTION>IEEE 802.3:   X32+X26+X23+X22+X16+X12+X11+X10+X8+X7+X5+X4+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="CASTAGNOLI">
            <DESCRIPTION>Castagnoli:   X32+X28+X27+X26+X25+X23+X22+X20+X19+X18+X14+X13+X11+X10+X9+X8+X6+1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ALT_CRC_POLYNOMIAL" lsb="4" size="3" internal="1">
          <ENUMERATION value="0" name="NO_CRC">
            <DESCRIPTION>No CRC.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ITU_T_CRC8">
            <DESCRIPTION>ITU-T CRC8:   X8+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="IEC_16">
            <DESCRIPTION>IEC-16:       X16+X14+X12+X11+X9+X8+X7+X4+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="BAICHEVA_16">
            <DESCRIPTION>Baicheva-16:  X16+X15+X12+X7+X6+X4+X3+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CRC_16_IBM">
            <DESCRIPTION>CRC-16 (IBM): X16+X15+X2+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CCITT_16">
            <DESCRIPTION>CCIT-16:      X16+X12+X5+1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_SEED" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Use all 0's for the CRC Seed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Use all 1's for the CRC Seed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_POLY_15_8" value="4609" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of data whitening polynomial value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_SEED.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_POLY_7_0" value="4610" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of data whitening polynomial</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_SEED.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_SEED_15_8" value="4611" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of data whitening seed value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_SEED_7_0" value="4612" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of data whitening seed value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_BIT_NUM" value="4613" default="0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Which whitening polynomial bit to use for data scrambling</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_SEED and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="15" />
      <BYTE>
        <FIELD name="WHT_BIT_NUM" lsb="0" size="4">
          <ENUMERATION value="0x0">
            <DESCRIPTION>0  to use for data scrambling</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>1  to use for data scrambling</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SW_CRC_CTRL" lsb="6" size="1" internal="1">
          <DESCRIPTION>Enables the software crc calculation over the packet.  Should only be used if the software whitening is used.</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Disable - Don't enable sofware CRC engine.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Enable software CRC engine.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SW_WHT_CTRL" lsb="7" size="1" internal="1">
          <ENUMERATION value="0x0" name="DISABLE">
            <DESCRIPTION>Disable the software whitening algorithm.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="ENABLE">
            <DESCRIPTION>Enable the software whitening algorithm.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="CONFIG1" value="4614" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>General packet configuration bits</SUMMARY>
      <DESCRIPTION>General packet configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="BIT_ORDER" lsb="0" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Msb first for all fields. Bit 7 transmitted first timewise. Note: Preamble and sync word are always transmitted lsb first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Lsb first for all fields. Bit 0 transmitted first timewise.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENDIAN" lsb="1" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>CRC low bytes are received/transmitted first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>CRC high bytes are received/transmitted first.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_INVERT" lsb="2" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Leave each CRC bit intact.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Invert each CRC bit before transmit.  Invert received CRC before comparison.  Data in fifo remains untouched.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANCH_POL" lsb="3" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>0 is encoded/decoded to/from 10 Manchester pattern.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>0 is encoded/decoded to/from 01 Manchester pattern.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RX_MULTI_PKT" lsb="4" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Turn off receive chain after packet received.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Leave receive chain enabled after packet received.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK_EN" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The modem is not in 4FSK mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>The modem is in 4FSK mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PH_RX_DISABLE" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Packet handler is enabled in RX.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Packet handler is disabled in RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PH_FIELD_SPLIT" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Field level properties (property 0x120D to 0x1220) are shared between TX and RX.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Field level properties are split between TX and RX. TX: from 0x120D ~ 0x1220, RX: from 0x1221 ~ 0x1234</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="CHIP_MAP" value="4615" default="0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Controls mapping chips to bits</SUMMARY>
      <DESCRIPTION>When the Demod is in 4FSK mode, and the PH is in 2FSK no Manchester mode, this controls which 2 chips sequence will be mapped to the each level.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="PLUS_3_LEVEL_MAP" lsb="0" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a PLUS_3_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 1. For transmit, if a 1 is the next bit to be transmitted, the two chips that will be transmitted are the contents of PLUS_3_LEVEL_MAP (which equal 00 in this case).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Upon receiving a PLUS_3_LEVEL_MAP sequence (which equals 01 in this case. First 0, then 1), the resulting bit in the RX_DATA buffer will be a 1. For transmit if a 1 is the next bit to be transmitted, the two chips that will be transmitted are the contents of PLUS_3_LEVEL_MAP (which equal 01 in this case. first 0, then 1).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PLUS_1_LEVEL_MAP" lsb="2" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a PLUS_1_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 1. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Upon receiving a PLUS_1_LEVEL_MAP sequence (which equal 10 in this case. First 1, then 0), the resulting bit in the RX_DATA buffer will be a 1. For transmit: This field is ignored.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MINUS_1_LEVEL_MAP" lsb="4" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a MINUS_1_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 0. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>Upon receiving a MINUS_1_LEVEL_MAP sequence (which equals 11 in this case), the resulting bit in the RX_DATA buffer will be a 0. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MINUS_3_LEVEL_MAP" lsb="6" size="2">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Upon receiving a MINUS_3_LEVEL_MAP sequence (which equals 01 in this case. First 0, then 1), the resulting bit in the RX_DATA buffer will be a 0. For transmit, if a 0 is the next bit to be transmitted, the two chips that will be transmitted are the contents of MINUS_3_LEVEL_MAP (which equals 01 in this case. First 0, then 1).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Upon receiving a MINUS_3_LEVEL_MAP sequence (which equals 10 in this case. First 1, then 0), the resulting bit in the RX_DATA buffer will be a 0. For transmit, if a 0 is the next bit to be transmitted, the two chips that will be transmitted are the contents of MINUS_3_LEVEL_MAP (which equals 10 in this case. First 1, then 0).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN" value="4616" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Provides information regarding how to use the length from the received packet.</SUMMARY>
      <DESCRIPTION>This property is used for variable length packet reception.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="DST_FIELD" lsb="0" size="3">
          <DESCRIPTION>Selects field number that will vary in length.</DESCRIPTION>
          <DESCRIPTION>A value of 0 in this field specifies fixed packet length mode. Field 2 to 5 can be designated as variable length field.</DESCRIPTION>
        </FIELD>
        <FIELD name="IN_FIFO" lsb="3" size="1">
          <ENUMERATION value="0x0" name="CUT_OUT">
            <DESCRIPTION>The data bytes containing the length field are not put in the fifo.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="LEAVE_IN">
            <DESCRIPTION>The data bytes containing the length field are put in the fifo.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SIZE" lsb="4" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>The length field is one byte in length.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>The length field is two bytes in length.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ENDIAN" lsb="5" size="1">
          <ENUMERATION value="0x0" name="LITTLE">
            <DESCRIPTION>The length field is least significant byte first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="BIG">
            <DESCRIPTION>The length field is most significant byte first.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN_FIELD_SOURCE" value="4617" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field number containing the embedded length field.</SUMMARY>
      <DESCRIPTION>This property is used in variable packet mode defining where the length field is in the packet.</DESCRIPTION>
      <DESCRIPTION>The length field must be the last byte in a fixed length field and precede the variable length field</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="SRC_FIELD" lsb="0" size="3">
          <DESCRIPTION>Selects field number that contains the length field.</DESCRIPTION>
          <DESCRIPTION>A value of 0 in this field is treated as 1.</DESCRIPTION>
          <RANGE min="0" max="4" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN_ADJUST" value="4618" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Adjust length field by this amount to derive the byte count of the variable length field.</SUMMARY>
      <DESCRIPTION>This property is added to the value extracted from the length field in the packet.</DESCRIPTION>
      <DESCRIPTION>The result is then used to set the length of the selected destination field that varies in length.</DESCRIPTION>
      <DESCRIPTION>This constant is typically defined in a protocol specification or can be derived from the specification.</DESCRIPTION>
      <DESCRIPTION>For example, if a protocol defines the first byte as the length field, the length field specifies the number of subsequent payload excluding the CRC bytes, LEN_ADJUST should be set to 0; If the length field specifies the number of subsequent payload including the CRC bytes, LEN_ADJUST should be set to the negative number of the CRC byte count in 2's complement.</DESCRIPTION>
      <DESCRIPTION>LEN_ADJUST is a signed char.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="PKT" name="TX_THRESHOLD" value="4619" default="0x30" feature="pro2" dev="1" wip="0">
      <SUMMARY>TX almost empty threshold.</SUMMARY>
      <DESCRIPTION>Transmit almost empty interrupt fires when the amount of space in the transmit fifo equal to or greater than TX_THRESHOLD.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="64" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_THRESHOLD" value="4620" default="0x30" feature="pro2" dev="1" wip="0">
      <SUMMARY>RX almost full threshold.</SUMMARY>
      <DESCRIPTION>Receive almost full interrupt fires when there are RX_THRESHOLD number of bytes present in the receive fifo.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="64" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_LENGTH_12_8" value="4621" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_1_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_LENGTH_7_0" value="4622" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_CONFIG" value="4623" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 1 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="PN_START" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load PN-9 engine with seed value at the start of this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_CRC_CONFIG" value="4624" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 1 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="ALT_CRC_START" lsb="6" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load 16-bit CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_START" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_LENGTH_12_8" value="4625" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_2_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_LENGTH_7_0" value="4626" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_CONFIG" value="4627" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 2 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_CRC_CONFIG" value="4628" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 2 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_LENGTH_12_8" value="4629" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_3_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_LENGTH_7_0" value="4630" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_CONFIG" value="4631" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 3 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_CRC_CONFIG" value="4632" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 3 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_LENGTH_12_8" value="4633" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_4_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_LENGTH_7_0" value="4634" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_CONFIG" value="4635" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 4 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_CRC_CONFIG" value="4636" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 4 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_LENGTH_12_8" value="4637" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_5_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_LENGTH_7_0" value="4638" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_CONFIG" value="4639" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 5 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_CRC_CONFIG" value="4640" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 5 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_LENGTH_12_8" value="4641" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_1_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_LENGTH_7_0" value="4642" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_CONFIG" value="4643" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 1 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="PN_START" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load PN-9 engine with seed value at the start of this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_CRC_CONFIG" value="4644" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 1 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="ALT_CRC_START" lsb="6" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load 16-bit CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_START" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_LENGTH_12_8" value="4645" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_2_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_LENGTH_7_0" value="4646" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_CONFIG" value="4647" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 2 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_CRC_CONFIG" value="4648" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 2 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_LENGTH_12_8" value="4649" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_3_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_LENGTH_7_0" value="4650" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_CONFIG" value="4651" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 3 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_CRC_CONFIG" value="4652" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 3 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_LENGTH_12_8" value="4653" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_4_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_LENGTH_7_0" value="4654" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_CONFIG" value="4655" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 4 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_CRC_CONFIG" value="4656" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 4 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_LENGTH_12_8" value="4657" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_5_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_LENGTH_7_0" value="4658" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_CONFIG" value="4659" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 5 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_CRC_CONFIG" value="4660" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 5 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="INTE" value="16384" default="0x3C" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Frac-N PLL integer number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL integer number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="inte" lsb="0" size="7">
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_2" value="16385" default="0x08" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 2 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_2" lsb="0" size="3">
          <RANGE min="0" max="7" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_1" value="16386" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 1 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_1" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_0" value="16387" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 0 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="CHANNEL_STEP_SIZE_1" value="16388" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 1 of channel step size.</SUMMARY>
      <DESCRIPTION>Channel frequency step size used when using EZ frequency programming. EZ frequency programming is defined by base frequency (inte + frac ) + channel number * step size.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="channel_step_size_1" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="CHANNEL_STEP_SIZE_0" value="16389" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 0 of channel step size.</SUMMARY>
      <DESCRIPTION>Channel frequency step size used when using EZ frequency programming. EZ frequency programming is defined by base frequency (inte + frac ) + channel number * step size.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="channel_step_size_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="W_SIZE" value="16390" default="0x20" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>30MHz clock cycles</SUMMARY>
      <DESCRIPTION>30MHz clock cycles</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="w_size" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="VCOCNT_RX_ADJ" value="16391" default="0xFF" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>VCO target count adjustment for RX</SUMMARY>
      <DESCRIPTION>VCO target count adjustment for RX, signed</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="vcocnt_rx_adj" lsb="0" size="8">
          <RANGE min="-128" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="CONTROL" value="20480" default="0x04" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>RX hop control.</SUMMARY>
      <DESCRIPTION>Sets RSSI timeout value and select RX hop condition.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="RSSI_TIMEOUT" lsb="0" size="4">
          <DESCRIPTION>Sets the RSSI time out expressed in nibbles.</DESCRIPTION>
        </FIELD>
        <FIELD name="HOP_EN" lsb="4" size="3">
          <DESCRIPTION>RX hop condition.</DESCRIPTION>
          <ENUMERATION value="0" name="HOP_DISABLE">
            <DESCRIPTION>Hop disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HOP_PM_TO">
            <DESCRIPTION>Hop if preamble timeout occurs.</DESCRIPTION>
            <DESCRIPTION>If no preamble detected after RX preamble timeout, then hop.  Otherwise a preamble is detected, stay on channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="HOP_RSSI_PM_TO">
            <DESCRIPTION>Hop if either RSSI timeout occurs or preamble timeout occurs.</DESCRIPTION>
            <DESCRIPTION>Either timeout condition forces hop, whichever occurs first.  Otherwise stay on channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="HOP_PM_SYNC_TO">
            <DESCRIPTION>Hop if preamble timeout or invalid sync word.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="HOP_RSSI_PM_SYNC_TO">
            <DESCRIPTION>Hop on RSSI timeout, preamble timeout or invalid sync word.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_SIZE" value="20481" default="0x01" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Number of entries in the RX hop table.</SUMMARY>
      <DESCRIPTION>Number of entries in the RX hop table.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_HOP_TABLE_SIZE" lsb="0" size="7">
          <RANGE min="1" max="64" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_0" value="20482" default="0" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.1 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.1 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_1" value="20483" default="1" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.2 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.2 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_2" value="20484" default="2" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.3 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.3 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_3" value="20485" default="3" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.4 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.4 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_4" value="20486" default="4" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.5 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.5 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_5" value="20487" default="5" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.6 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.6 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_6" value="20488" default="6" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.7 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.7 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_7" value="20489" default="7" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.8 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.8 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_8" value="20490" default="8" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.9 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.9 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_9" value="20491" default="9" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.10 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.10 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_10" value="20492" default="10" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.11 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.11 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_11" value="20493" default="11" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.12 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.12 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_12" value="20494" default="12" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.13 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.13 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_13" value="20495" default="13" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.14 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.14 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_14" value="20496" default="14" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.15 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.15 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_15" value="20497" default="15" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.16 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.16 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_16" value="20498" default="16" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.17 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.17 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_17" value="20499" default="17" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.18 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.18 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_18" value="20500" default="18" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.19 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.19 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_19" value="20501" default="19" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.20 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.20 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_20" value="20502" default="20" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.21 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.21 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_21" value="20503" default="21" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.22 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.22 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_22" value="20504" default="22" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.23 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.23 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_23" value="20505" default="23" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.24 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.24 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_24" value="20506" default="24" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.25 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.25 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_25" value="20507" default="25" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.26 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.26 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_26" value="20508" default="26" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.27 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.27 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_27" value="20509" default="27" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.28 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.28 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_28" value="20510" default="28" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.29 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.29 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_29" value="20511" default="29" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.30 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.30 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_30" value="20512" default="30" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.31 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.31 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_31" value="20513" default="31" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.32 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.32 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_32" value="20514" default="32" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.33 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.33 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_33" value="20515" default="33" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.34 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.34 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_34" value="20516" default="34" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.35 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.35 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_35" value="20517" default="35" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.36 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.36 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_36" value="20518" default="36" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.37 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.37 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_37" value="20519" default="37" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.38 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.38 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_38" value="20520" default="38" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.39 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.39 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_39" value="20521" default="39" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.40 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.40 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_40" value="20522" default="40" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.41 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.41 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_41" value="20523" default="41" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.42 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.42 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_42" value="20524" default="42" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.43 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.43 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_43" value="20525" default="43" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.44 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.44 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_44" value="20526" default="44" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.45 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.45 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_45" value="20527" default="45" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.46 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.46 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_46" value="20528" default="46" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.47 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.47 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_47" value="20529" default="47" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.48 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.48 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_48" value="20530" default="48" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.49 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.49 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_49" value="20531" default="49" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.50 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.50 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_50" value="20532" default="50" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.51 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.51 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_51" value="20533" default="51" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.52 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.52 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_52" value="20534" default="52" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.53 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.53 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_53" value="20535" default="53" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.54 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.54 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_54" value="20536" default="54" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.55 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.55 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_55" value="20537" default="55" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.56 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.56 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_56" value="20538" default="56" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.57 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.57 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_57" value="20539" default="57" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.58 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.58 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_58" value="20540" default="58" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.59 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.59 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_59" value="20541" default="59" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.60 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.60 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_60" value="20542" default="60" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.61 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.61 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_61" value="20543" default="61" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.62 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.62 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_62" value="20544" default="62" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.63 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.63 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_63" value="20545" default="63" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.64 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.64 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPI_ACTIVE_SEQ_DELAY_15_8" value="61952" default="0x02" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Upper byte of sequencer delay from spi active to ready.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPI_ACTIVE_SEQ_DELAY_7_0" value="61953" default="0x8A" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Lower byte of sequencer delay from spi active to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="READY_SEQ_DELAY" value="61954" default="0x82" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Sequencer delay from ready to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="TX_TUNE_SEQ_DELAY" value="61955" default="0x1E" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Sequencer delay from tx tune to tx.</SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RX_SEQ_DELAY_15_8" value="61956" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Upper byte of Sequencer delay from rx to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RX_SEQ_DELAY_7_0" value="61957" default="0x91" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Lower byte of Sequencer delay from rx to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="CAL_ENABLE_VTR" value="61958" default="0x61" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VTR calibration enables.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CAL_EN_VTR_XO" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr xo cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_RX" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr rx cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_TX" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr tx cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_ADC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr adc cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_SY" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr sy cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_V3P3" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco v3p3 cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_V1P5" lsb="6" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco v1p5 cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_LADR" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco ladr cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="CAL_ENABLE" value="61959" default="0x15" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Calibration enables.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CAL_EN_BOOT_OSC" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform boot osc cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RC_CAL_32K" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform rc32k cal on every warm boot.  Always performed at cold boot and on CAL timer expiration.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_PGA_OFS" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform pga ofs cal on every entry into RX.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RC_CAL_FOR_ADC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform rc32k cal for adc on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RFPKD_FULL" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform full RF peak detector cal on every warm boot.  Full Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RFPKD_FAST" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform fast RF peak detector cal on every entry into RX.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_SPARE6" lsb="6" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform xxx cal on every warm boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_SPARE7" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform xxx cal on every warm boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_V3P3_TARGET_VOLTAGE" value="61960" default="0xFB" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO v3.3 target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_V1P5_TARGET_VOLTAGE" value="61961" default="0x08" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO v1.5 target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_LADR_TARGET_VOLTAGE" value="61962" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO Ladder target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL_ADC_TARGET_15_8" value="61963" default="0x7D" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32K ADC cal target</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <DESCRIPTION>Upper byte of RC Cal ADC Target in Hz.</DESCRIPTION>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL_ADC_TARGET_7_0" value="61964" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32K ADC cal target</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <DESCRIPTION>Lower byte of RC Cal ADC Target in Hz.</DESCRIPTION>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL" value="61965" default="0x4" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="FINE_CAL_CYCLES" lsb="0" size="8">
        <DESCRIPTION>Number of RC32k cycles to measure RC frequency over. (nc)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL1" value="61966" default="0x44" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="COARSE_CAL_CYCLES" lsb="0" size="4">
        <DESCRIPTION>Number of RC32k cycles to measure RC frequency over. (nc)</DESCRIPTION>
      </FIELD>
      <FIELD name="COARSE_ADC_CAL_CYCLES" lsb="4" size="4">
        <DESCRIPTION>Number of RC32k cycles to measure RC32k frequency over for ADC cal. (nc)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL2" value="61967" default="0x42" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="HIGH_CURR_CHOP" lsb="6" size="2">
        <ENUMERATION value="0" name="CHOP_DIS_HI_DIS">
          <DESCRIPTION>Operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="1" name="CHOP_EN_HI_DIS">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="2" name="CHOP_DIS_HI_EN">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="3" name="CHOP_EN_HI_EN">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SETTLE_CYCLES" lsb="0" size="6">
        <DESCRIPTION>Number of RC32k cycles to wait for clock to settle after changing frequency and before checking frequency. (ns)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="BOOT_OSC_CAL" value="61968" default="0x09" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Boot osc calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="XO_CAPCODE_RESTORE_DELAY" lsb="3" size="5">
        <DESCRIPTION>Delay before restoring XO_CAPCODE.</DESCRIPTION>
      </FIELD>
      <FIELD name="BOOT_OSC_ADJ" lsb="0" size="3">
        <DESCRIPTION>Adjustment value for Boot osc.  This value is subtracted from BOSC aconfig register after boot osc cal.  There is an additional adjustment factor applied based on crystal frequency.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="BOOT_OSC_CAL1" value="61969" default="0x02" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Boot osc calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CRYSTAL_OK_DELAY" lsb="0" size="8">
        <DESCRIPTION>Delay after restoring capcode, before polling crystal ok.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_TEMP_SLOPE" value="61970" default="0x63" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_TEMP_INTERCEPT" value="61971" default="0x4A" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SY_GAIN_ERROR" value="61972" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>AuxADC gain adjustment, 8-bit signed.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SY_OFFSET_ERROR" value="61973" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>AuxADC offset adjustment, 8-bit signed.</SUMMARY>
      <TARGETRELEASE>ROM2-Partial</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="ADC_VOLTAGE_TRIM" value="61974" default="0x0F" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_RXFE_LPF" value="61975" default="0x35" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_ADC_LPF" value="61976" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_LOAD5_LPF" value="61977" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_LPF" value="61978" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_COM_LPF" value="61979" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_TX_LPF" value="61980" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_TX_LPF" value="61981" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RESERVED_F2_1E" value="61982" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_RXFE_HPF" value="61983" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_ADC_HPF" value="61984" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_LOAD5_HPF" value="61985" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_HPF" value="61986" default="0x30" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>
        This is the value that will be used for the CLKGEN ACONFIG register for RX if <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:Band > 4.
      </SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_COM_HPF" value="61987" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_TX_HPF" value="61988" default="0x20" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>
        This is the value that will be used for the CLKGEN ACONFIG register for TX if <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:Band > 4.
      </SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_TX_HPF" value="61989" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="PH_WATERMARK" value="61990" default="0x62" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <FIELD name="RX_WATERMARK" lsb="4" size="4">
        <DESCRIPTION></DESCRIPTION>
        <RANGE min="1" max="8" />
      </FIELD>
      <FIELD name="TX_WATERMARK" lsb="0" size="4">
        <DESCRIPTION></DESCRIPTION>
        <RANGE min="1" max="8" />
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="PROC_MON_RCAL" value="61991" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REF_CAL_BANDGAP" value="61992" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>REF_CAL bandgap calibration</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SAMPLER_CFG" value="61993" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPARE1" value="61994" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>For use in patches</SUMMARY>
      <TARGETRELEASE></TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="MODULATION" value="9216" default="0x02" feature="common" dev="1" wip="0">
      <SUMMARY>Configure modulation using the EZ config feature.</SUMMARY>
      <DESCRIPTION>This property selects a modulation type, modulation source and tx direct mode control if supported.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="MOD_TYPE" lsb="0" size="2">
          <ENUMERATION value="0" name="CW" feature="tx">
            <DESCRIPTION>CW</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="OOK">
            <DESCRIPTION>OOK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="FSK">
            <DESCRIPTION>FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GFSK">
            <DESCRIPTION>GFSK</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MOD_SOURCE" lsb="3" size="2">
          <ENUMERATION value="0" name="PACKET">
            <DESCRIPTION>Modulation source is packet handler fifo</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIRECT">
            <DESCRIPTION>Modulation source is direct mode pin.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="PSEUDO">
            <DESCRIPTION>Modulation source is pseudo-random generator</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_GPIO" lsb="5" size="2" feature="tx">
          <DESCRIPTION>
            Selects which GPIO will be used as the TX data source if MOD_SOURCE = DIRECT.  The gpio selected here must be configured (using <REFERENCE>GPIO_PIN_CFG</REFERENCE>) as a CMOS input.
          </DESCRIPTION>
          <ENUMERATION value="0" name="GPIO0">
            <DESCRIPTION>TX direct mode uses gpio0 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="GPIO1">
            <DESCRIPTION>TX direct mode uses gpio1 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="GPIO2">
            <DESCRIPTION>TX direct mode uses gpio2 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GPIO3">
            <DESCRIPTION>TX direct mode uses gpio3 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_TYPE" lsb="7" size="1" feature="tx">
          <ENUMERATION value="0" name="SYNC">
            <DESCRIPTION>Direct mode operates in synchronous mode, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ASYNC">
            <DESCRIPTION>Direct mode operates in asynchronous mode, applies to TX only.  GFSK is not supported.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="CONFIG_SELECT" value="9217" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Select the index from EZ config table.</SUMMARY>
      <DESCRIPTION>This property selects the configuration index from a predefined EZConfig table.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CONFIG_INDEX" lsb="0" size="8">
          <ENUMERATION value="0" name="NONE">
            <DESCRIPTION>Select none</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="CONFIG_INDEX_1">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_9.6kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CONFIG_INDEX_2">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_10.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="CONFIG_INDEX_3">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_15.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CONFIG_INDEX_4">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_19.2kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CONFIG_INDEX_5">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_20.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="CONFIG_INDEX_6">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_38.4kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="CONFIG_INDEX_7">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_40.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="CONFIG_INDEX_8">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_50.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CONFIG_INDEX_9">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="CONFIG_INDEX_10">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="CONFIG_INDEX_11">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_128.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="CONFIG_INDEX_12">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_2.4kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="CONFIG_INDEX_13">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_4.8kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="CONFIG_INDEX_14">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_5.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="CONFIG_INDEX_15">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_9.6kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="CONFIG_INDEX_16">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_10.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="CONFIG_INDEX_17">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_15.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="18" name="CONFIG_INDEX_18">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_19.2kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="19" name="CONFIG_INDEX_19">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_20.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="20" name="CONFIG_INDEX_20">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_38.4kbps_chBW76.8kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="21" name="CONFIG_INDEX_21">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_40.0kbps_chBW85.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="22" name="CONFIG_INDEX_22">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_50.0kbps_chBW110.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="23" name="CONFIG_INDEX_23">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="24" name="CONFIG_INDEX_24">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="25" name="CONFIG_INDEX_25">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="26" name="CONFIG_INDEX_26">
            <DESCRIPTION>283-350MHz_OOK_2.4kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="27" name="CONFIG_INDEX_27">
            <DESCRIPTION>283-350MHz_OOK_4.8kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="28" name="CONFIG_INDEX_28">
            <DESCRIPTION>283-350MHz_OOK_5.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="29" name="CONFIG_INDEX_29">
            <DESCRIPTION>283-350MHz_OOK_9.6kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="30" name="CONFIG_INDEX_30">
            <DESCRIPTION>283-350MHz_OOK_10.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31" name="CONFIG_INDEX_31">
            <DESCRIPTION>283-350MHz_OOK_15.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="32" name="CONFIG_INDEX_32">
            <DESCRIPTION>283-350MHz_OOK_19.2kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="33" name="CONFIG_INDEX_33">
            <DESCRIPTION>283-350MHz_OOK_20.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="34" name="CONFIG_INDEX_34">
            <DESCRIPTION>283-350MHz_OOK_38.4kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="35" name="CONFIG_INDEX_35">
            <DESCRIPTION>283-350MHz_OOK_40.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="36" name="CONFIG_INDEX_36">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_9.6kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="37" name="CONFIG_INDEX_37">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_10.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="38" name="CONFIG_INDEX_38">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_15.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="39" name="CONFIG_INDEX_39">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_19.2kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="40" name="CONFIG_INDEX_40">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_20.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="41" name="CONFIG_INDEX_41">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_38.4kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="42" name="CONFIG_INDEX_42">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_40.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="43" name="CONFIG_INDEX_43">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_50.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="44" name="CONFIG_INDEX_44">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_96.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="45" name="CONFIG_INDEX_45">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_100.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="46" name="CONFIG_INDEX_46">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_128.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="47" name="CONFIG_INDEX_47">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_2.4kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="48" name="CONFIG_INDEX_48">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_4.8kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="49" name="CONFIG_INDEX_49">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_5.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="50" name="CONFIG_INDEX_50">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_9.6kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="51" name="CONFIG_INDEX_51">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_10.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="52" name="CONFIG_INDEX_52">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_15.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="53" name="CONFIG_INDEX_53">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_19.2kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="54" name="CONFIG_INDEX_54">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_20.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="55" name="CONFIG_INDEX_55">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_38.4kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="56" name="CONFIG_INDEX_56">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_40.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="57" name="CONFIG_INDEX_57">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_50.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="58" name="CONFIG_INDEX_58">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="59" name="CONFIG_INDEX_59">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="60" name="CONFIG_INDEX_60">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="61" name="CONFIG_INDEX_61">
            <DESCRIPTION>425-525MHz_OOK_2.4kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="62" name="CONFIG_INDEX_62">
            <DESCRIPTION>425-525MHz_OOK_4.8kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="63" name="CONFIG_INDEX_63">
            <DESCRIPTION>425-525MHz_OOK_5.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="64" name="CONFIG_INDEX_64">
            <DESCRIPTION>425-525MHz_OOK_9.6kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="65" name="CONFIG_INDEX_65">
            <DESCRIPTION>425-525MHz_OOK_10.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="66" name="CONFIG_INDEX_66">
            <DESCRIPTION>425-525MHz_OOK_15.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="67" name="CONFIG_INDEX_67">
            <DESCRIPTION>425-525MHz_OOK_19.2kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="68" name="CONFIG_INDEX_68">
            <DESCRIPTION>425-525MHz_OOK_20.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="69" name="CONFIG_INDEX_69">
            <DESCRIPTION>425-525MHz_OOK_38.4kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="70" name="CONFIG_INDEX_70">
            <DESCRIPTION>425-525MHz_OOK_40.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="71" name="CONFIG_INDEX_71">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_9.6kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="72" name="CONFIG_INDEX_72">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_10.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="73" name="CONFIG_INDEX_73">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_15.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="74" name="CONFIG_INDEX_74">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_19.2kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="75" name="CONFIG_INDEX_75">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_20.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="76" name="CONFIG_INDEX_76">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_38.4kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="77" name="CONFIG_INDEX_77">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_40.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="78" name="CONFIG_INDEX_78">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_50.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="79" name="CONFIG_INDEX_79">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_96.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="80" name="CONFIG_INDEX_80">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_100.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="81" name="CONFIG_INDEX_81">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_128.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="82" name="CONFIG_INDEX_82">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_2.4kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="83" name="CONFIG_INDEX_83">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_4.8kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="84" name="CONFIG_INDEX_84">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_5.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="85" name="CONFIG_INDEX_85">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_9.6kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="86" name="CONFIG_INDEX_86">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_10.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="87" name="CONFIG_INDEX_87">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_15.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="88" name="CONFIG_INDEX_88">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_19.2kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="89" name="CONFIG_INDEX_89">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_20.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="90" name="CONFIG_INDEX_90">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_38.4kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="91" name="CONFIG_INDEX_91">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_40.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="92" name="CONFIG_INDEX_92">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_50.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="93" name="CONFIG_INDEX_93">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="94" name="CONFIG_INDEX_94">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="95" name="CONFIG_INDEX_95">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="96" name="CONFIG_INDEX_96">
            <DESCRIPTION>850-960MHz_OOK_2.4kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="97" name="CONFIG_INDEX_97">
            <DESCRIPTION>850-960MHz_OOK_4.8kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="98" name="CONFIG_INDEX_98">
            <DESCRIPTION>850-960MHz_OOK_5.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="99" name="CONFIG_INDEX_99">
            <DESCRIPTION>850-960MHz_OOK_9.6kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="100" name="CONFIG_INDEX_100">
            <DESCRIPTION>850-960MHz_OOK_10.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="101" name="CONFIG_INDEX_101">
            <DESCRIPTION>850-960MHz_OOK_15.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="102" name="CONFIG_INDEX_102">
            <DESCRIPTION>850-960MHz_OOK_19.2kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="103" name="CONFIG_INDEX_103">
            <DESCRIPTION>850-960MHz_OOK_20.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="104" name="CONFIG_INDEX_104">
            <DESCRIPTION>850-960MHz_OOK_38.4kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="105" name="CONFIG_INDEX_105">
            <DESCRIPTION>850-960MHz_OOK_40.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="PKT" value="9218" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>EZ config packet configure.</SUMMARY>
      <DESCRIPTION>This property selects packet configuration options.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="CRC_ENABLE" lsb="0" size="1">
          <DESCRIPTION>Selectes whether to use CRC for transmit or recieve</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>DISABLE - CRC will not be automatically transmitted, and will not be checked on receive.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>ENABLE - CRC will be appended to the end of the transmitted packet and will be checked on receive.  If a CRC error occurs the CRC .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
  </CHIP>
  <CHIP type="Si4460" revision="B0" name="Pro2">
    <COMMAND name="NOP" value="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>No operation command</SUMMARY>
      <DESCRIPTION>Can be used to ensure communication with the device.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED></APIUPDATED>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PART_INFO" value="0x01" feature="common" dev="1" wip="0">
      <SUMMARY>Reports basic information about the device.</SUMMARY>
      <DESCRIPTION>Returns Part Number, Part Version, ROM ID, etc</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CHIPREV" address="1" type="u8">
          <DESCRIPTION>Chip Mask Revision</DESCRIPTION>
        </REPLY>
        <REPLY name="PART" address="2" type="u16">
          <DESCRIPTION>Part Number.  e.g. si4440 will return - 0x4440)</DESCRIPTION>
        </REPLY>
        <REPLY name="PBUILD" address="4" type="u8">
          <DESCRIPTION>Part Build.</DESCRIPTION>
        </REPLY>
        <REPLY name="ID" address="5" type="u16">
          <DESCRIPTION>Id</DESCRIPTION>
        </REPLY>
        <REPLY name="CUSTOMER" address="7" type="u8">
          <DESCRIPTION>Customer ID</DESCRIPTION>
        </REPLY>
        <REPLY name="ROMID" address="8" type="u8">
          <DESCRIPTION>ROM Id</DESCRIPTION>
        </REPLY>
        <REPLY name="BOND" address="9" type="u8" internal="1">
          <DESCRIPTION>Bond Option</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="POWER_UP" value="0x02" feature="boot" dev="1" wip="0">
      <SUMMARY>Power-up device and mode selection. Modes include operational function</SUMMARY>
      <DESCRIPTION>Power-up the device with the specified function.  Power-up is complete when the CTS bit is set. This command may  take longer to set the CTS bit than other commands.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="BOOT_OPTIONS" address="1" type="bitfield">
          <FIELD name="FUNC" lsb="0" size="6">
            <DESCRIPTION>Selects the boot function of the device</DESCRIPTION>
            <ENUMERATION value="0" name="BOOT">
              <DESCRIPTION>Boot Loader</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRX">
              <DESCRIPTION>Transceiver</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="63" name="LOADED" internal="1">
              <DESCRIPTION>Image already loaded, just boot.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="PATCH" lsb="7" size="1">
            <DESCRIPTION>Select patch mode.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Boot normally.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>
                Copy image selected by FUNC to RAM, but do not boot. After  CTS is set, RAM may be patched via <REFERENCE>PATCH_ARGS</REFERENCE> and  <REFERENCE>PATCH_DATA</REFERENCE> commands.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="XTAL_OPTIONS" address="2" type="bitfield">
          <FIELD name="TCXO" lsb="0" size="1">
            <DESCRIPTION>Select if TCXO is in use.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>XTAL is not TCXO.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>XTAL is TCXO.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="XO_FREQ" address="3" type="u32">
          <DESCRIPTION>Frequency of TCXO or external crystal oscillator in Hz. The default is 30000000 (30MHz).</DESCRIPTION>
          <RANGE min="25000000" max="32000000" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="RAM_TEST" value="0x03" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>Tests the contents and operation of RAM.</SUMMARY>
      <DESCRIPTION>Calculate CRC of RAMs selected by MEMORY mask.</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="OPERATION" address="1" type="bitfield">
          <DESCRIPTION>Memory mask for RAMs to CRC.</DESCRIPTION>
          <FIELD name="MCUPX_CRC" size="1" lsb="0">
            <DESCRIPTION>If set, compute CRC of MCUPX RAM</DESCRIPTION>
          </FIELD>
          <FIELD name="MCUPX_RAM_TEST" size="1" lsb="7">
            <DESCRIPTION>If set, run RAM test on MCUPX RAM.  When tests are complete part should be reset.  Simple fill and verify of RAM.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CRC_START_ADDR" address="2" type="u16">
          <DESCRIPTION>Address to start CRC calculation at.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="CRC_SIZE" address="4" type="u16">
          <DESCRIPTION>Number of bytes to calculate CRC over.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RAM_TEST_FILL_BYTE" address="6" type="u8">
          <DESCRIPTION>Fill byte to run RAM test with.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RESULT" address="1" type="bitfield">
          <FIELD name="RAM_TEST_PASS" lsb="0" size="1">
            <DESCRIPTION>Indicates if the ram test passed or failed</DESCRIPTION>
            <ENUMERATION value="0" name="FAILED">
              <DESCRIPTION>FAILED - RAM Test Failed.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="PASSED">
              <DESCRIPTION>PASSED - RAM Test Passed.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="OTP_CRC" address="2" type="u16">
          <DESCRIPTION>CRC of application from OTP.</DESCRIPTION>
        </REPLY>
        <REPLY name="CRC" address="4" type="u16">
          <DESCRIPTION>CRC of selected RAMs</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_IMAGE" value="0x04" feature="boot" dev="1" wip="0">
      <SUMMARY>Loads image from NVM/ROM into RAM.</SUMMARY>
      <DESCRIPTION>Loads the selected function into RAM for execution or patching</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FLAGS" address="1" type="bitfield">
          <FIELD name="FUNC" lsb="0" size="4">
            <DESCRIPTION>Selects the image to load</DESCRIPTION>
            <ENUMERATION value="0" name="BOOT">
              <DESCRIPTION>Boot Loader - No image is loaded</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRX">
              <DESCRIPTION>Transceiver</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="VERIFYCRC" lsb="5" size="1" internal="1">
            <DESCRIPTION>Verify CRC. If no match, do not load NVM and report error. Set in patches along with CRC.</DESCRIPTION>
          </FIELD>
          <FIELD name="NONVM" lsb="4" size="1" internal="1">
            <DESCRIPTION>Do not load image from NVM, this is a full download.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CRC" address="2" internal="1" type="u16">
          <DESCRIPTION>
            CRC value which the RAMs must match after the image is loaded. If VERIFYCRC is not set,  then the CRC supplied is ignored. If the CRC does not match,  no <REFERENCE>PATCH_ARGS</REFERENCE>, <REFERENCE>PATCH_DATA</REFERENCE>, <REFERENCE>PATCH_COPY</REFERENCE> or <REFERENCE>POWER_UP</REFERENCE> commands will be accepted.  This condition can be cleared by sending another PATCH_IMAGE command with VERIFYCRC cleared.
          </DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED1" address="4" type="u8" internal="1">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED2" address="5" type="u8" internal="1">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="KEY1" address="6" type="u8" internal="1">
          <DESCRIPTION>decryption key1 for patch</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="KEY2" address="7" type="u8" internal="1">
          <DESCRIPTION>decryption key2 for patch</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_ARGS" value="0x05" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Initialize parameters for patching</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PIP" address="1" type="u8">
          <DESCRIPTION>Patch In Progress. This bit is set in all but the the final PATCH_ARGS command.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED1" address="2" type="u8">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED2" address="5" type="u8">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="CRC" address="6" type="u16">
          <DESCRIPTION>
            Validates the data loaded from patch commands. If the CRC fails, no further <REFERENCE>PATCH_DATA</REFERENCE>, <REFERENCE>PATCH_ARGS</REFERENCE>, <REFERENCE>PATCH_COPY</REFERENCE> or <REFERENCE>POWER_UP</REFERENCE> commands will be accepted.
          </DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_DATA" value="0xE0" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Load patch data. Technically, there are 16 PATCH_DATA commands 0x10-0x1F. CMD[2:0]  is the number of valid bytes in the command. CMD[3] is the LSB of the CRC.</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS internal="1">
        <PARAMETER name="DATA0" address="1" type="u8">
          <DESCRIPTION>encrypted patch data byte to load into RAM</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="2" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="3" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="4" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="5" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA5" address="6" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA6" address="7" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA7" address="8" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_COPY" value="0x06" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Patch RAM by copying from ROM/RAM/NVM to RAMs</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SRC_ADDR" address="1" type="u16">
          <DESCRIPTION>Memory Controller source address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DST_ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="COUNT" address="5" type="u16">
          <DESCRIPTION>Number of bytes to copy.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_COPY_2" value="0x0A" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>
        This is the same command as <REFERENCE>PATCH_COPY</REFERENCE> with the lsb of the crc set.
      </DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SRC_ADDR" address="1" type="u16">
          <DESCRIPTION>Memory Controller source address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DST_ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="COUNT" address="5" type="u16">
          <DESCRIPTION>Number of bytes to copy.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="TEST_DATA" value="0x09" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>Read NVM Test Data block</SUMMARY>
      <DESCRIPTION>Reports Test Data block read from NVM</DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="OFFSET" address="1" type="u8">
          <DESCRIPTION>Offset in test data block to begin reading at.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="TEST0" address="1" type="u8">
        </REPLY>
        <REPLY name="TEST1" address="2" type="u8">
        </REPLY>
        <REPLY name="TEST2" address="3" type="u8">
        </REPLY>
        <REPLY name="TEST3" address="4" type="u8">
        </REPLY>
        <REPLY name="TEST4" address="5" type="u8">
        </REPLY>
        <REPLY name="TEST5" address="6" type="u8">
        </REPLY>
        <REPLY name="TEST6" address="7" type="u8">
        </REPLY>
        <REPLY name="TEST7" address="8" type="u8">
        </REPLY>
        <REPLY name="TEST8" address="9" type="u8">
        </REPLY>
        <REPLY name="TEST9" address="10" type="u8">
        </REPLY>
        <REPLY name="TESTA" address="11" type="u8">
        </REPLY>
        <REPLY name="TESTB" address="12" type="u8">
        </REPLY>
        <REPLY name="TESTC" address="13" type="u8">
        </REPLY>
        <REPLY name="TESTD" address="14" type="u8">
        </REPLY>
        <REPLY name="TESTE" address="15" type="u8">
        </REPLY>
        <REPLY name="TESTF" address="16" type="u8">
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_PH_STATUS" value="0x21" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the packet handler status.</SUMMARY>
      <DESCRIPTION>Returns current packet handler status bytes and possibly clears pending packet handler interrupts.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PH_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending RX_FIFO_ALMOST_FULL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND_CLR" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending TX_FIFO_ALMOST_EMPTY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND_CLR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If clear, Clear pending CRC16_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending CRC_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending PACKET_RX interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND_CLR" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending PACKET_SENT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND_CLR" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MISS interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND_CLR" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MATCH interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="PH_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX_FIFO_ALMOST_FULL interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX_FIFO_ALMOST_EMPTY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC16_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, PACKET_RX interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, PACKET_SENT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MISS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MATCH interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_STATUS" address="2" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX fifo is above watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX fifo is below watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC-16 error</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC-32 error</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, Packet Received</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, Packet Sent</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet was discarded because filter did not match</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet matched filter.</DESCRIPTION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_MODEM_STATUS" value="0x22" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the modem status byte.</SUMMARY>
      <DESCRIPTION>Returns and possibly clears the current modem status byte.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="MODEM_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="SYNC_DETECT_PEND_CLR" lsb="0" size="1">
            <DESCRIPTION>If clear, Clear pending SYNC_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND_CLR" lsb="1" size="1">
            <DESCRIPTION>If clear, Clear pending PREAMBLE_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_PREAMBLE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI_JUMP interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_SYNC interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="MODEM_PEND" address="1" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, SYNC_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, PREAMBLE_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, INVALID_PREAMBLE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, RSSI interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, RSSI_JUMP interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, INVALID_SYNC interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_STATUS" address="2" type="bitfield">
          <FIELD name="SYNC_DETECT" lsb="0" size="1">
            <DESCRIPTION>If set, sync has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT" lsb="1" size="1">
            <DESCRIPTION>If set, preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE" lsb="2" size="1">
            <DESCRIPTION>If set, invalid preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI" lsb="3" size="1">
            <DESCRIPTION>
              If set, RSSI is above <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP" lsb="4" size="1">
            <DESCRIPTION>
              If set, RSSI jump above <REFERENCE>MODEM_RSSI_JUMP_THRESH</REFERENCE> has occured
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC" lsb="5" size="1">
            <DESCRIPTION>If set, invalid sync has been detected</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CURR_RSSI" address="3" type="u8">
          <DESCRIPTION>Current RSSI reading from the modem.</DESCRIPTION>
        </REPLY>
        <REPLY name="LATCH_RSSI" address="4" type="u8">
          <DESCRIPTION>
            Latched RSSI reading from the modem as configured by <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>.  Reset to 0 at the start of every RX.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="ANT1_RSSI" address="5" type="u8">
          <DESCRIPTION>RSSI of ANT1 while antenna diversity.  Latched during preamble evaluation and avaliable for reading after sync detection.</DESCRIPTION>
        </REPLY>
        <REPLY name="ANT2_RSSI" address="6" type="u8">
          <DESCRIPTION>RSSI of ANT2 while antenna diversity.  Latched during preamble evaluation and avaliable for reading after sync detection.</DESCRIPTION>
        </REPLY>
        <REPLY name="AFC_FREQ_OFFSET" address="7" type="u16">
          <DESCRIPTION>The AFC value that is generated by the AFC loop during receive mode.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_CHIP_STATUS" value="0x23" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the chip status.</SUMMARY>
      <DESCRIPTION>Returns current chip status bytes and possibly clears pending chip status interrupts.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHIP_CLR_PEND" address="1" type="bitfield" internal="1">
          <FIELD name="WUT_PEND_CLR" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending WUT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND_CLR" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending LOW_BATT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending CHIP_READY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending CMD_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending STATE_CHANGE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND_CLR" lsb="6" size="1">
            <DESCRIPTION>If clear, Clear pending CAL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CHIP_PEND" address="1" type="bitfield">
          <FIELD name="WUT_PEND" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, WUT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, LOW_BATT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_READY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, CMD_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, STATE_CHANGE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND" lsb="6" size="1">
            <DESCRIPTION>If set, CAL interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_STATUS" address="2" type="bitfield">
          <FIELD name="WUT" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, wakeup timer has expired</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, low battery has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY" lsb="2" size="1">
            <DESCRIPTION>If set, chip is ready to accept commands</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR" lsb="3" size="1">
            <DESCRIPTION>If set, command error has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE" lsb="4" size="1">
            <DESCRIPTION>If set, a state change has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR" lsb="5" size="1">
            <DESCRIPTION>If set, fifo underflow or overflow occured</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL" lsb="6" size="1">
            <DESCRIPTION>If set, calibration timer has expired</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CMD_ERR_STATUS" address="3" type="u8">
          <DESCRIPTION>Last command error cause.  Only valid if CMD_ERROR status bit is set.</DESCRIPTION>
          <ENUMERATION value="0x00" name="CMD_ERROR_NONE">
            <DESCRIPTION>No error.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x10" name="CMD_ERROR_BAD_COMMAND">
            <DESCRIPTION>Bad command issued.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x11" name="CMD_ERROR_BAD_ARG">
            <DESCRIPTION>Argment(s) in issued command were invalid.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x12" name="CMD_ERROR_COMMAND_BUSY">
            <DESCRIPTION>Command was issued before previous command was completed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x20" name="CMD_ERROR_BAD_NVM">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x30" name="CMD_ERROR_BAD_PATCH">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x31" name="CMD_ERROR_BAD_BOOTMODE">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x40" name="CMD_ERROR_BAD_PROPERTY">
            <DESCRIPTION>Bad Property ID was provided.</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_INT_STATUS" value="0x20" feature="common" dev="1" wip="0">
      <SUMMARY>Returns the interrupt status byte.</SUMMARY>
      <DESCRIPTION>Returns the current interrupt status byte.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PH_CLR_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending RX_FIFO_ALMOST_FULL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND_CLR" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending TX_FIFO_ALMOST_EMPTY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND_CLR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If clear, Clear pending CRC16_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending CRC_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear pending PACKET_RX interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND_CLR" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear pending PACKET_SENT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND_CLR" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MISS interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND_CLR" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending FILTER_MATCH interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="MODEM_CLR_PEND" address="2" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND_CLR" lsb="0" size="1">
            <DESCRIPTION>If clear, Clear pending SYNC_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND_CLR" lsb="1" size="1">
            <DESCRIPTION>If clear, Clear pending PREAMBLE_DETECT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_PREAMBLE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending RSSI_JUMP interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending INVALID_SYNC interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CHIP_CLR_PEND" address="3" type="bitfield">
          <FIELD name="WUT_PEND_CLR" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending WUT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND_CLR" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear pending LOW_BATT interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear pending CHIP_READY interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear pending CMD_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear pending STATE_CHANGE interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear pending FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND_CLR" lsb="6" size="1">
            <DESCRIPTION>If clear, Clear pending CAL interrupt. If set, leave interrupt pending</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="INT_PEND" address="1" type="bitfield">
          <FIELD name="PH_INT_STATUS_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, PH_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="MODEM_INT_STATUS_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, MODEM_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_INT_STATUS_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_INT_STATUS interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="INT_STATUS" address="2" type="bitfield">
          <FIELD name="PH_INT_STATUS" lsb="0" size="1">
            <DESCRIPTION>If set, packet handler status has interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="MODEM_INT_STATUS" lsb="1" size="1">
            <DESCRIPTION>If set, modem status has interrupt pending</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_INT_STATUS" lsb="2" size="1">
            <DESCRIPTION>If set, chip status has interrupt pending</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_PEND" address="3" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX_FIFO_ALMOST_FULL interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX_FIFO_ALMOST_EMPTY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR_PEND" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC16_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, PACKET_RX interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, PACKET_SENT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MISS interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, FILTER_MATCH interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_STATUS" address="4" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, RX fifo is above watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, TX fifo is below watermark</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC16_ERROR" lsb="2" size="1" feature="pro2" internal="1">
            <DESCRIPTION>If set, CRC-16 error</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, CRC-32 error</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, Packet Received</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, Packet Sent</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS" lsb="6" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet was discarded because filter did not match</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH" lsb="7" size="1" feature="pro2">
            <DESCRIPTION>If set, incoming packet matched filter.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_PEND" address="5" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, SYNC_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, PREAMBLE_DETECT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, INVALID_PREAMBLE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, RSSI interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, RSSI_JUMP interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, INVALID_SYNC interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_STATUS" address="6" type="bitfield">
          <FIELD name="SYNC_DETECT" lsb="0" size="1">
            <DESCRIPTION>If set, sync has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT" lsb="1" size="1">
            <DESCRIPTION>If set, preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE" lsb="2" size="1">
            <DESCRIPTION>If set, invalid preamble has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI" lsb="3" size="1">
            <DESCRIPTION>
              If set, RSSI is above <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP" lsb="4" size="1">
            <DESCRIPTION>
              If set, RSSI jump above <REFERENCE>MODEM_RSSI_JUMP_THRESH</REFERENCE> has occured
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC" lsb="5" size="1">
            <DESCRIPTION>If set, invalid sync has been detected</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_PEND" address="7" type="bitfield">
          <FIELD name="WUT_PEND" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, WUT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, LOW_BATT interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, CHIP_READY interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, CMD_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, STATE_CHANGE interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt is pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND" lsb="6" size="1">
            <DESCRIPTION>If set, CAL interrupt is pending.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_STATUS" address="8" type="bitfield">
          <FIELD name="WUT" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, wakeup timer has expired</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, low battery has been detected</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY" lsb="2" size="1">
            <DESCRIPTION>If set, chip is ready to accept commands</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR" lsb="3" size="1">
            <DESCRIPTION>If set, command error has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE" lsb="4" size="1">
            <DESCRIPTION>If set, a state change has occured</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR" lsb="5" size="1">
            <DESCRIPTION>If set, fifo underflow or overflow occured</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL" lsb="6" size="1">
            <DESCRIPTION>If set, calibration timer has expired</DESCRIPTION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FUNC_INFO" value="0x10" feature="common" dev="1" wip="0">
      <SUMMARY>Returns the Function revision information of the device.</SUMMARY>
      <DESCRIPTION>
        Return Function revision numbers for currently loaded functional mode firmware. Contrast with <REFERENCE>PART_INFO</REFERENCE>
      </DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="REVEXT" address="1" type="u8">
          <DESCRIPTION>External revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="REVBRANCH" address="2" type="u8">
          <DESCRIPTION>Branch revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="REVINT" address="3" type="u8">
          <DESCRIPTION>Internal revision number</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="PATCH" address="4" type="u16">
          <DESCRIPTION>ID of applied patch. This is also the last 2 bytes in the associated patch file (*.csg).</DESCRIPTION>
          <DESCRIPTION>0x0000 = No patch applied.</DESCRIPTION>
        </REPLY>
        <REPLY name="FUNC" address="6" type="u8">
          <DESCRIPTION>Current functional mode</DESCRIPTION>
          <ENUMERATION value="0" name="BOOT">
            <DESCRIPTION>Part is currently in boot mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="TRX">
            <DESCRIPTION>Tranceiver</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
        <REPLY name="SVNFLAGS" address="7" type="bitfield" internal="1">
          <FIELD name="LOCALMOD" lsb="0" size="1">
            <DESCRIPTION>If set, image has local modifications. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
          </FIELD>
          <FIELD name="MIXEDREV" lsb="1" size="1">
            <DESCRIPTION>If set, image has mixed revisions. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
          </FIELD>
          <FIELD name="LOCATION" lsb="4" size="2">
            <DESCRIPTION>Trunk, Branch or Tag</DESCRIPTION>
            <ENUMERATION value="0" name="TAG">
              <DESCRIPTION>Built from a SVN Tag</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="BRANCH">
              <DESCRIPTION>Built from a SVN Branch. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="TRUNK">
              <DESCRIPTION>Built from the SVN Trunk. MAJOR, MINOR and BUILD will be 0</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="SVNREV" address="8" type="u32" internal="1">
          <DESCRIPTION>Subersion Revision image was built from.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="SET_PROPERTY" value="0x11" feature="common" dev="1" wip="0">
      <SUMMARY>Sets the value of a property.</SUMMARY>
      <DESCRIPTION>Sets a property common to one or more commands. These are similar to parameters for a  api command but are not expected to change frequently and may be controlled by higher layers of  the user's software. Setting some properties may not cause the device to take immediate  action, however the property will take affect once a command which uses it is issued.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GROUP" address="1" type="u8">
          <DESCRIPTION>Selects the group of the property to set.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="NUM_PROPS" address="2" type="u8">
          <DESCRIPTION>Number of properties to write starting at START_PROP.</DESCRIPTION>
          <RANGE min="1" max="12" />
        </PARAMETER>
        <PARAMETER name="START_PROP" address="3" type="u8">
          <DESCRIPTION>
            Selects the property index to set. The available properties are  determined by the part number and the <REFERENCE>POWER_UP</REFERENCE>:FUNC selection.
          </DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA0" address="4" type="u8">
          <DESCRIPTION>Value of the property START_PROP</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="5" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 1 (don't care if NUM_PROPS &lt; 2 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="6" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 2 (don't care if NUM_PROPS &lt; 3 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="7" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 3 (don't care if NUM_PROPS &lt; 4 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="8" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 4 (don't care if NUM_PROPS &lt; 5 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA5" address="9" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 5 (don't care if NUM_PROPS &lt; 6 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA6" address="10" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 6 (don't care if NUM_PROPS &lt; 7 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA7" address="11" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 7 (don't care if NUM_PROPS &lt; 8 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA8" address="12" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 8 (don't care if NUM_PROPS &lt; 9 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA9" address="13" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 9 (don't care if NUM_PROPS &lt; 10 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA10" address="14" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 10 (don't care if NUM_PROPS &lt; 11 )</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA11" address="15" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 11 (don't care if NUM_PROPS &lt; 12 )</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_PROPERTY" value="0x12" feature="common" dev="1" wip="0">
      <SUMMARY>Retrieve a property's value.</SUMMARY>
      <DESCRIPTION>
        Retrieve a property's value; The value will either be the default or the value set with <REFERENCE>SET_PROPERTY</REFERENCE>.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GROUP" address="1" type="u8">
          <DESCRIPTION>Selects the group of the properties to retrieve.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="NUM_PROPS" address="2" type="u8">
          <DESCRIPTION>Number of properties to retrieve starting at START_PROP.</DESCRIPTION>
          <RANGE min="1" max="16" />
        </PARAMETER>
        <PARAMETER name="START_PROP" address="3" type="u8">
          <DESCRIPTION>
            Selects the first property index to retrieve.  The available properties are  determined by the part number and the <REFERENCE>POWER_UP</REFERENCE>:FUNC selection.
          </DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA0" address="1" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE>
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA1" address="2" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 1 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 2 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA2" address="3" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 2 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 3 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA3" address="4" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 3 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 4 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA4" address="5" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 4 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 5 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA5" address="6" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 5 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 6 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA6" address="7" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 6 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 7 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA7" address="8" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 7 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 8 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA8" address="9" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 8 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 9 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA9" address="10" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 9 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 10 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA10" address="11" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 10 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 11 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA11" address="12" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 11 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 12 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA12" address="13" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 12 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 13 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA13" address="14" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 13 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 14 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA14" address="15" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 14 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 15 )
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA15" address="16" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 15 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 16 )
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FIFO_INFO" value="0x15" feature="common" dev="1" wip="0">
      <SUMMARY>Provides access to transmit and receive fifo counts and reset.</SUMMARY>
      <DESCRIPTION>This command is normally used for error recovery, fifo hardware does not need to be reset prior to use.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIFO" address="1" type="bitfield">
          <FIELD name="TX" lsb="0" size="1" feature="tx">
            <ENUMERATION value="1">
              <DESCRIPTION>Resets transmit data fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RX" lsb="1" size="1" feature="rx">
            <ENUMERATION value="1">
              <DESCRIPTION>Resets receive data fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RX_FIFO_COUNT" address="1" type="u8" />
        <DESCRIPTION>Number of bytes currently in receive fifo.</DESCRIPTION>
        <REPLY name="TX_FIFO_SPACE" address="2" type="u8">
          <DESCRIPTION>Amount of space currently available in transmit fifo.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PACKET_INFO" value="0x16" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns information about the last packet received and optionally overrides field length.</SUMMARY>
      <DESCRIPTION>This command is used to retrieve the length field extracted from the packet when using variable length packets.</DESCRIPTION>
      <DESCRIPTION>On 802.15.4g receive mode, the FCS byte length embedded in the FHR is included to inform the host of the number of FCS bytes in the FIFO following the MAC Payload. if FCS is 0, 2 is added to the return length; if FCS is 1, 4 is added to the return length.</DESCRIPTION>
      <DESCRIPTION>If arguments follow, it can also be used to override packet length that was originally programmed with non-zero RX_LEN in START_RX or field length originally programmed with PKT field length properties.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIELD_NUMBER" address="1" type="bitfield">
          <FIELD name="FIELD_NUM" lsb="0" size="5">
            <ENUMERATION value="0x00">
              <DESCRIPTION>Nothing to override.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x01">
              <DESCRIPTION>Override FIELD 1 length or RX_LEN in START_RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x02">
              <DESCRIPTION>Override FIELD 2 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x04">
              <DESCRIPTION>Override FIELD 3 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x08">
              <DESCRIPTION>Override FIELD 4 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x10">
              <DESCRIPTION>Override FIELD 5 length.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="LEN" address="2" type="u16">
          <DESCRIPTION>Length in bytes.</DESCRIPTION>
          <RANGE min="1" max="8191" />
        </PARAMETER>
        <PARAMETER name="LEN_DIFF" address="4" type="u16">
          <DESCRIPTION>Difference in bytes based on the original field length or RX_LEN. Signed.</DESCRIPTION>
          <RANGE min="-32768" max="32767" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="LENGTH_15_8" address="1" type="u8">
          <DESCRIPTION>Most significant byte of the extracted length</DESCRIPTION>
        </REPLY>
        <REPLY name="LENGTH_7_0" address="2" type="u8">
          <DESCRIPTION>Least significant byte of the extracted length</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="IRCAL" value="0x17" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Calibrate IR.</SUMMARY>
      <DESCRIPTION>Calibrate image rejection.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SEARCHING_STEP_SIZE" address="1" type="bitfield">
          <FIELD name="COURSE_STEP_SIZE" lsb="0" size="4">
            <DESCRIPTION>Course Step Size of course stepping.</DESCRIPTION>
            <RANGE min="0" max="15" />
            <ENUMERATION value="0">
              <DESCRIPTION>Value 0 is usedn to skip course stepping</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="FINE_STEP_SIZE" lsb="4" size="2">
            <DESCRIPTION>Step size of fine stepping.</DESCRIPTION>
            <RANGE min="0" max="3" />
            <ENUMERATION value="0">
              <DESCRIPTION>Value 0 is used to skip fine stepping.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="INITIAL_PH_AMP" lsb="6" size="1">
            <DESCRIPTION>Initial ph and amp value when start IR calibration.</DESCRIPTION>
            <ENUMERATION value="1">
              <DESCRIPTION>use zero for phase and amplitude values as starting values</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0">
              <DESCRIPTION>use previous calibration values as starting values (default)</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="SEARCHING_RSSI_AVG" address="2" type="bitfield">
          <FIELD name="RSSI_COURSE_AVG" lsb="0" size="2">
            <DESCRIPTION>How many measurements(2^avg) per RSSI measurement while course stepping.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>1 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>4 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>8 measurements</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SKIP_CAL" lsb="2" size="1" internal="1">
            <DESCRIPTION>Skip calibration and skip reverting parameters, only configure the parameters for IR cal.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>do calibration and then revert parameters</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>skip calibration and reverting parameters</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RSSI_FINE_AVG" lsb="4" size="2">
            <DESCRIPTION>How many measurements(2^avg) per RSSI measurement while fine stepping.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>1 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>4 measurements</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>8 measurements</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SKIP_INIT_SEARCH_STAT" lsb="6" size="1" internal="1">
            <DESCRIPTION>Whether initialize the searching process(clear the saved information when step-by-step searching)</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Start a new search</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Continue to search.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="STEP_BY_STEP" lsb="7" size="1" internal="1">
            <DESCRIPTION>Whether only do one step searching. If we do only one step searching, then we don't revert the pararmeters when the API call is finished. If we calibarte IR step-by-step, the calibration state will automatically changed, please refer the return state</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Do automatically searching</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Only search one step.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_CHAIN_SETTING1" address="3" type="bitfield">
          <FIELD name="PGA_GAIN" lsb="0" size="3">
            <DESCRIPTION>Set PGA Gain, see PGA datasheet.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>6dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>9dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>12dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="6">
              <DESCRIPTION>0dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="7">
              <DESCRIPTION>3dB</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>others are all 6dB</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="CLOSE_SHUNT_SWITCH" lsb="3" size="1">
            <DESCRIPTION>Close shunt switch.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Open LNA input shunt switch</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Close Open LNA input shunt switch switch</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RF_SOURCE_PWR" lsb="4" size="2">
            <DESCRIPTION>Power of internal generator(Default 3).</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>smallest</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>small</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>big</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>biggest</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="IRCLKDIV" lsb="6" size="1">
            <DESCRIPTION>Set irclkdiv</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Set to nominal gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Harmonics at N x 30 MHz</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="EN_HRMNIC_GEN" lsb="7" size="1">
            <DESCRIPTION>Enable harmonic generator.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Not enable</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Enable</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_CHAIN_SETTING2" address="4" type="bitfield">
          <FIELD name="ADC_HIGH_GAIN" lsb="0" size="1">
            <DESCRIPTION>Set ADC to high gain.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Set to nominal gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Set to high gain</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RSSI_READ_DLEAY" lsb="4" size="4" internal="1">
            <DESCRIPTION>How many bits clock delay before read RSSI when calbration. Delay = (2 + RSSI_READ_DLEAY)*bit_clock).</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>2 + 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 + 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="15">
              <DESCRIPTION>2 + 15</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CAL_STATE" address="1" type="u8" internal="1">
          <DESCRIPTION>Current calibration state</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Not in proc</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>PH fine stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>AMP fine stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>PH course stepping</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8">
            <DESCRIPTION>AMP course stepping</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
        <REPLY name="RSSI" address="2" type="u8" internal="1">
          <DESCRIPTION>Current value of register RSSI. Usually the RSSI value is the RSSI of current AMP/PH. If (DIRECT_CHANGE = 1) or (CAL_STATE is different to privous value), then this means the search direction is changed, now the RSSI is the value before change direction. If it is this condition the RSSI of current value should be ready out by sfr_read.</DESCRIPTION>
        </REPLY>
        <REPLY name="DIR_CH" address="3" type="u8" internal="1">
          <DESCRIPTION>Whether search direction changed</DESCRIPTION>
        </REPLY>
        <REPLY name="LAST_RSSI" address="4" type="u8" internal="1">
          <DESCRIPTION>New for ROM3, return the final RSSI value after IR calibration.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PROTOCOL_CFG" value="0x18" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sets the chip up for specified protocol.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PROTOCOL" address="1" type="u8">
          <DESCRIPTION>Selects which protocol to configure the chip for.</DESCRIPTION>
          <ENUMERATION name="GENERIC" value="0">
            <DESCRIPTION>Packet format is generic, no dynamic reprogramming of packet handler properties.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION name="IEEE802154G" value="1">
            <DESCRIPTION>Packet format is IEEE802.15.4g compliant. The following properties are overriden: PKT_CRC_CONFIG, CRC_ENDIAN/BIT_ORDER in PKT_CONFG1 for TX and RX, PKT_FIELD_1_CRC_CONFIG for RX. Other applicable properties in the packet handler group still need to be programmed. Field 1 should have the length of 16 bits to contain the PHR with PKT_LEN_FIELD_SOURCE set to 1 for RX. PSDU field shall use Field 2 with variable length. Field 2 length should be set to the maximum allowed including the anticipated FCS length. It is anticipated that the FCS will be calculated by the host and transmitted over the air. Si4440 will receive PHR and put FCS in the FIFO for the host to retrieve and check. Therefore, CRC shouldn't be enabled on Si4440.</DESCRIPTION>
          </ENUMERATION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GPIO_PIN_CFG" value="0x13" feature="common" dev="1" wip="0">
      <SUMMARY>Configures the gpio pins</SUMMARY>
      <TARGETRELEASE></TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GPIO0" address="1" type="bitfield">
          <FIELD name="GPIO0_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO0_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO1" address="2" type="bitfield">
          <FIELD name="GPIO1_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO1_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO2" address="3" type="bitfield">
          <FIELD name="GPIO2_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO2_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO3" address="4" type="bitfield">
          <FIELD name="GPIO3_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO3_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NIRQ" address="5" type="bitfield">
          <FIELD name="NIRQ_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="nirq" value="39">
              <DESCRIPTION>Active low interrupt signal</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="NIRQ_DRV_PULL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="SDO" address="6" type="bitfield">
          <FIELD name="SDO_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SDO_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GEN_CONFIG" address="7" type="bitfield">
          <FIELD name="DRV_STRENGTH" lsb="5" size="2">
            <ENUMERATION name="HIGH" value="0">
              <DESCRIPTION>GPIOs configured as outputs will have highest drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_HIGH" value="1">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_LOW" value="2">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="LOW" value="3">
              <DESCRIPTION>GPIOs configured as outputs will have lowest drive strength.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="GPIO0" address="1" type="bitfield">
          <FIELD name="GPIO0r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO0_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO1" address="2" type="bitfield">
          <FIELD name="GPIO1r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO1_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO2" address="3" type="bitfield">
          <FIELD name="GPIO2r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO2_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO3" address="4" type="bitfield">
          <FIELD name="GPIO3r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the rx fifo is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the tx fifo is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="pro2" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting rx state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="pro2" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="pro2" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO3STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="NIRQ" address="5" type="bitfield">
          <FIELD name="NIRQr" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="nirq" value="39">
              <DESCRIPTION>Active low interrupt signal</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="NIRQSTATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="SDO" address="6" type="bitfield">
          <FIELD name="SDOr" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g. TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32k clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The wut period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="pro2" value="15" internal="1">
              <DESCRIPTION>Enable PA - Enable PA is internal signal that show when the internal PA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjuction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjuction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="pro2" value="18" internal="1">
              <DESCRIPTION>Enable LNA - Enable LNA is internal signal that show when the internal LNA is enabled</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="pro2" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="pro2" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="pro2" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="pro2" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assesment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SDOSTATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GEN_CONFIG" address="7" type="bitfield">
          <FIELD name="DRV_STRENGTH" lsb="5" size="2">
            <ENUMERATION name="HIGH" value="0">
              <DESCRIPTION>GPIOs configured as outputs will have highest drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_HIGH" value="1">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_LOW" value="2">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="LOW" value="3">
              <DESCRIPTION>GPIOs configured as outputs will have lowest drive strength.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PEEK" value="0xF0" feature="debug" internal="1" dev="1" wip="0">
      <SUMMARY>Read a memory location if the feature is enabled.</SUMMARY>
      <DESCRIPTION>Read a memory location in the MCU memory.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADDR0" address="1" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR1" address="3" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR2" address="5" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR3" address="7" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR4" address="9" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR5" address="11" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR6" address="13" type="u16">
          <DESCRIPTION>Memory address to read</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA0" address="1" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR0 == 0 )</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA1" address="2" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR1 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA2" address="3" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR2 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA3" address="4" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR3 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA4" address="5" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR4 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA5" address="6" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR5 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA6" address="7" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR6 == 0 ).</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="POKE" value="0xF1" feature="debug" internal="1" dev="1" wip="0">
      <SUMMARY>Write a memory location if the feature is enabled.</SUMMARY>
      <DESCRIPTION>Write a memory location in the MCU.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADDR0" address="1" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA0" address="3" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR0 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR1" address="4" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="6" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR1 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR2" address="7" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="9" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR2 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR3" address="10" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="12" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR3 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR4" address="13" type="u16">
          <DESCRIPTION>Memory controller address to write</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="15" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR4 == 0).</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_ADC_READING" value="0x14" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Retrieve the results of possible ADC conversions.</SUMMARY>
      <DESCRIPTION>Performs and returns results of selected ADC conversions.  This command takes ~1ms per conversion enabled below.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADC_EN" address="1" type="bitfield">
          <FIELD name="ADC_GPIO_PIN" lsb="0" size="2">
            <DESCRIPTION>Select GPIOx pin. The pin must be set as input</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Measure voltage of GPIO0</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Measure voltage of GPIO1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>Measure voltage of GPIO2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>Measure voltage of GPIO3</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="ADC_GPIO_EN" lsb="2" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion on GPIO, will read 0 value in reply</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of GPIO, results in GPIO_ADC. Vgpio = 3*GPIO_ADC/1280</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="BATTERY_VOLTAGE_EN" lsb="3" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion of battery voltage, will read 0 value in reply BATTERY_ADC</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of battery voltage, results in BATTERY_ADC. Vbatt = 3*BATTERY_ADC/1280</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="TEMPERATURE_EN" lsb="4" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion of temperature, will read 0 value in reply TEMPERATURE</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of temperature, result in TEMP_ADC. Temp in Celsius = ((800 + TEMP_SLOPE)/4096)*TEMP_ADC - (INTERCEPT/2 + 256)</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="ADC_CFG" address="2" type="bitfield">
          <FIELD name="ATT0" lsb="0" size="2">
            <DESCRIPTION>Set att0 when vgpio be measured</DESCRIPTION>
            <ENUMERATION value="0" name="NONE">
              <DESCRIPTION>X 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="HALF">
              <DESCRIPTION>X 1/2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="THIRD">
              <DESCRIPTION>X 1/3</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3" name="FOURTH">
              <DESCRIPTION>X 1/4</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="VBAT_ATT2" lsb="2" size="2">
            <DESCRIPTION>Set vbat_att2 when vgpio be measured</DESCRIPTION>
            <ENUMERATION value="0" name="NONE">
              <DESCRIPTION>X 1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="HALF">
              <DESCRIPTION>X 1/2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="THIRD">
              <DESCRIPTION>X 1/3</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3" name="FOURTH">
              <DESCRIPTION>X 1/4</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="UDTIME" lsb="4" size="4">
            <DESCRIPTION>ADC conversion = ADC_CLK / 12 / 2^(UDTIME +1), ADC_CLK = 30 MHz</DESCRIPTION>
            <ENUMERATION value="12">
              <DESCRIPTION>ADC_CLK /12 /8192 = 305 Hz</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="GPIO_ADC" address="1" type="u16">
          <DESCRIPTION>ADC value of voltage on GPIO</DESCRIPTION>
        </REPLY>
        <REPLY name="BATTERY_ADC" address="3" type="u16">
          <DESCRIPTION>ADC value of battery voltage</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_ADC" address="5" type="u16">
          <DESCRIPTION>ADC value of temperature sensor voltage</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_SLOPE" address="7" type="u8">
          <DESCRIPTION>Slope in the formula of Vtempadc -- Temperature</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_INTERCEPT" address="8" type="u8">
          <DESCRIPTION>Intercept in the formula of Vtempadc -- Temperature</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_TX" value="0x31" feature="tx" dev="1" wip="0">
      <SUMMARY>Switches to TX state and starts packet transmission.</SUMMARY>
      <DESCRIPTION>Switches to TX state when condition is met.  Command arguments are retained though sleep state, so they only need to be written when they change.  CTS will not return high until in TX state.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHANNEL" address="1" type="u8">
          <DESCRIPTION>
            Channel number to tune the receiver to.  Frequency is determined using integer, fractional, and step size properties in the FREQ_CONTROL property group.  This value will be overwritten with <REFERENCE>START_RX</REFERENCE>:CHANNEL
          </DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="CONDITION" address="2" type="bitfield">
          <FIELD name="START" lsb="0" size="2">
            <ENUMERATION value="0">
              <DESCRIPTION>Start TX immediately.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Start TX when wake up timer expires.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RETRANSMIT" lsb="2" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Send data that has been written to fifo.  If fifo is empty a fifo underflow interrupt will occur.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Send last packet again.  If this option is used, ensure that no new data is written to the fifo.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="TXCOMPLETE_STATE" lsb="4" size="4">
            <DESCRIPTION>State to go to when current packet transmission completes.  If this parameter is not sent with the command, the last value specified is used.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="TX_LEN" address="3" type="u16">
          <DESCRIPTION>If this field is nonzero, the packet will be transmitted using only field 1.  If this field is zero, the configuration of the packet handler fields is used.  If RETRANSMIT is set, this field is ignored.</DESCRIPTION>
          <RANGE min="0" max="8191" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_RX" value="0x32" feature="rx" dev="1" wip="0">
      <SUMMARY>Switches to RX state. Command arguments are retained though sleep state, so these only need to be written when they change.</SUMMARY>
      <DESCRIPTION>Switches to RX state when condition is met.  Switch to specified state when RX packet completes.  CTS will not return until in RX mode</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHANNEL" address="1" type="u8">
          <DESCRIPTION>
            Channel number to transmit the packet on.  Frequency is determined using integer, fractional, and step size properties in the FREQ_CONTROL property group.  This value will be overwritten with <REFERENCE>START_TX</REFERENCE>:CHANNEL
          </DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="CONDITION" address="2" type="bitfield">
          <FIELD name="START" lsb="0" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Start RX immediately.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Start RX when wake up timer expires.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_LEN" address="3" type="u16">
          <DESCRIPTION>If this field is nonzero, the packet will be received using only field 1.  If this field is zero, the configuration of the packet handler fields is used.</DESCRIPTION>
          <RANGE min="0" max="8191" />
        </PARAMETER>
        <PARAMETER name="NEXT_STATE1" address="5" type="bitfield">
          <FIELD name="RXTIMEOUT_STATE" lsb="0" size="4">
            <DESCRIPTION>
              If preamble detection times out, RX will transition to RXTIMEOUT_STATE. See <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE> for details regarding how to configure preamble timeout.  Defaults to 0.
            </DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NEXT_STATE2" address="6" type="bitfield">
          <FIELD name="RXVALID_STATE" lsb="0" size="4">
            <DESCRIPTION>RX transitions to RXVALID_STATE if CRC check passes when CRC is enabled via PKT group properties. If CRC is not enabled, upon receiving packet received interrupt, RX transitions to RXVALID_STATE.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NEXT_STATE3" address="7" type="bitfield">
          <FIELD name="RXINVALID_STATE" lsb="0" size="4">
            <DESCRIPTION>If CRC checking is enabled, in case of CRC error, RX will transition to RXINVALID_STATE.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="RX_HOP" value="0x36" feature="pro2" dev="1" wip="0">
      <SUMMARY>Hop to a new frequency while in RX.</SUMMARY>
      <DESCRIPTION>While in RX state this will hop to the frequency specified by the parameters and start searching for a preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="INTE" address="1" type="u8">
          <DESCRIPTION>INTE register value</DESCRIPTION>
          <RANGE min="0" max="127" />
        </PARAMETER>
        <PARAMETER name="FRAC2" address="2" type="u8">
          <DESCRIPTION>FRAC2 register value</DESCRIPTION>
          <RANGE min="0" max="15" />
        </PARAMETER>
        <PARAMETER name="FRAC1" address="3" type="u8">
          <DESCRIPTION>FRAC1 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="FRAC0" address="4" type="u8">
          <DESCRIPTION>FRAC0 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT1" address="5" type="u8">
          <DESCRIPTION>VCO_CNT1 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT0" address="6" type="u8">
          <DESCRIPTION>VCO_CNT0 register value</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="CHANGE_STATE" value="0x34" feature="common" dev="1" wip="0">
      <SUMMARY>Update state machine entries.</SUMMARY>
      <DESCRIPTION>This command is used to manually switch to a specified state.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="NEXT_STATE1" address="1" type="bitfield">
          <FIELD name="NEW_STATE" lsb="0" size="4">
            <DESCRIPTION>State to go to immediately.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_MFSK" value="0x35" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Start direct frequency offset transmission mode.</SUMMARY>
      <DESCRIPTION>This command is used to switch to direct frequency offset transmission mode.</DESCRIPTION>
      <DESCRIPTION>Configures MSB or LSB, invert data or not, median frequency offset.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="DIR_MODE_CFG" address="1" type="bitfield">
          <FIELD name="msb_first" lsb="1" size="1">
            <DESCRIPTION>Allows to shift in SPI data as MSB first or LSB first.</DESCRIPTION>
            <ENUMERATION value="0" name="LSB_FIRST">
              <DESCRIPTION>LSB first</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="MSB_FIRST">
              <DESCRIPTION>MSB first</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="scale_factor" lsb="4" size="2">
            <DESCRIPTION>Data samples will be scaled prior to be written to the  modem offset registers.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>This sampled data X1</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>This sampled data X2</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>This sampled data X4</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>This sampled data X8</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="inv_data" lsb="6" size="1">
            <DESCRIPTION>Invert SDI data.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Not invert SDI data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>SDI data will be inverted prior to be shift in.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="FREQ_OFFSET" address="2" type="u16">
          <DESCRIPTION>Median frequency offset value, in 2's Complement.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="AGC_OVERRIDE" value="0xD0" feature="common" dev="1" wip="0" internal="1">
      <SUMMARY>Override the AGC</SUMMARY>
      <DESCRIPTION>This command is used to allow override of the AGC.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="AGC_OVERRIDE" address="1" type="bitfield">
          <FIELD name="LNA_GAIN_CFG" lsb="0" size="3">
            <DESCRIPTION>LNA Gain</DESCRIPTION>
          </FIELD>
          <FIELD name="DIS_LNA_AGC" lsb="3" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Use hardware AGC to control LNA gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Disable LNA hardware AGC, set LNA gain to fixed value</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="PGA_GAIN_CFG" lsb="4" size="3">
            <DESCRIPTION>PGA Gain configuration.</DESCRIPTION>
          </FIELD>
          <FIELD name="DIS_PGA_AGC" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Use hardware AGC to control PGA gain</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Disable PGA hardware AGC, set PGA gain to fixed value</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="REQUEST_DEVICE_STATE" value="0x33" feature="common" dev="1" wip="0">
      <SUMMARY>Request current device state.</SUMMARY>
      <DESCRIPTION>Requests the current state of the device and lists pending TX and RX requests.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CURR_STATE" address="1" type="bitfield">
          <FIELD name="MAIN_STATE" lsb="0" size="4">
            <DESCRIPTION>Current State.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>No change</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>Sleep state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="CURRENT_CHANNEL" address="2" type="u8">
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="READ_CMD_BUFF" value="0x44" feature="common" dev="1" wip="0">
      <SUMMARY>Used to read CTS and the command response.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="bitfield" feature="*">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA\[1..16\] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF0" address="1" type="u8">
          <DESCRIPTION>Byte 0 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF1" address="2" type="u8">
          <DESCRIPTION>Byte 1 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF2" address="3" type="u8">
          <DESCRIPTION>Byte 2 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF3" address="4" type="u8">
          <DESCRIPTION>Byte 3 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF4" address="5" type="u8">
          <DESCRIPTION>Byte 4 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF5" address="6" type="u8">
          <DESCRIPTION>Byte 5 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF6" address="7" type="u8">
          <DESCRIPTION>Byte 6 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF7" address="8" type="u8">
          <DESCRIPTION>Byte 7 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF8" address="9" type="u8">
          <DESCRIPTION>Byte 8 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF9" address="10" type="u8">
          <DESCRIPTION>Byte 9 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF10" address="11" type="u8">
          <DESCRIPTION>Byte 10 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF11" address="12" type="u8">
          <DESCRIPTION>Byte 11 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF12" address="13" type="u8">
          <DESCRIPTION>Byte 12 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF13" address="14" type="u8">
          <DESCRIPTION>Byte 13 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF14" address="15" type="u8">
          <DESCRIPTION>Byte 14 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF15" address="16" type="u8">
          <DESCRIPTION>Byte 15 of the command response buffer.  Only valid if CTS is 0xFF</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_A_READ" value="0x50" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with A.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_A_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_B_READ" value="0x51" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with B.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_B_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_C_READ" value="0x53" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with C.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_C_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_D_READ" value="0x57" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with C.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_D_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="WRITE_TX_FIFO" value="0x66" feature="common" dev="1" wip="0">
      <SUMMARY>Writes the TX FIFO.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command has no response to be read.
        If you write more data than the  TX FIFO can hold it will trigger a FIFO Overflow interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIRST_BYTE" address="1" type="u8">
          <DESCRIPTION>First byte to write to the TX FIFO</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="READ_RX_FIFO" value="0x77" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the RX FIFO.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
        If you read more data than the  RX FIFO contains it will trigger a FIFO Underflow interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FIRST_BYTE" address="0" type="u8">
          <DESCRIPTION>First byte in the RX FIFO.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <PROPERTY group="GLOBAL" name="XO_TUNE" value="0" default="0x40" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure crystal oscillator frequency tuning bank</SUMMARY>
      <DESCRIPTION>Crystal oscillator frequency tuning value.  0x00 is maximum frequency value and 0x7F is lowest frequency value. Each LSB code corresponds to a 70fF capacitance change. The total adjustment range assuming a 30MHz XTAL is +/-100ppm.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="127" />
      <BYTE>
        <FIELD name="TUNE_VALUE" lsb="0" size="7">
          <ENUMERATION value="0" name="FASTEST_FREQUENCY">
            <DESCRIPTION>Maximum frequency</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="127" name="SLOWEST_FREQUENCY">
            <DESCRIPTION>Lowest frequency</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="CLK_CFG" value="1" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Clock configuration options</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CLK_32K_SEL" lsb="0" size="3">
          <SUMMARY>Selects 32 kHz clock source</SUMMARY>
          <ENUMERATION value="0" name="OFF">
            <DESCRIPTION>32 kHz clock is disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="RC">
            <DESCRIPTION>32 kHz clock is driven by internal RC oscillator</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CRYSTAL">
            <DESCRIPTION>32 kHz clock is driven by External crystal</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="DIVIDED_CLK_SEL" lsb="3" size="3">
          <SUMMARY>Selected divided clock output divider.</SUMMARY>
          <ENUMERATION value="0" name="DIV_1">
            <DESCRIPTION>Clock output is system clock divided by 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIV_2">
            <DESCRIPTION>Clock output is system clock divided by 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="DIV_3">
            <DESCRIPTION>Clock output is system clock divided by 3.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="DIV_7_5">
            <DESCRIPTION>Clock output is system clock divided by 7.5.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="DIV_10">
            <DESCRIPTION>Clock output is system clock divided by 10.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="DIV_15">
            <DESCRIPTION>Clock output is system clock divided by 15.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="DIV_30">
            <DESCRIPTION>Clock output is system clock divided by 30.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="DIVIDED_CLK_EN" lsb="6" size="1">
          <SUMMARY>Enables divided clock output from the GPIOs.</SUMMARY>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Divided clock output is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Divided clock output is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="LOW_BATT_THRESH" value="2" default="0x18" feature="pro2" dev="1" wip="0">
      <SUMMARY>Low battery threshold</SUMMARY>
      <DESCRIPTION>Sets the low battery threshold</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="THRESHOLD" lsb="0" size="5">
          <RANGE min="0" max="31">! desc - "vdd_thresh = (30 + THRESH)/20. Default 2.7V"</RANGE>
          <ENUMERATION value="0" name="HIGH_POWER">
            <DESCRIPTION>1.52V</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31" name="LOW_POWER">
            <DESCRIPTION>3.13V</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="CONFIG" value="3" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Global configuration settings</SUMMARY>
      <DESCRIPTION>Various settings that affect entire chip. If PROTOCOL is specified, the chip is placed into protocol aware state.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="POWER_MODE" lsb="0" size="1">
          <ENUMERATION value="0" name="HIGH_POWER">
            <DESCRIPTION>High performance mode for RX and TX. RX current = 13mA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="LOW_POWER">
            <DESCRIPTION>Low power mode for RX and TX. RX current = 10mA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PROTOCOL" lsb="1" size="3">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Packet format is generic, no dynamic reprogramming of packet handler properties.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Packet format is IEEE802.15.4g compliant.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="FIFO_MODE" lsb="4" size="1">
          <ENUMERATION value="0" name="SPLIT_FIFO">
            <DESCRIPTION>TX and RX FIFO are independent, 64-byte size for each other.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HALF_DUPLEX_FIFO">
            <DESCRIPTION>TX/RX FIFO are sharing with 128-byte size buffer.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_CONFIG" value="4" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>GLOBAL WUT configuation</SUMMARY>
      <DESCRIPTION>Program WUT and enable events, Low Battery Detector support , Low Duty Cycle operation.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CAL_EN" lsb="0" size="1">
          <ENUMERATION value="0" name="DISABLE_CAL">
            <DESCRIPTION>Disable calibration timer</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_CAL">
            <DESCRIPTION>Enable calibration timer.  This will cause the  for 32kHz RC calibration.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_EN" lsb="1" size="1">
          <ENUMERATION value="0" name="DISABLE_WUT">
            <DESCRIPTION>Disable wake up timer</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_WUT">
            <DESCRIPTION>Enable wake up timer</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_LBD_EN" lsb="2" size="1">
          <ENUMERATION value="0" name="DISABLE_LBD">
            <DESCRIPTION>Disable low battery detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_LBD">
            <DESCRIPTION>Enable low battery detect on WUT inteval</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_CAL_PERIOD" lsb="3" size="3">
          <DESCRIPTION>If enabled by CAL_EN, selects how often to power up the chip and perform 32 kHz rc calibration.</DESCRIPTION>
          <ENUMERATION value="0" name="1_SEC">
            <DESCRIPTION>1 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="2_SEC">
            <DESCRIPTION>2 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="4_SEC">
            <DESCRIPTION>4 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="8_SEC">
            <DESCRIPTION>8 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="16_SEC">
            <DESCRIPTION>16 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="32_SEC">
            <DESCRIPTION>32 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="64_SEC">
            <DESCRIPTION>64 sec</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="128_SEC">
            <DESCRIPTION>128 sec</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_LDC_EN" lsb="6" size="2">
          <ENUMERATION value="0" name="DISABLE_LDC">
            <DESCRIPTION>Disable LDC operation</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="RX_LDC">
            <DESCRIPTION>LDC RX Mode.  START_RX end state is used . - Could allow hopping, need to determine how to support LDC in this case</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="TX_LDC">
            <DESCRIPTION>treated as wake-up - START_TX. - START_TX end state is used .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_M_15_8" value="5" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_M_15_8</SUMMARY>
      <DESCRIPTION>Sets HW WUT_M higher byte</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_M_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_M_7_0" value="6" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_M_7_0</SUMMARY>
      <DESCRIPTION>Sets HW WUT_M lower byte.  The M (mantissa) value is only used to define the WUT, and must be set to a minimum of decimal 1.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_M_7_0" lsb="0" size="8">
          <RANGE min="1" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_R" value="7" default="0x20" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_R</SUMMARY>
      <DESCRIPTION>Sets HW WUT_R.  The R (exponent) value is shared between the WUT and the LDC mode duration. The value of R can be 0, and is limited to a maximum of decimal 20 (10100).</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_R" lsb="0" size="5">
          <RANGE min="0" max="20" />
        </FIELD>
        <FIELD name="WUT_SLEEP" lsb="5" size="1">
          <ENUMERATION value="0" name="READY">
            <DESCRIPTION>Go to Ready state after WUT</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SLEEP">
            <DESCRIPTION>Go to Sleep state after WUT</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RSSI_CHECK" lsb="6" size="1">
          <ENUMERATION value="0" name="READY">
            <DESCRIPTION>Disabel check RSSI threshold after Rx state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SLEEP">
            <DESCRIPTION>Enable check RSSI threshold after RX state</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_LDC" value="8" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure WUT_LDC</SUMMARY>
      <DESCRIPTION>Sets M for Low Duty Cycle duration.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_LDC" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="ENABLE" value="256" default="0x04" feature="common" dev="1" wip="0">
      <SUMMARY>Interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables top-level interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="PH_INT_STATUS_EN" lsb="0" size="1">
          <DESCRIPTION>If set, Enables PH_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="MODEM_INT_STATUS_EN" lsb="1" size="1">
          <DESCRIPTION>If set, Enables MODEM_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CHIP_INT_STATUS_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables CHIP_INT_STATUS interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="PH_ENABLE" value="257" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Packet handler interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables packet handler interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIFO_ALMOST_FULL_EN" lsb="0" size="1" feature="rx">
          <DESCRIPTION>If set, Enables RX_FIFO_ALMOST_FULL interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="TX_FIFO_ALMOST_EMPTY_EN" lsb="1" size="1" feature="tx">
          <DESCRIPTION>If set, Enables TX_FIFO_ALMOST_EMPTY interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CRC16_ERROR_EN" lsb="2" size="1" feature="pro2" internal="1">
          <DESCRIPTION>If set, Enables CRC16_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CRC_ERROR_EN" lsb="3" size="1" feature="rx">
          <DESCRIPTION>If set, Enables CRC_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PACKET_RX_EN" lsb="4" size="1" feature="rx">
          <DESCRIPTION>If set, Enables PACKET_RX interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PACKET_SENT_EN" lsb="5" size="1" feature="tx">
          <DESCRIPTION>If set, Enables PACKET_SENT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FILTER_MISS_EN" lsb="6" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables FILTER_MISS interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FILTER_MATCH_EN" lsb="7" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables FILTER_MATCH interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="MODEM_ENABLE" value="258" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Modem interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables modem interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="SYNC_DETECT_EN" lsb="0" size="1">
          <DESCRIPTION>If set, Enables SYNC_DETECT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="PREAMBLE_DETECT_EN" lsb="1" size="1">
          <DESCRIPTION>If set, Enables PREAMBLE_DETECT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="INVALID_PREAMBLE_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables INVALID_PREAMBLE interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_EN" lsb="3" size="1">
          <DESCRIPTION>If set, Enables RSSI interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_JUMP_EN" lsb="4" size="1">
          <DESCRIPTION>If set, Enables RSSI_JUMP interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="INVALID_SYNC_EN" lsb="5" size="1">
          <DESCRIPTION>If set, Enables INVALID_SYNC interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="CHIP_ENABLE" value="259" default="0x04" feature="common" dev="1" wip="0">
      <SUMMARY>Chip interrupt enable property</SUMMARY>
      <DESCRIPTION>Enables chip interrupt sources</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_EN" lsb="0" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables WUT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="LOW_BATT_EN" lsb="1" size="1" feature="pro2">
          <DESCRIPTION>If set, Enables LOW_BATT interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CHIP_READY_EN" lsb="2" size="1">
          <DESCRIPTION>If set, Enables CHIP_READY interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CMD_ERROR_EN" lsb="3" size="1">
          <DESCRIPTION>If set, Enables CMD_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="STATE_CHANGE_EN" lsb="4" size="1">
          <DESCRIPTION>If set, Enables STATE_CHANGE interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_EN" lsb="5" size="1">
          <DESCRIPTION>If set, Enables FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt.</DESCRIPTION>
        </FIELD>
        <FIELD name="CAL_EN" lsb="6" size="1">
          <DESCRIPTION>If set, Enables CAL interrupt.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="A_MODE" value="512" default="0x01" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register A Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register A.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_A_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="B_MODE" value="513" default="0x02" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register B Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register B.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_B_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="C_MODE" value="514" default="0x09" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register C Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register C.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_C_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="D_MODE" value="515" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register D Configuration</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register D.</DESCRIPTION>
      <TARGETRELEASE>ROM0</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_A_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS">
            <DESCRIPTION>Modem status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND">
            <DESCRIPTION>Modem interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6">
            <DESCRIPTION></DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="MODE" value="8704" default="0x08" feature="pro2" dev="1" wip="0">
      <SUMMARY>PA operating mode and groups.</SUMMARY>
      <DESCRIPTION>Specify PA mode and HPA/MPA groups</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM2</APIUPDATED>
      <BYTE>
        <FIELD name="PA_MODE" lsb="0" size="2">
          <DESCRIPTION>PA mode.</DESCRIPTION>
          <ENUMERATION value="0" name="CLE">
            <DESCRIPTION>CLE - Switch, for Square Wave or Class E</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SWC">
            <DESCRIPTION>SWC - Switch Current</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PA_GROUP" lsb="2" size="4">
          <DESCRIPTION>ODEV group and unit configuration for devices using programmable step size PA.</DESCRIPTION>
          <ENUMERATION value="1" name="HPA0_1GRP">
            <DESCRIPTION>HPA0 1 group on.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="HPA0_2GRP">
            <DESCRIPTION>HPA0 2 groups on.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PA_RAMP" lsb="7" size="1">
          <DESCRIPTION>PA ramp.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable Txramp</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable Txramp</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="PWR_LVL" value="8705" default="0x7F" feature="common" dev="1" wip="0">
      <SUMMARY>PA Level Configuration</SUMMARY>
      <DESCRIPTION>Set the number of unit LV ODEV devices used in each group.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="DDAC" lsb="0" size="7">
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="BIAS_CLKDUTY" value="8706" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>PA Bias and TX clock duty cycle configuration</SUMMARY>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="OB" lsb="0" size="6">
          <DESCRIPTION>Set the bias current in Switch Current mode for each UNIT of ODEV.</DESCRIPTION>
          <RANGE min="0" max="63" />
        </FIELD>
        <FIELD name="CLK_DUTY" lsb="6" size="2">
          <DESCRIPTION>Select 25% or 50% duty cycle clocks for transmitter to improve transmit efficiency.</DESCRIPTION>
          <ENUMERATION value="0" name="DIFF_50">
            <DESCRIPTION>TXP: 50%, TXN: 50%</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIFF_25">
            <DESCRIPTION>TXP: 25%, TXN: 25%</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="SINGLE_50">
            <DESCRIPTION>TXP: 50%, TXN: 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="SINGLE_25">
            <DESCRIPTION>TXP: 25%, TXN: 0</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="TC" value="8707" default="0x5D" feature="pro2" internal="0" dev="1" wip="0">
      <SUMMARY>PA cascode ramping Configuration</SUMMARY>
      <DESCRIPTION>Configuration control for PA power ramping in order to minimize switching spectrum noise.  In (G)FSK mode, the values of TC and FSK_MOD_DLY should be programmed together so data modulation only occurs after the PA power ramping has been completed.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="FSK_MOD_DLY" lsb="5" size="3">
          <DESCRIPTION>In (G)FSK mode this is the delay from PA enable to the start of modulation.  This is necessary to give the PA time to ramp.</DESCRIPTION>
          <ENUMERATION value="0" name="2_US">
            <DESCRIPTION>Modulation will begin 2us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="6_US">
            <DESCRIPTION>Modulation will begin 6us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="10_US">
            <DESCRIPTION>Modulation will begin 10us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="14_US">
            <DESCRIPTION>Modulation will begin 14us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="18_US">
            <DESCRIPTION>Modulation will begin 18us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="22_US">
            <DESCRIPTION>Modulation will begin 22us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="26_US">
            <DESCRIPTION>Modulation will begin 26us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="30_US">
            <DESCRIPTION>Modulation will begin 30us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TC" lsb="0" size="5">
          <DESCRIPTION>Ramping time (up and down) for the HV cascode of output device.           The ramp rate is determined by the formula: Ramp time=20us/(32-TC)        NOTE: If using (G)FSK modulation this value must be programmed to a value less than 29.</DESCRIPTION>
          <RANGE min="0" max="31" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="RAMP_EX" value="8708" default="0x00" feature="pro2" internal="0" dev="1" wip="0">
      <SUMMARY>PA ramping voltage driving txramp pad Configuration</SUMMARY>
      <DESCRIPTION>Txramp_stop will receive ook signal from digital and translate that into a 0 to 1.5V ramping voltage driving txramp pad. This is used to provide a ramping reference for external power amplifier.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="TC" lsb="0" size="4">
          <DESCRIPTION>Ramping time (up and down) determined by the formula: Ramp time=20us/(32-TC).</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
        <FIELD name="VSET" lsb="4" size="4">
          <DESCRIPTION>Regulator voltage settings. 0 represents 1.0v, 15 represents 1.5v</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="PFDCP_CPFF" value="8960" default="0x2C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Feed forward charge pump current selection.</SUMMARY>
      <DESCRIPTION>The current level is 5uA times the selection value.</DESCRIPTION>
      <DESCRIPTION>The 7th bit is a test bit to be used only for debugging  when the phase noise is excessive. The 7th bit gives 160uA and not 32.uA.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="cp_ff_cur" lsb="0" size="7">
          <ENUMERATION value="0">
            <DESCRIPTION>0 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>5 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="127">
            <DESCRIPTION>Maximum 475 uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="PFDCP_CPINT" value="8961" default="0x0E" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Integration charge pump current selection.</SUMMARY>
      <DESCRIPTION>The current level is 5uA times the selection value.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="cp_int_cur" lsb="0" size="4">
          <ENUMERATION value="0">
            <DESCRIPTION>0 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>5 uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>Maximum 75 uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="VCO_KV" value="8962" default="0x0B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Scaling on integrated-path Kv and feed forward path Kv.</SUMMARY>
      <DESCRIPTION>Scaling on integrated-path Kv and feed forward path Kv.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="kv_int" lsb="0" size="2">
          <DESCRIPTION>Sets the scaling on integrated-path Kv.</DESCRIPTION>
          <ENUMERATION value="0" name="GND">
            <DESCRIPTION>Sets kv_int port of VCO to ground,  this is independent of kv_int_opnlop settings.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="33PERCENT">
            <DESCRIPTION>Sets kv_int to 1/3 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="66PENCENT">
            <DESCRIPTION>Sets kv_int to 2/3 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="MAX">
            <DESCRIPTION>Sets kv_int to its maximum value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="kv_dir" lsb="2" size="2">
          <DESCRIPTION>Sets the scaling on feed forward path Kv.</DESCRIPTION>
          <ENUMERATION value="0" name="GND">
            <DESCRIPTION>Sets kv_dir port of VCO to ground,  this is independent of kv_dir_opnlop settings.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HALF">
            <DESCRIPTION>Sets kv_dir to 1/2 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="MAX">
            <DESCRIPTION>Sets kv_dir to its maximum value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="kv_min" lsb="4" size="1">
          <DESCRIPTION>Absolute minimum value of KV, this is independeant of VCO_KVCAL setting.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>use property VCO_KVCAL value</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>sets KV to minimum value</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT3" value="8963" default="0x04" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Loop filter of R2 value</SUMMARY>
      <DESCRIPTION>The value of R2 from 18kOhm to 144kOhm.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_r2" lsb="0" size="3">
          <RANGE min="0" max="7" />
          <ENUMERATION value="0">
            <DESCRIPTION>R2 = 18k</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>R2 = 144k</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT2" value="8964" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>value of C2 for loop filter</SUMMARY>
      <DESCRIPTION>The value of C2 from 877fF to 11.25pF with 335fF LSB, 5-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_c2" lsb="0" size="5">
          <ENUMERATION value="0">
            <DESCRIPTION>C2 = 877fF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31">
            <DESCRIPTION>C2 = 11.25pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT1" value="8965" default="0x73" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>value of C1 and C3 for loop filter</SUMMARY>
      <DESCRIPTION>value of C1 and C3 for loop filter</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_c3" lsb="0" size="2">
          <DESCRIPTION>The value of C3 linearly from 9pF up to 12pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>C3 =  9pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>C3 = 10pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>C3 = 11pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>C3 = 12pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="lpf_ff_c1_code" lsb="2" size="2">
          <DESCRIPTION>Offsets the value of C1 with 1pF steps from 0 up to 3pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>delta C1 = 0pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>delta C1 = 1pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>delta C1 = 2pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>delta C1 = 3pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="lpf_ff_c1" lsb="4" size="3">
          <DESCRIPTION>The value of C1 from 4.55pF to 7.21pF with 380fF LSB, 3-bit.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>C1 = 4.55pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>C1 = 4.93pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>C1 = 5.31pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>C1 = 5.69pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>C1 = 6.07pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>C1 = 6.45pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>C1 = 6.83pF</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>C1 = 7.21pF</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT0" value="8966" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Bias current of the loop filter.</SUMMARY>
      <DESCRIPTION>Bias current of the loop filter, 25uA, 34uA, 50uA or 100uA.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_bias" lsb="0" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>25uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>34uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>50uA</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>100uA</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="VCO_KVCAL" value="8967" default="0x05" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Scaling entire KV of VCO.</SUMMARY>
      <DESCRIPTION>Scaling on VCO KV for all parameters.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="kvcal" lsb="0" size="4">
          <DESCRIPTION>Sets the scaling on the VCO ladder</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Max voltage settings</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>Min voltage settings</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="15" />
        </FIELD>
        <FIELD name="ladr_select" lsb="4" size="1">
          <DESCRIPTION>Enable VCO ladder.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable VCO ladder</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable VCO ladder</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MOD_TYPE" value="8192" default="0x02" feature="pro2" dev="1" wip="0">
      <SUMMARY>Modulation Type</SUMMARY>
      <DESCRIPTION>This property selects between OOK, FSK, 4FSK and GFSK modulation, modulation source, and tx direct mode control.</DESCRIPTION>
      <DESCRIPTION>The modulator must be configured for one mode through the entire packet.  If portions of the packet alternate between FSK and 4FSK modes, the modem should be programmed to 4FSK mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="MOD_TYPE" lsb="0" size="3">
          <ENUMERATION value="0" name="CW">
            <DESCRIPTION>CW</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="OOK">
            <DESCRIPTION>OOK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="2FSK">
            <DESCRIPTION>2FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="2GFSK">
            <DESCRIPTION>2GFSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="4FSK">
            <DESCRIPTION>4FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="4GFSK">
            <DESCRIPTION>4GFSK</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MOD_SOURCE" lsb="3" size="2">
          <ENUMERATION value="0" name="PACKET">
            <DESCRIPTION>Modulation source is packet handler fifo</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIRECT">
            <DESCRIPTION>Modulation source is direct mode pin</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="PSEUDO">
            <DESCRIPTION>Modulation source is pseudo-random generator</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_GPIO" lsb="5" size="2">
          <DESCRIPTION>
            Selects which GPIO will be used as the TX data source if MOD_SOURCE = DIRECT.  The gpio selected here must be configured (using <REFERENCE>GPIO_PIN_CFG</REFERENCE>) as a CMOS input.
          </DESCRIPTION>
          <ENUMERATION value="0" name="GPIO0">
            <DESCRIPTION>TX direct mode uses gpio0 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="GPIO1">
            <DESCRIPTION>TX direct mode uses gpio1 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="GPIO2">
            <DESCRIPTION>TX direct mode uses gpio2 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GPIO3">
            <DESCRIPTION>TX direct mode uses gpio3 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_TYPE" lsb="7" size="1">
          <ENUMERATION value="0" name="SYNC">
            <DESCRIPTION>Direct mode operates in synchronous mode, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ASYNC">
            <DESCRIPTION>Direct mode operates in asynchronous mode, applies to TX only.  GFSK is not supported.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MAP_CONTROL" value="8193" default="0x80" feature="pro2" dev="1" wip="0">
      <SUMMARY>Controls bit mapping.</SUMMARY>
      <DESCRIPTION>Modem Mapping Control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="eninv_adcq" internal="1" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert ADC Q channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert ADC Q channel.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="eninv_fd" lsb="4" size="1">
          <DESCRIPTION>If set, frequency deviation's priority  from negative to positive.</DESCRIPTION>
        </FIELD>
        <FIELD name="eninv_txbit" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert TX data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert TX data bits.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="eninv_rxbit" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert RX data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert RX data bits.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enmanch" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Disable Manchester coding.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable Manchester coding.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DSM_CTRL" value="8194" default="0x07" feature="pro2" dev="1" wip="0">
      <SUMMARY>DSM control</SUMMARY>
      <DESCRIPTION>Delta Sigma Modulator control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dsm_order" lsb="0" size="2">
          <DESCRIPTION>DSM Mode</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>0 order, with 0 output continuously.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>1st order, on noise shaping.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>2nd order, MASH 1-1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>3rd order, MASH 1-1-1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsm_lsb" lsb="2" size="1">
          <DESCRIPTION>If set, DSM LSB input will be high all times.</DESCRIPTION>
        </FIELD>
        <FIELD name="dsm_rst" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>DSM reset is not active.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM will be in reset state until it is clear.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmdttp" lsb="4" size="1">
          <DESCRIPTION>Dithering type</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>+1/0 is added to DSM input LSB.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>+1/-1 is added to DSM input LSB.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmdt_en" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>DSM dithering is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM dithering is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsm_mode" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>MASH 1-1-1 DSM will be selected.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>A single loop DSM will be selected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmclk_sel" lsb="7" size="1">
          <DESCRIPTION>DSM clock source selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>DSM clock comes from 30MHz PLL feedback clock.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM clock comes from 30MHz crystal clock.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_2" value="8195" default="0x0F" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_23_16" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_1" value="8196" default="0x42" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_0" value="8197" default="0x40" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_3" value="8198" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 3 of TX NCOs modulo and TX filter oversampling ratio.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_25_24" lsb="0" size="2">
          <RANGE min="0" max="3" />
        </FIELD>
        <FIELD name="txosr" lsb="2" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>TX filter's output oversampling ratio is 10. GFSK Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>TX filter's output oversampling ratio is 40. GFSP Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>TX filter's output oversampling ratio is 20. GFSP Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Reserved</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_2" value="8199" default="0xC9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_23_16" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_1" value="8200" default="0xC3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_0" value="8201" default="0x80" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50kbps, it should be set to 0x1C9C380.  Otherwise it will be 0x2DC6C0</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_2" value="8202" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of TX frequency deviation (a 17-bit unsigned number).  This only programs the MSB of TX frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_16" lsb="0" size="1">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_1" value="8203" default="0x06" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_0" value="8204" default="0xD3" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of frequency deviation.</SUMMARY>
      <DESCRIPTION>Frequency deviation, unsigned 17-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_OFFSET_1" value="8205" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of frequency offset adjustment(a 16-bit signed number).</SUMMARY>
      <DESCRIPTION>In TX mode, frequency offset is used to provide an offset to  the programmed TX frequency. This allows fine tuning of the TX frequency  to account for the variability of the TX reference frequency.</DESCRIPTION>
      <DESCRIPTION>In RX mode, only when AFC is disabled, the frequency offset can be  adjusted manually by this property.</DESCRIPTION>
      <DESCRIPTION>Frequency offset adjustment is a signed 16-bit.  The range is from -400kHz to +400kHz.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqoffset_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_OFFSET_0" value="8206" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of frequency offset(a 16-bit signed number).</SUMMARY>
      <DESCRIPTION>In TX mode, frequency offset is used to provide an offset to  the programmed TX frequency. This allows fine tuning of the TX frequency  to account for the variability of the TX reference frequency.</DESCRIPTION>
      <DESCRIPTION>In RX mode, only when AFC is disabled, the frequency offset can be  adjusted manually by this property.</DESCRIPTION>
      <DESCRIPTION>Frequency offset adjustment is a signed 16-bit.  The range is from -400kHz to +400kHz.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqoffset_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_8" value="8207" default="0x67" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 8th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 8th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_7" value="8208" default="0x60" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 7th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 7th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe7" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_6" value="8209" default="0x4D" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 6th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 6th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe6" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_5" value="8210" default="0x36" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 5th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 5th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe5" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_4" value="8211" default="0x21" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 4th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 4th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe4" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_3" value="8212" default="0x11" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 3rd coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 3rd coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe3" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_2" value="8213" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 2nd coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 2nd coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe2" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_1" value="8214" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 1st coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 1st coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe1" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_0" value="8215" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The 0th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The 0th coefficient of TX shaping filter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_RAMP_DELAY" value="8216" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>TX filter ramp delay setting.</SUMMARY>
      <DESCRIPTION>Unit in TX bit cycle, it is calculated according to modulation type.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ramp_dly" lsb="0" size="3">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MDM_CTRL" value="8217" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>MDM control</SUMMARY>
      <DESCRIPTION>Detector selection and PM pattern configuration.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ph_src_sel" lsb="7" size="1">
          <DESCRIPTION>BCR/Slicer phase source selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Input from phase computer output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Input from detector's output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_CONTROL" value="8218" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Fixed or scalable IF.</SUMMARY>
      <DESCRIPTION>Specifies fixed-IF(468.75kHz), zero-IF, or scalable IF.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="fixif" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>scaled-IF mode</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>fixed-IF mode, if_freq should be set to 468.75kHz</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="zeroif" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>normal mode</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>zero-IF mode, if_freq should be set to 0</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_2" value="8219" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of IF frequency setting.</SUMMARY>
      <DESCRIPTION>Bits 16 an 17 of the 18-bit IF frequency. Specify fixed-IF(468.75kHz), zero-IF, or scalable IF.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_17_16" lsb="0" size="2">
          <DESCRIPTION>Bits 16 an 17 of the 18-bit IF frequency.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_1" value="8220" default="0xC0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of IF frequency setting</SUMMARY>
      <DESCRIPTION>IF frequency is 18-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_0" value="8221" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of IF frequency setting</SUMMARY>
      <DESCRIPTION>IF frequency is 18-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DECIMATION_CFG1" value="8222" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the three CIC filter decimator ratios.</SUMMARY>
      <DESCRIPTION>Specifies the exponent of decimation ratios of the three CIC decimators in RX filter chain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ndec0" lsb="1" size="3">
          <DESCRIPTION>OOK modem CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec0.</DESCRIPTION>
          <DESCRIPTION>ndec0 should be set to 0 for non-OOK modem.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>decimating by 16</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>decimating by 32</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>decimating by 64</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>decimating by 128</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ndec1" lsb="4" size="2">
          <DESCRIPTION>First stage CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec1.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ndec2" lsb="6" size="2">
          <DESCRIPTION>Second stage CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec2.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DECIMATION_CFG0" value="8223" default="0x20" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies miscellaneous decimator filter selections.</SUMMARY>
      <DESCRIPTION>This property specifies the selection of the two polyphase filters preceding CIC filters,  the droop compensation filter, the RX decimate by 8 2x filter and the channel filter power mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxgainx2" lsb="0" size="1">
          <DESCRIPTION>Double filter's gain for decimating by 8.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>double filter's gain for decimating by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dwn2byp" lsb="4" size="1">
          <DESCRIPTION>Controls decimation by 2 filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass decimate-by-2 polyphase filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dwn3byp" lsb="5" size="1">
          <DESCRIPTION>Controls decimation by 3 filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass decimate-by-3 polyphase filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="droopfltbyp" lsb="6" size="1">
          <DESCRIPTION>Controls droop compensation filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass droop compensation filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="chflt_lopw" lsb="7" size="1">
          <DESCRIPTION>Controls channel filter power mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Channel filter operates in low power mode,  i.e., the number of taps is reduced from 27 to 15.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_20" value="8224" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_21" value="8225" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_OSR_1" value="8226" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of RX symbol oversampling rate at BCR/Slicer (12-bit unsigned number).</SUMMARY>
      <DESCRIPTION>High byte of RX symbol oversampling rate at BCR/Slicer (12-bit unsigned number).</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxosr_11_8" lsb="0" size="4">
          <DESCRIPTION>High byte of RX symbol oversampling rate at BCR/Slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_OSR_0" value="8227" default="0x4B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of RX symbol oversampling rate at BCR/Slicer.</SUMMARY>
      <DESCRIPTION>Low byte of RX symbol oversampling rate at BCR/Slicer, total 12 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxosr_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of RX symbol oversampling rate at BCR/Slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_2" value="8228" default="0x06" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 2 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Specifies the 6 MSBs of the BCR NCO offset.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_21_16" lsb="0" size="6">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_1" value="8229" default="0xD3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_0" value="8230" default="0xA0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Low byte of RX NCO offset.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GAIN_1" value="8231" default="0x06" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of RX BCR loop gain (an unsigned 11-bit number).</SUMMARY>
      <DESCRIPTION>High byte of clock recovery timing loop gain, total 11 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crgain_10_8" lsb="0" size="3">
          <DESCRIPTION>High byte of clock recovery timing loop gain.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GAIN_0" value="8232" default="0xD3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of RX BCR loop gain.</SUMMARY>
      <DESCRIPTION>Low byte of clock recovery timing loop gain, total 11 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crgain_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GEAR" value="8233" default="0x02" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX BCR loop gear control.</SUMMARY>
      <DESCRIPTION>RX BCR loop gear control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="crslow" lsb="0" size="3">
          <DESCRIPTION>The slow gear applies after preamble is detected.  The effective BCR loop gain of: crgain/(2^crslow) will be applied in clock recovery  timing loop.</DESCRIPTION>
        </FIELD>
        <FIELD name="crfast" lsb="3" size="3">
          <DESCRIPTION>The fast gear applies before preamble is detected.  The effective BCR loop gain of: crgain/(2^crfast) will be applied in clock recovery  timing loop.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_MISC1" value="8234" default="0xC0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>: Byte 1 of RX BCR loop misc control.</SUMMARY>
      <DESCRIPTION>specifies the RX BCR loop misc controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="bcrfbbyp" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR feedback phase compensation is bypassed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="slicefbbyp" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Slicer feedback phase compensation is bypassed</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rxncocomp" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR NCO compensation is enabled when data rate error is greater than 1%.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Rxcomp_lat" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>BCR NCO compensation is sampled by end of preamble</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR NCO compensation is sampled by preamble detection</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Crgainx2" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR loop gain is doubled</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Dis_midpt" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR midpoint phase correction is disabled; this bit shall be  set if preamble is in '1010' patterns.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Esc_midpt" lsb="0" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>When BCR mid-point phase is detected, NCO will stop running  for one sample clock to escape BCR mid-point phase sample.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>When BCR mid-point phase is detected, current phase error is  added to NCO to escape BCR mid-point phase sample.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_MISC0" value="8235" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of RX BCR loop misc control.</SUMMARY>
      <DESCRIPTION>Specifies the RX BCR loop misc controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="adcwatch" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC watch dog is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC watch dog is enabled. If the invalid preamble is detected and  no 1010 pattern is detected, ADC reset will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="adcrst" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC watch dog is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable ADC reset from AGC loop.  If IF-PD's current and previous high threshold exceed,  ADC reset will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="distogg" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enabled. If the phase differential output is zero,  the discriminator output will be toggling.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ph0size" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>5 consecutive zeros of phase differential output will cause RX machine reset.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>3 consecutive zeros of phase differential output will cause RX machine reset.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GEAR" value="8236" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX AFC loop gear control.</SUMMARY>
      <DESCRIPTION>RX AFC loop gear control.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afc_slow" lsb="0" size="3">
          <DESCRIPTION>AFC Low Gear setting.</DESCRIPTION>
          <DESCRIPTION>It will be applied to AFC gain control after the preamble is detected.</DESCRIPTION>
        </FIELD>
        <FIELD name="afc_fast" lsb="3" size="3">
          <DESCRIPTION>AFC High Gear setting.</DESCRIPTION>
          <DESCRIPTION>It will be applied to AFC gain control before the preamble is detected.</DESCRIPTION>
        </FIELD>
        <FIELD name="gear_sw" lsb="6" size="2">
          <DESCRIPTION>AFC gear swith control source.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Preamble detection</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Sync word detection</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Estimated frequency error of Mean detector is consecutively  less than the half eye-threshold. NOTE: This consecutive number is defined in register sch_frzth.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Preamble detection</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_WAIT" value="8237" default="0x23" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>RX AFC loop wait time control.</SUMMARY>
      <DESCRIPTION>Short and long wait periods after AFC correction.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="lgwait" lsb="0" size="4">
          <DESCRIPTION>This specifies the long wait period per AFC correction cycle after preamble is detected.  When set to '0' then AFC is disabled.</DESCRIPTION>
        </FIELD>
        <FIELD name="shwait" lsb="4" size="4">
          <DESCRIPTION>This specifies the short wait period per AFC correction cycle before preamble is detected. Effective wait time is (shwait+1)*2Tb.  When set to '0' then AFC is disabled.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GAIN_1" value="8238" default="0x83" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of AFC loop gain</SUMMARY>
      <DESCRIPTION>High byte of AFC loop gain, total 13 bits</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="afcgain_12_8" lsb="0" size="5">
          <DESCRIPTION>High byte of AFC loop gain.</DESCRIPTION>
        </FIELD>
        <FIELD name="afcbd" lsb="6" size="1">
          <SUMMARY>Select CH filter coefficients.</SUMMARY>
          <DESCRIPTION>If set, CH filter coefficients will be switched to the second CH filter coefficients (rx2coe0~13) from the first CH filter coefficients (rx1coe0~13) after the preamble is detected.  If clear, CH  filter will use the first CH filter coefficients (rx1coe0~13) for the entire RX.</DESCRIPTION>
        </FIELD>
        <FIELD name="enafc" lsb="7" size="1">
          <DESCRIPTION>Enable frequency estimator.</DESCRIPTION>
          <DESCRIPTION>If set, estimated frequency error will be available to feedback to  frac-N, BCR and slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GAIN_0" value="8239" default="0x69" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of AFC loop gain</SUMMARY>
      <DESCRIPTION>Low byte of AFC loop gain, total 13 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afcgain_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of AFC loop gain.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_LIMITER_1" value="8240" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Freeze AFC and set high byte of AFC limiter.</SUMMARY>
      <DESCRIPTION>Freeze AFC and set high byte of AFC limiter.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afclim_14_8" lsb="0" size="7">
          <DESCRIPTION>High byte of AFC limiter, total 15 bits</DESCRIPTION>
          <DESCRIPTION>If the MSB of AFC limiter is set, internal limiter value is afclim * 8.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_LIMITER_0" value="8241" default="0x40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of AFC limiter.</SUMMARY>
      <DESCRIPTION>Low byte of AFC limiter. Total 15 bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="afclim_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_MISC" value="8242" default="0xA0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies misc AFC control bits.</SUMMARY>
      <DESCRIPTION>Specifies misc AFC control bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="enafcfrz" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>AFC will operate over the entire packet.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will be frozen after the gear switching.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enfbpll" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable AFC correction value to feedback to PLL.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="en2Tb_est" lsb="5" size="1">
          <DESCRIPTION>This bit must be set for standard packet mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>AFC will use MA or Mean detector frequency estimator's output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will use 2Tb frequency estimator's output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enfzpmend" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will be frozen at end of '10101' pattern preamble.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enafc_clksw" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>2Tb frequency estimator's clock will be  switched from free-running bit clock to BCR's bit clock  after the preamble is detected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ook_zerog" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>FSK LO modulation will be enabled in ook zero-IF mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>GFSK LO modulation will be enabled in ook zero-IF mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="non_frzen" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>AFC frozen will be disabled while Mean detector found longer consecutive ones or zeros than search period.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC frozen will be enabled while Mean detector found longer consecutive ones or zeros than search period .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_ZIFOFF" value="8243" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>AFC fixed frequency offset in zero IF mode.</SUMMARY>
      <DESCRIPTION>AFC fixed frequency offset in zero IF mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="zeroff" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ADC_CTRL" value="8244" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sigma Deta ADC controlling.</SUMMARY>
      <DESCRIPTION>ADC complex or real mode selection</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="realadc" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC complex mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC real mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="en_drst" lsb="3" size="1">
          <ENUMERATION value="1">
            <DESCRIPTION>Enable direct reset by modem.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="hgain" lsb="4" size="1">
          <ENUMERATION value="1">
            <DESCRIPTION>Adds 12dB gain to ADC input for IR calibration.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_CONTROL" value="8245" default="0xE0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>AGC control</SUMMARY>
      <DESCRIPTION>AGC control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rst_pkdt_period" lsb="0" size="1">
          <DESCRIPTION>Reset peak detector periodically.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Reset only when the digital received a '1' from  the synchronized peak detector output</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC will reset the peak detector periodically.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="adc_gain_cor_en" lsb="1" size="1">
          <DESCRIPTION>Sets ADC input gain when minimal AGC gain is detected.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>ADC input gain correction is disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC input gain is lowered by 6dB</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="agc_slow" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC speed will is reduced by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sgi_n" lsb="4" size="1">
          <DESCRIPTION>AGC stop increasing gain override bit.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>AGC gain increases during signal reductions are prevented.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC gain increases during signal reductions are allowed.  Only effective during preamble, prior to detection of PREAMBLE_VALID  signal in ANT-DIV mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rfpdslow" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>RFPG loop will slow down the gain decrease in -6dB step.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RFPG loop will slow down the gain decrease in -3dB step.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ifpdslow" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>IFPG loop will slow down the gain decrease in -6dB step.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>IFPG loop will slow down the gain decrease in -3dB step.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="agcovpkt" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The full AGC operates only during Preamble,  gain increases over remainder of packet are not allowed.  Gain reductions in the event of signal level increases are always allowed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC function operates over the entire packet.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_36" value="8246" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_37" value="8247" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_WINDOW_SIZE" value="8248" default="0x11" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the AGC measurement and settling window size.</SUMMARY>
      <DESCRIPTION>Sets PGA and LNA settling time window and measurement time window.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="settlewin" lsb="0" size="4">
          <DESCRIPTION>Settling window size, effective settling time is settlewin/Fs_rx period)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
        <FIELD name="measwin" lsb="4" size="4">
          <DESCRIPTION>Measurement window size, effective measurement time  is measwin/Fs_rx period)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_RFPD_DECAY" value="8249" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Sets RF detector decay time.</SUMMARY>
      <DESCRIPTION>Sets RF detector decay time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rfpd_decay" lsb="0" size="8">
          <DESCRIPTION>Effective decay time is rfpdcay/Fs_rx)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_IFPD_DECAY" value="8250" default="0x10" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Sets IF detector decay time.</SUMMARY>
      <DESCRIPTION>Sets IF detector decay time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ifpd_decay" lsb="0" size="8">
          <DESCRIPTION>Effective decay time is ifpdcay/Fs_rx)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_GAIN1" value="8251" default="0x0B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the gain factor of the secondary branch in 4(G)FSK ISI-suppression.</SUMMARY>
      <DESCRIPTION>Controls 4(G)FSK suppression gain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fsk_isis_disable" lsb="7" size="1">
          <DESCRIPTION>Second phase compensation factor for 4(G)FSK.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Disable 4(G)FSK ISI-suppression.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4fsk_gain1" lsb="0" size="7">
          <DESCRIPTION>Gain factor of the secondary branch in 4(G)FSK ISI-suppression.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_GAIN0" value="8252" default="0x1C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Specifies the gain factor of the primary branch in 4(G)FSK ISI-suppression.</SUMMARY>
      <DESCRIPTION>Controls 4(G)FSK suppression gain.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fsk_gain0" lsb="0" size="7">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_TH1" value="8253" default="0x40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>High byte of 4(G)FSK slicer threshold.</SUMMARY>
      <DESCRIPTION>High byte of 4(G)FSK slicer threshold.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskth_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_TH0" value="8254" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of 4(G)FSK slicer threshold.</SUMMARY>
      <DESCRIPTION>Low byte of 4(G)FSK slicer threshold.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskth_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_MAP" value="8255" default="0xB4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>4(G)FSK symbol mapping code.</SUMMARY>
      <DESCRIPTION>4(G)FSK symbol mapping code.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskmap" lsb="0" size="8">
          <ENUMERATION value="180">
            <DESCRIPTION>Graycoding</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="228">
            <DESCRIPTION>Graycoding is bypass - normal binary mapping is used.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_PDTC" value="8256" default="0x2B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK Peak Detector Time Control.</SUMMARY>
      <DESCRIPTION>OOK peak detector decay and attack time.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="decay" lsb="0" size="4">
          <DESCRIPTION>OOK peak detector decay time.</DESCRIPTION>
          <DESCRIPTION>Peak detector value discharges at rate  proportional to 2^(-decay).</DESCRIPTION>
        </FIELD>
        <FIELD name="attack" lsb="4" size="3">
          <DESCRIPTION>OOK peak detector attack time.</DESCRIPTION>
          <DESCRIPTION>Peak detector value charges up at rate  proportional to 2^(-attack).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_BLOPK" value="8257" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK control</SUMMARY>
      <DESCRIPTION>Defined how many dB below PK.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="bw_pk" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_CNT1" value="8258" default="0xA4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>OOK control</SUMMARY>
      <DESCRIPTION>OOK control</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="squelch" lsb="0" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>Squelch function is off.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>When no signal is received, there is  no toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>When PM is not detected, there is no  toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>When no signal or PM is not detected,  there is no toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="slicer_fast" lsb="2" size="1">
          <DESCRIPTION>This bit effects 2(G)FSK/OOK mode only.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Discriminator's slicer output is  de-glitched by bit clock.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Discriminator's slicer output is  de-glitched by sample clock to reduce  turn-around time.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="raw_syn" lsb="3" size="1">
          <DESCRIPTION>If set, raw data output is synchronized to bit clock.</DESCRIPTION>
        </FIELD>
        <FIELD name="ma_freqdwn" lsb="4" size="1">
          <DESCRIPTION>If set, estimated frequency from MA detector  will be trunked 4 bits to avoid overflow.</DESCRIPTION>
          <DESCRIPTION>AFC gain should be increased 16 times if this  bit is set.</DESCRIPTION>
          <DESCRIPTION>It is recommended to set this bit for  Rb smaller than 1kbps and/or hModInd greater than 50  if MA detector's frequency error estimator is  selected.</DESCRIPTION>
        </FIELD>
        <FIELD name="ookfrzen" lsb="5" size="1">
          <DESCRIPTION>This bit only has an effect after preamble is detected.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC and OOK moving average detector's  threshold output will be frozen after the preamble is detected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="s2p_map" lsb="6" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>S2p_mapping 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>S2p_mapping 1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>S2p_mapping 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>S2p_mapping 3</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_MISC" value="8259" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Control OOK Peak Detector.</SUMMARY>
      <DESCRIPTION>Control OOK Peak Detector.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="ookfastma" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Deploy longer MA filter window</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="detector" lsb="0" size="2">
          <DESCRIPTION>Controls the data detector.</DESCRIPTION>
          <ENUMERATION value="0" name="ma_pk">
            <DESCRIPTION>In OOK modem only, both MA detector  and peak detector will be selected and two  detector's outputs were AND'd together for the final result.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="pk">
            <DESCRIPTION>Peak detector will be selected for OOK  modem or Raw data mode. When OOK peak detector is enabled,  then the attack and decay rates of how the  peak level is charged up or discharged down  is programmable. The larger the value in these  fields, the slower the attack and decay  times.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="ma">
            <DESCRIPTION>MA detector will be selected for OOK  modem or Raw data mode.</DESCRIPTION>
            <DESCRIPTION>When the Moving Average Detector is  enabled, then the slicing threshold is  developed from the average of the previous  data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="mean">
            <DESCRIPTION>Max-Min detector will be selected for  Raw data mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_SEARCH" value="8260" default="0x56" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Defines search period control for raw / nonstandard mode.</SUMMARY>
      <DESCRIPTION>Searching period for high and low gear.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="schprd_low" lsb="0" size="2">
          <DESCRIPTION>Searching period of MA or Mean inside the  detector during low gear.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Tb * 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Tb * 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Tb * 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Tb * 16</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="schprd_hi" lsb="2" size="2">
          <DESCRIPTION>Searching period of MA or Mean inside the  detector during high gear.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Tb * 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Tb * 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Tb * 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Tb * 16</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sch_frzth" lsb="4" size="3">
          <DESCRIPTION>Mean search frozen threshold.</DESCRIPTION>
        </FIELD>
        <FIELD name="sch_frzen" lsb="7" size="1">
          <DESCRIPTION>Freeze MA or Mean searching engine once switch to low gear.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_CONTROL" value="8261" default="0x02" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Defines gain and enable controls for raw / nonstandard mode.</SUMMARY>
      <DESCRIPTION>Defines gain and enable controls for raw / nonstandard mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="unstdpk" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>MA or mean frequency error estimator.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="conschk_byp" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>If unstdpk is '1', and conschk_byp= '0', the  consecutive '1' or '0' of payload data during 'Sch_Period' will stop the mean  value being updated.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="pm_pattern" lsb="2" size="2">
          <DESCRIPTION>PM pattern configuration.  The preamble detection is done inside modem.</DESCRIPTION>
          <ENUMERATION value="0" name="1010">
            <DESCRIPTION>If preamble has '1010' pattern, modem  is recommended to work on standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="consecutive_one">
            <DESCRIPTION>If preamble has more than 32-bit  consecutive '1' pattern, modem is recommended  to work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="consecutive_zero">
            <DESCRIPTION>If preamble has more than 32-bit  consecutive '0' pattern, modem is recommended  work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="random">
            <DESCRIPTION>If preamble is random data, modem is  recommended to work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rawgain" lsb="0" size="2">
          <DESCRIPTION>Raw data MA filter gain.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Gain = 8</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Gain = 4</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Gain = 2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Gain = 1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_EYE_1" value="8262" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</SUMMARY>
      <DESCRIPTION>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="raweye_10_8" lsb="0" size="3">
          <DESCRIPTION>The three MSB of eye-open detector threshold, it is a nusigned 11-bit.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_EYE_0" value="8263" default="0xA3" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low byte of eye-open detector threshold.</SUMMARY>
      <DESCRIPTION>Eye-open detector threshold is a unsigned 11-bit.  The reset of bits are set by property RAW_EYE_1</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="raweye_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ANT_DIV_MODE" value="8264" default="0x12" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Antenna mode setting</SUMMARY>
      <DESCRIPTION>Antenna mode seting</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="anwait" lsb="0" size="3">
          <DESCRIPTION>The period between toggling selection of antennas. During the initial search for a  valid packet (i.e., the search for the first PREAMBLE_VALID signal), a timer is  maintained to determine when to periodically toggle between antennas.  This default  value of this timeout period is 16 bit periods, but is configurable by anwait. The periods between toggling of antennas = ( anwait + 2 ) * 4 bit.</DESCRIPTION>
        </FIELD>
        <FIELD name="skip2phth" lsb="3" size="1">
          <DESCRIPTION>The threshold of skipping second phase PM detection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>16dB threshold is set for skipping second phase PM detection.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>11dB threshold is set for skipping second phase PM detection.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="skip2ph" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The antenna diversity algorithm always measures  the RSSI value on the alternate antenna, regardless of signal strength on the  initial antenna.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>the current RSSI value on the first antenna which observes  a PREAMBLE_VALID signal is greater than the value (determined by  bit 'skip2phth')  above the previous RSSI value from the alternate  antenna, the signal is deemed sufficiently strong; there is no need  to switch to and evaluate the second antenna.  If the difference in  RSSI value is less than the value (determined by bit 'skip2phth'), the  algorithm proceeds with evaluation of the signal strength on the alternate  antenna, as normal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="byp1p5" lsb="5" size="1">
          <DESCRIPTION>Bias of the second phase antenna selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>0dB</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>1.5dB</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="swant_timer" lsb="6" size="2">
          <DESCRIPTION>Additional number of bit periods to wait for RSSI value to  stabilize during Antenna Diversity 2nd phase antenna evaluation. ].  Effective only during Antenna Diversity.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Swant_time_0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Swant_time_1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Swant_time_2</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Swant_time_3</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ANT_DIV_CONTROL" value="8265" default="0x80" feature="pro2" dev="1" wip="0">
      <SUMMARY>Specifies antenna diversity controls.  Antenna diversity mode is valid for standard packet only.</SUMMARY>
      <DESCRIPTION>Specifies pm detection threshold and GPIO config in antenna diversity mode.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="antdiv" lsb="0" size="3">
          <DESCRIPTION>The GPIO must be configured for antenna diversity  for the algorithm to work properly.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=1, GPIO Ant2=0: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=0, GPIO Ant2=1: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=1, GPIO Ant2=0: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=0, GPIO Ant2=1: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm in beacon mode: Non-RX/TX State GPIO Ant1=0, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm in beacon mode: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="matap" lsb="3" size="1">
          <DESCRIPTION>Number of taps for moving average filter during Antenna Diversity RSSI evaluation. Allows for reduced noise variation on measured RSSI value but with slower update rate.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Filter tap length is 8*Tb prior to first PREAMBLE_VALID, and 4*Tb thereafter.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Filter tap length is 8*Tb.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ant2pm_thd" lsb="4" size="4">
          <DESCRIPTION>The second phase preamble detection threshold in ANT-DIV mode. Default is set to 8 bits threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_THRESH" value="8266" default="0xFF" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI threshold control</SUMMARY>
      <DESCRIPTION>Selects threshold for clear channel assessment.  If RSSI value is above this threshold, the CCA GPIO  will be high.  If the RSSI value crosses above this threshold and the RSSI interrupt will be generated.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_JUMP_THRESH" value="8267" default="0x0C" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI jumping detection threshold.</SUMMARY>
      <DESCRIPTION>RSSI jumping detection threshold, step in 1dB.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rssijmpthd" lsb="0" size="7">
          <DESCRIPTION>RSSI jumping detection threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_CONTROL" value="8268" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI control</SUMMARY>
      <DESCRIPTION>
        Selects where in the packet to latch the RSSI value in the RSSI Latch fast response register.  The latched value can also be read using <REFERENCE>GET_MODEM_STATUS</REFERENCE> command.
      </DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="LATCH" lsb="0" size="3">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Latch disabled, will always read 0</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="PREAMBLE">
            <DESCRIPTION>Latches at preamble detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="SYNC">
            <DESCRIPTION>Latches at sync detect</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="RX_STATE1">
            <DESCRIPTION>Latches RSSI 8Tb  after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="RX_STATE2">
            <DESCRIPTION>Latches RSSI 16Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="RX_STATE3">
            <DESCRIPTION>Latches RSSI 24Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="RX_STATE4">
            <DESCRIPTION>Latches RSSI 32Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="RX_STATE5">
            <DESCRIPTION>Latches RSSI 40Tb after RX is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="AVERAGE" lsb="4" size="1">
          <ENUMERATION value="0" name="AVERAGE1">
            <DESCRIPTION>RSSI updated every bit.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="AVERAGE4">
            <DESCRIPTION>RSSI averaged over 4 bits</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_CONTROL2" value="8269" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI control</SUMMARY>
      <DESCRIPTION>
        Enable RSSI jumping detection.  Used to detect an RSSI jump as configured by <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>  while receiving a packet.  Can be useful to detect interferring or secondary incoming packet.
      </DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="enjmprx" lsb="1" size="1">
          <DESCRIPTION>If set, RSSI jumping detection will force  RX machine to reset.</DESCRIPTION>
        </FIELD>
        <FIELD name="jmpdlylen" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>RSSI jumping detection is running  with 2Tb</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RSSI jumping detection is running  with 4Tb</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enrssijmp" lsb="3" size="1">
          <DESCRIPTION>Enable RSSI jumping detection.</DESCRIPTION>
          <DESCRIPTION>Once RSSI difference between 2Tb or 4Tb  is above the RSSI jumping threshold, and interrupt  will be generated.</DESCRIPTION>
        </FIELD>
        <FIELD name="rssijmp_up" lsb="4" size="1">
          <DESCRIPTION>If set, enable RSSI jumping-up detection.</DESCRIPTION>
        </FIELD>
        <FIELD name="rssijmp_dwn" lsb="5" size="1">
          <DESCRIPTION>If set, enable RSSI jumping-down detection.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_COMP" value="8270" default="0x32" feature="pro2" dev="1" wip="0">
      <SUMMARY>RSSI reading offset.</SUMMARY>
      <DESCRIPTION>Offsets RSSI curve in 1dB steps.  32 is no offset, lower will adjust RSSI down, and higher will adjust RSSI up.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rssi_comp" lsb="0" size="7">
          <DESCRIPTION>RSSI reading offset.</DESCRIPTION>
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DC_CONTROL" value="8271" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Modem DC cancellation controls.</SUMMARY>
      <DESCRIPTION>Modem DC cancellation controls.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="dc_gear" lsb="0" size="3">
          <DESCRIPTION>the forgetting factor in the integrator inside DC cancellation. Decimating rate is 2^ndec0. ndec0 should be set to 0 for non-OOK modem. Effective forgetting factor is 2^(-9+dc_gear)</DESCRIPTION>
        </FIELD>
        <FIELD name="dc_freez" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>freeze estimated DC value to the current filter output.   If both dc-rst and dc-frz are set, the digital DC cancellation filter is skipped.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dc_rst" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Reset DC value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dc_follow" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DC Following is turned on. In this mode,  when a valid sync word is detected, the current DC offset is saved,  this value is then used as the initial DC offset for next RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_50" value="8272" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>tbd</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="CLKGEN_BAND" value="8273" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Clock generator band</SUMMARY>
      <DESCRIPTION>Clock generator band</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="Band" lsb="0" size="3">
          <ENUMERATION value="0">
            <DESCRIPTION>Output is FVCO/4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Output is FVCO/6.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Output is FVCO/8.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Output is FVCO/12.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>Output is FVCO/16.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sy_sel" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal mode, 200uA less current than High Performance mode. Set by modem calculator. Requires different freq_inte and freq_frac settings than High Performance mode. FBDIV=fVCO/4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>High Performance.  FBDIV=fVCO/2.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_52" value="8274" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE></TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="PLL_SETTLE_TIME" value="8275" default="40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>PLL settle time</SUMMARY>
      <DESCRIPTION>PLL settle time in us</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="pll_settle" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE13_7_0" value="8448" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 13th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE12_7_0" value="8449" default="0xBA" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 12th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE11_7_0" value="8450" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 11th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE10_7_0" value="8451" default="0x51" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 10th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE9_7_0" value="8452" default="0xCF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 9th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE8_7_0" value="8453" default="0xA9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 8th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE7_7_0" value="8454" default="0xC9" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 7th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE6_7_0" value="8455" default="0xFC" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 6th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE5_7_0" value="8456" default="0x1B" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 5th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE4_7_0" value="8457" default="0x1E" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 4th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE3_7_0" value="8458" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 3rd filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE2_7_0" value="8459" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 2nd filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE1_7_0" value="8460" default="0xFC" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 1st filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE0_7_0" value="8461" default="0xFD" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 0th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX1_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM0" value="8462" default="0x15" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 13th ~ 10th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe13_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 13th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe12_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 12th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe11_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 11th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe10_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 10th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM1" value="8463" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 9th ~ 6th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe9_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 9th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe8_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 8th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe7_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 7th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe6_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 6th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM2" value="8464" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 5th ~ 2th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe5_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 5th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe4_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 4th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe3_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 3rd CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe2_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 2nd CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM3" value="8465" default="0x0F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 1st ~ 0th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe1_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 1st CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe0_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 0th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE13_7_0" value="8466" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 13th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE12_7_0" value="8467" default="0xC4" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 12th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE11_7_0" value="8468" default="0x30" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 11th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE10_7_0" value="8469" default="0x7F" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 10th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE9_7_0" value="8470" default="0xF5" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 9th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE8_7_0" value="8471" default="0xB5" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 8th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE7_7_0" value="8472" default="0xB8" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 7th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE6_7_0" value="8473" default="0xDE" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 6th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE5_7_0" value="8474" default="0x05" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 5th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE4_7_0" value="8475" default="0x17" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 4th filter coefficient for the first set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE3_7_0" value="8476" default="0x16" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 3rd filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE2_7_0" value="8477" default="0x0C" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 2nd filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE1_7_0" value="8478" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 1st filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE0_7_0" value="8479" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Low 8-bit of the 0th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit,  the rest of bits are set by other property RX2_CHFLT_COEM.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM0" value="8480" default="0x15" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 13th ~ 10th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe13_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 13th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe12_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 12th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe11_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 11th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe10_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 10th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM1" value="8481" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 9th ~ 6th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe9_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 9th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe8_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 8th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe7_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 7th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe6_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 6th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM2" value="8482" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 5th ~ 2th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe5_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 5th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe4_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 4th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe3_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 3rd CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe2_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 2nd CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM3" value="8483" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>The two MSB of 1st ~ 0th filter coefficient for the second set of CH filte coefficient.</SUMMARY>
      <DESCRIPTION>Each CH filter coefficient is 10-bit.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe1_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 1st CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe0_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 0th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_1" value="12288" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 1 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_1" value="12289" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 1 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_1" value="12290" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Pacekt match enable and match 1 configuration.</SUMMARY>
      <DESCRIPTION>Enable packet match processing and pattern 1 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MATCH_EN" lsb="6" size="1">
          <DESCRIPTION>Note: This bit is quite different from other pattern match controlling.</DESCRIPTION>
          <ENUMERATION value="1" name="MATCH_ENABLE">
            <DESCRIPTION>Enable packet match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 1 offset.</SUMMARY>
          <DESCRIPTION>Pattern match 1 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_2" value="12291" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_2" value="12292" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_2" value="12293" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 2 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 2 offset.</SUMMARY>
          <DESCRIPTION>Match 2 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_3" value="12294" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_3" value="12295" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_3" value="12296" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 3 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 3 offset.</SUMMARY>
          <DESCRIPTION>Match 3 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_4" value="12297" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_4" value="12298" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_4" value="12299" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 4 matches or not.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 4 offset.</SUMMARY>
          <DESCRIPTION>Match 4 offset in byte after sync word</DESCRIPTION>
          <TARGETRELEASE>ROM2</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="TX_LENGTH" value="4096" default="0x08" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble length</SUMMARY>
      <DESCRIPTION>Byte or nibble length of preamble to send, depends on LENGTH_CONFIG field in PREAMBLE_CONFIG property.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_STD_1" value="4097" default="0x14" feature="pro2" dev="1" wip="0">
      <SUMMARY>Standard preamble configuration</SUMMARY>
      <DESCRIPTION>Note: This field only applies to standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_THRESH" lsb="0" size="7">
          <RANGE min="0" max="127" />
          <DESCRIPTION>Number of preamble bits that must be valid to detect a valid preamble.</DESCRIPTION>
          <DESCRIPTION>Zero is a valid value in this field means that the preamble checking will be skipped.</DESCRIPTION>
        </FIELD>
        <FIELD name="SKIP_SYNC_TIMEOUT" lsb="7" size="1">
          <ENUMERATION value="0x1" name="ENABLE">
            <DESCRIPTION>In standard packet mode, if set the system will ignore the syncword search timeout reset.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_NSTD" value="4098" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Non-standard preamble configuation</SUMMARY>
      <DESCRIPTION>Note: This field only applies to non-standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_ERRORS" lsb="5" size="3">
          <RANGE min="0" max="7" />
          <DESCRIPTION>Number of preamble bit errors that are allowed when detecting a valid preamble.</DESCRIPTION>
        </FIELD>
        <FIELD name="PATTERN_LENGTH" lsb="0" size="5">
          <RANGE min="0" max="31" />
          <DESCRIPTION>This value plus 1 is the number of valid bits of PREAMBLE_PATTERN.  If PREAM_TX_LENGTH is longer, this pattern will repeat.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_STD_2" value="4099" default="0x0F" feature="pro2" dev="1" wip="0">
      <SUMMARY>Standard preamble configuration</SUMMARY>
      <DESCRIPTION>Note: This field only applies to standard preambles.</DESCRIPTION>
      <TARGETRELEASE>ROM1-Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_PREAMBLE_TIMEOUT" lsb="0" size="4">
          <RANGE min="0" max="15" />
          <DESCRIPTION>Number of nibbles to search for before determining that a preamble does not exist. This is usually used for hopping.</DESCRIPTION>
        </FIELD>
        <FIELD name="RX_PREAMBLE_TIMEOUT_EXTEND" lsb="4" size="4">
          <DESCRIPTION>This is only used for a long preamble timeout, more than 15 nibbles.</DESCRIPTION>
          <DESCRIPTION>If this field is non-zero, then  PREAMBLE_TIMEOUT is RX_PREAMBLE_TIMEOUT_EXTEND by 15 nibbles, up to 225 nibbles.</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG" value="4100" default="0x21" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble configuration bits</SUMMARY>
      <DESCRIPTION>Misc preamble configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="STANDARD_PREAM" lsb="0" size="2">
          <ENUMERATION value="0x0" name="PRE_NS">
            <DESCRIPTION>Use non-standard preamble</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="PRE_1010">
            <DESCRIPTION>Use standard preamble of 1010.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2" name="PRE_0101">
            <DESCRIPTION>Use standard preamble of 0101.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MAN_ENABLE" lsb="2" size="1">
          <ENUMERATION value="0x0" name="NO_MAN">
            <DESCRIPTION>Preamble is not manchester encoded.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="EN_MAN">
            <DESCRIPTION>Preamble is manchester encoded.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MAN_CONST" lsb="3" size="1">
          <ENUMERATION value="0x0" name="NO_CON">
            <DESCRIPTION>When Manchester is enabled, if preamble pattern is 0101, the post-Manchester transmitted bits will be 10011001? If the preamble pattern is 1010, the post-Manchester transmitted bits will be 01100110...</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="CONST">
            <DESCRIPTION>When Manchester is enabled, if preamble pattern is 0101, the pre-Manchester pattern will be 1111, the post-Manchester transmitted bits will be 01010101... If the preamble pattern is 1010, the pre-Manchester pattern will be 0000, the post-Manchester transmitted bits will be 10101010....</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LENGTH_CONFIG" lsb="4" size="1">
          <ENUMERATION value="0x0" name="NIBBLE">
            <DESCRIPTION>Preamble tx_length register is in nibbles.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="BYTE">
            <DESCRIPTION>Preamble tx_length register is in bytes.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PREAM_FIRST_1_OR_0" lsb="5" size="1">
          <ENUMERATION value="0x0" name="FIRST_0">
            <DESCRIPTION>First bit is 0, calculated from the calculator.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="FIRST_1">
            <DESCRIPTION>First bit is 1, calculated from the calculator.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_31_24" value="4101" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_23_16" value="4102" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_15_8" value="4103" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_7_0" value="4104" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Preamble pattern</SUMMARY>
      <DESCRIPTION>Preambles always sent bits 0-31 timewise.</DESCRIPTION>
      <DESCRIPTION>Preamble pattern to be transmitted or expected to be received.  Field is expressed in chips, after Manchester encoding or before Manchester decoding.</DESCRIPTION>
      <DESCRIPTION>To use this register, PREAM_CONFIG_STANDARD_PREAM should be set to 0, use non-standard preamble.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="CONFIG" value="4352" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sync configuration bits</SUMMARY>
      <DESCRIPTION>Misc sync word configuration bits. Least significant bit of sync word is transmitted/received first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="LENGTH" lsb="0" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is 8 bits, sync byte 3 is used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is 16 bits, sync bytes 2 and 3 are used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Sync word is 24 bits, sync bytes 1, 2, and 3 are used.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>Sync word is 32 bits, sync bytes 0, 1, 2, and 3 are used.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANCH" lsb="2" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is not manchester encoded.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is manchester encoded.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK" lsb="3" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is not 4FSK modulated.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is 4FSK modulated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RX_ERRORS" lsb="4" size="3">
          <DESCRIPTION>Number of sync bit errors that are allowed in the sync field during receive sync detection.</DESCRIPTION>
        </FIELD>
        <FIELD name="SKIP_TX" lsb="7" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is transmitted as defined by LENGTH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is not transmitted.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_31_24" value="4353" default="0x2D" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 3 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_23_16" value="4354" default="0xD4" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 2 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_15_8" value="4355" default="0x2D" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_7_0" value="4356" default="0xD4" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of sync word</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="CRC_CONFIG" value="4608" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Select a CRC polynomial and seed</SUMMARY>
      <DESCRIPTION>Pick the desired CRC polynomial and CRC seed.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <BYTE>
        <FIELD name="CRC_POLYNOMIAL" lsb="0" size="4">
          <ENUMERATION value="0" name="NO_CRC">
            <DESCRIPTION>No CRC.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ITU_T_CRC8">
            <DESCRIPTION>ITU-T CRC8:   X8+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="IEC_16">
            <DESCRIPTION>IEC-16:       X16+X14+X12+X11+X9+X8+X7+X4+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="BAICHEVA_16">
            <DESCRIPTION>Baicheva-16:  X16+X15+X12+X7+X6+X4+X3+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CRC_16_IBM">
            <DESCRIPTION>CRC-16 (IBM): X16+X15+X2+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CCITT_16">
            <DESCRIPTION>CCIT-16:      X16+X12+X5+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="KOOPMAN">
            <DESCRIPTION>Koopman:      X32+X30+X29+X28+X26+X20+X19+X17+X16+X15+X11+X10+X7+X6+X4+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="IEEE_802_3">
            <DESCRIPTION>IEEE 802.3:   X32+X26+X23+X22+X16+X12+X11+X10+X8+X7+X5+X4+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="CASTAGNOLI">
            <DESCRIPTION>Castagnoli:   X32+X28+X27+X26+X25+X23+X22+X20+X19+X18+X14+X13+X11+X10+X9+X8+X6+1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ALT_CRC_POLYNOMIAL" lsb="4" size="3" internal="1">
          <ENUMERATION value="0" name="NO_CRC">
            <DESCRIPTION>No CRC.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ITU_T_CRC8">
            <DESCRIPTION>ITU-T CRC8:   X8+X2+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="IEC_16">
            <DESCRIPTION>IEC-16:       X16+X14+X12+X11+X9+X8+X7+X4+X+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="BAICHEVA_16">
            <DESCRIPTION>Baicheva-16:  X16+X15+X12+X7+X6+X4+X3+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CRC_16_IBM">
            <DESCRIPTION>CRC-16 (IBM): X16+X15+X2+1</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CCITT_16">
            <DESCRIPTION>CCIT-16:      X16+X12+X5+1</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_SEED" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Use all 0's for the CRC Seed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Use all 1's for the CRC Seed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_POLY_15_8" value="4609" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of data whitening polynomial value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_SEED.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_POLY_7_0" value="4610" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of data whitening polynomial</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_SEED.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_SEED_15_8" value="4611" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of data whitening seed value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_SEED_7_0" value="4612" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of data whitening seed value</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_BIT_NUM and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_BIT_NUM" value="4613" default="0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Which whitening polynomial bit to use for data scrambling</SUMMARY>
      <DESCRIPTION>Related to properties: WHT_SEED and WHT_POLY.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="15" />
      <BYTE>
        <FIELD name="WHT_BIT_NUM" lsb="0" size="4">
          <ENUMERATION value="0x0">
            <DESCRIPTION>0  to use for data scrambling</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>1  to use for data scrambling</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SW_CRC_CTRL" lsb="6" size="1" internal="1">
          <DESCRIPTION>Enables the software crc calculation over the packet.  Should only be used if the software whitening is used.</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Disable - Don't enable sofware CRC engine.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Enable software CRC engine.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SW_WHT_CTRL" lsb="7" size="1" internal="1">
          <ENUMERATION value="0x0" name="DISABLE">
            <DESCRIPTION>Disable the software whitening algorithm.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="ENABLE">
            <DESCRIPTION>Enable the software whitening algorithm.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="CONFIG1" value="4614" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>General packet configuration bits</SUMMARY>
      <DESCRIPTION>General packet configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="BIT_ORDER" lsb="0" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Msb first for all fields. Bit 7 transmitted first timewise. Note: Preamble and sync word are always transmitted lsb first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Lsb first for all fields. Bit 0 transmitted first timewise.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENDIAN" lsb="1" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>CRC low bytes are received/transmitted first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>CRC high bytes are received/transmitted first.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_INVERT" lsb="2" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Leave each CRC bit intact.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Invert each CRC bit before transmit.  Invert received CRC before comparison.  Data in fifo remains untouched.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANCH_POL" lsb="3" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>0 is encoded/decoded to/from 10 Manchester pattern.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>0 is encoded/decoded to/from 01 Manchester pattern.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RX_MULTI_PKT" lsb="4" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Turn off receive chain after packet received.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Leave receive chain enabled after packet received.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK_EN" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The modem is not in 4FSK mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>The modem is in 4FSK mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PH_RX_DISABLE" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Packet handler is enabled in RX.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Packet handler is disabled in RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PH_FIELD_SPLIT" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Field level properties (property 0x120D to 0x1220) are shared between TX and RX.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Field level properties are split between TX and RX. TX: from 0x120D ~ 0x1220, RX: from 0x1221 ~ 0x1234</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="CHIP_MAP" value="4615" default="0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Controls mapping chips to bits</SUMMARY>
      <DESCRIPTION>When the Demod is in 4FSK mode, and the PH is in 2FSK no Manchester mode, this controls which 2 chips sequence will be mapped to the each level.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="PLUS_3_LEVEL_MAP" lsb="0" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a PLUS_3_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 1. For transmit, if a 1 is the next bit to be transmitted, the two chips that will be transmitted are the contents of PLUS_3_LEVEL_MAP (which equal 00 in this case).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Upon receiving a PLUS_3_LEVEL_MAP sequence (which equals 01 in this case. First 0, then 1), the resulting bit in the RX_DATA buffer will be a 1. For transmit if a 1 is the next bit to be transmitted, the two chips that will be transmitted are the contents of PLUS_3_LEVEL_MAP (which equal 01 in this case. first 0, then 1).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PLUS_1_LEVEL_MAP" lsb="2" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a PLUS_1_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 1. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Upon receiving a PLUS_1_LEVEL_MAP sequence (which equal 10 in this case. First 1, then 0), the resulting bit in the RX_DATA buffer will be a 1. For transmit: This field is ignored.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MINUS_1_LEVEL_MAP" lsb="4" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Upon receiving a MINUS_1_LEVEL_MAP sequence (which equals 00 in this case), the resulting bit in the RX_DATA buffer will be a 0. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>Upon receiving a MINUS_1_LEVEL_MAP sequence (which equals 11 in this case), the resulting bit in the RX_DATA buffer will be a 0. For transmit this field is ignored.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MINUS_3_LEVEL_MAP" lsb="6" size="2">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Upon receiving a MINUS_3_LEVEL_MAP sequence (which equals 01 in this case. First 0, then 1), the resulting bit in the RX_DATA buffer will be a 0. For transmit, if a 0 is the next bit to be transmitted, the two chips that will be transmitted are the contents of MINUS_3_LEVEL_MAP (which equals 01 in this case. First 0, then 1).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Upon receiving a MINUS_3_LEVEL_MAP sequence (which equals 10 in this case. First 1, then 0), the resulting bit in the RX_DATA buffer will be a 0. For transmit, if a 0 is the next bit to be transmitted, the two chips that will be transmitted are the contents of MINUS_3_LEVEL_MAP (which equals 10 in this case. First 1, then 0).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN" value="4616" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Provides information regarding how to use the length from the received packet.</SUMMARY>
      <DESCRIPTION>This property is used for variable length packet reception.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <BYTE>
        <FIELD name="DST_FIELD" lsb="0" size="3">
          <DESCRIPTION>Selects field number that will vary in length.</DESCRIPTION>
          <DESCRIPTION>A value of 0 in this field specifies fixed packet length mode. Field 2 to 5 can be designated as variable length field.</DESCRIPTION>
        </FIELD>
        <FIELD name="IN_FIFO" lsb="3" size="1">
          <ENUMERATION value="0x0" name="CUT_OUT">
            <DESCRIPTION>The data bytes containing the length field are not put in the fifo.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="LEAVE_IN">
            <DESCRIPTION>The data bytes containing the length field are put in the fifo.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SIZE" lsb="4" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>The length field is one byte in length.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>The length field is two bytes in length.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ENDIAN" lsb="5" size="1">
          <ENUMERATION value="0x0" name="LITTLE">
            <DESCRIPTION>The length field is least significant byte first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="BIG">
            <DESCRIPTION>The length field is most significant byte first.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN_FIELD_SOURCE" value="4617" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field number containing the embedded length field.</SUMMARY>
      <DESCRIPTION>This property is used in variable packet mode defining where the length field is in the packet.</DESCRIPTION>
      <DESCRIPTION>The length field must be the last byte in a fixed length field and precede the variable length field</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="SRC_FIELD" lsb="0" size="3">
          <DESCRIPTION>Selects field number that contains the length field.</DESCRIPTION>
          <DESCRIPTION>A value of 0 in this field is treated as 1.</DESCRIPTION>
          <RANGE min="0" max="4" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN_ADJUST" value="4618" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Adjust length field by this amount to derive the byte count of the variable length field.</SUMMARY>
      <DESCRIPTION>This property is added to the value extracted from the length field in the packet.</DESCRIPTION>
      <DESCRIPTION>The result is then used to set the length of the selected destination field that varies in length.</DESCRIPTION>
      <DESCRIPTION>This constant is typically defined in a protocol specification or can be derived from the specification.</DESCRIPTION>
      <DESCRIPTION>For example, if a protocol defines the first byte as the length field, the length field specifies the number of subsequent payload excluding the CRC bytes, LEN_ADJUST should be set to 0; If the length field specifies the number of subsequent payload including the CRC bytes, LEN_ADJUST should be set to the negative number of the CRC byte count in 2's complement.</DESCRIPTION>
      <DESCRIPTION>LEN_ADJUST is a signed char.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="PKT" name="TX_THRESHOLD" value="4619" default="0x30" feature="pro2" dev="1" wip="0">
      <SUMMARY>TX almost empty threshold.</SUMMARY>
      <DESCRIPTION>Transmit almost empty interrupt fires when the amount of space in the transmit fifo equal to or greater than TX_THRESHOLD.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="64" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_THRESHOLD" value="4620" default="0x30" feature="pro2" dev="1" wip="0">
      <SUMMARY>RX almost full threshold.</SUMMARY>
      <DESCRIPTION>Receive almost full interrupt fires when there are RX_THRESHOLD number of bytes present in the receive fifo.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <RANGE min="0" max="64" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_LENGTH_12_8" value="4621" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_1_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_LENGTH_7_0" value="4622" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_CONFIG" value="4623" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 1 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="PN_START" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load PN-9 engine with seed value at the start of this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_CRC_CONFIG" value="4624" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 1 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="ALT_CRC_START" lsb="6" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load 16-bit CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_START" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_LENGTH_12_8" value="4625" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_2_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_LENGTH_7_0" value="4626" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_CONFIG" value="4627" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 2 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_CRC_CONFIG" value="4628" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 2 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_LENGTH_12_8" value="4629" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_3_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_LENGTH_7_0" value="4630" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_CONFIG" value="4631" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 3 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_CRC_CONFIG" value="4632" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 3 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_LENGTH_12_8" value="4633" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_4_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_LENGTH_7_0" value="4634" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_CONFIG" value="4635" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 4 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_CRC_CONFIG" value="4636" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 4 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_LENGTH_12_8" value="4637" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="FIELD_5_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_LENGTH_7_0" value="4638" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_CONFIG" value="4639" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 configuration bits.</SUMMARY>
      <DESCRIPTION>Field 5 configuration bits common to TX and RX.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_CRC_CONFIG" value="4640" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 CRC configuration bits.</SUMMARY>
      <DESCRIPTION>Field 5 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM1_Partial</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field. If PH_FIELD_SPLIT is set, this bit is ignored.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SEND_CRC" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Transmit CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_LENGTH_12_8" value="4641" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_1_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_LENGTH_7_0" value="4642" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_CONFIG" value="4643" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 1 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="PN_START" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load PN-9 engine with seed value at the start of this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_CRC_CONFIG" value="4644" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 1 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 1 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="ALT_CRC_START" lsb="6" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load 16-bit CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_START" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Load CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_LENGTH_12_8" value="4645" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_2_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_LENGTH_7_0" value="4646" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_CONFIG" value="4647" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 2 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_CRC_CONFIG" value="4648" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 2 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 2 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_LENGTH_12_8" value="4649" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_3_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_LENGTH_7_0" value="4650" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_CONFIG" value="4651" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 3 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_CRC_CONFIG" value="4652" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 3 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 3 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_LENGTH_12_8" value="4653" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_4_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_LENGTH_7_0" value="4654" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_CONFIG" value="4655" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 4 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_CRC_CONFIG" value="4656" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 4 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 4 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_LENGTH_12_8" value="4657" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of field length for RX</SUMMARY>
      <DESCRIPTION>This property specifies the length of this field in bytes.</DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.</DESCRIPTION>
      <DESCRIPTION>If the field is programmed as a variable length field, this property sets the maximum length of the field.</DESCRIPTION>
      <DESCRIPTION>Used along with byte 0 property.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="RX_FIELD_5_LENGTH_12_8" lsb="0" size="5">
        <ENUMERATION value="0x0">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_LENGTH_7_0" value="4658" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of field length for RX</SUMMARY>
      <DESCRIPTION>See byte 1 for details.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_CONFIG" value="4659" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 5 configuration bits for RX.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="MANCH" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable manchester encoding on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="WHITEN" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable whitening on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="2" size="1">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
      <FIELD name="4FSK" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 4fsk on this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_CRC_CONFIG" value="4660" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Field 5 CRC configuration bits for RX.</SUMMARY>
      <DESCRIPTION>Field 5 CRC configuration bits.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable 16-bit CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CRC_ENABLE" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Enable CRC over this field.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC using 16-bit CRC engine at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CHECK_CRC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Check CRC at the end of this field</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="RESERVED" lsb="6" size="2">
        <DESCRIPTION>Reserved.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="INTE" value="16384" default="0x3C" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Frac-N PLL integer number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL integer number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="inte" lsb="0" size="7">
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_2" value="16385" default="0x08" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 2 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_2" lsb="0" size="3">
          <RANGE min="0" max="7" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_1" value="16386" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 1 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_1" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_0" value="16387" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 0 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>Fractional-N PLL fraction number defined by the modem calculator. See datasheet for frequency equation for manual calculation.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="CHANNEL_STEP_SIZE_1" value="16388" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 1 of channel step size.</SUMMARY>
      <DESCRIPTION>Channel frequency step size used when using EZ frequency programming. EZ frequency programming is defined by base frequency (inte + frac ) + channel number * step size.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="channel_step_size_1" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="CHANNEL_STEP_SIZE_0" value="16389" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 0 of channel step size.</SUMMARY>
      <DESCRIPTION>Channel frequency step size used when using EZ frequency programming. EZ frequency programming is defined by base frequency (inte + frac ) + channel number * step size.</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="channel_step_size_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="W_SIZE" value="16390" default="0x20" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>30MHz clock cycles</SUMMARY>
      <DESCRIPTION>30MHz clock cycles</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="w_size" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="VCOCNT_RX_ADJ" value="16391" default="0xFF" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>VCO target count adjustment for RX</SUMMARY>
      <DESCRIPTION>VCO target count adjustment for RX, signed</DESCRIPTION>
      <TARGETRELEASE>ROM1</TARGETRELEASE>
      <BYTE>
        <FIELD name="vcocnt_rx_adj" lsb="0" size="8">
          <RANGE min="-128" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="CONTROL" value="20480" default="0x04" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>RX hop control.</SUMMARY>
      <DESCRIPTION>Sets RSSI timeout value and select RX hop condition.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="RSSI_TIMEOUT" lsb="0" size="4">
          <DESCRIPTION>Sets the RSSI time out expressed in nibbles.</DESCRIPTION>
        </FIELD>
        <FIELD name="HOP_EN" lsb="4" size="3">
          <DESCRIPTION>RX hop condition.</DESCRIPTION>
          <ENUMERATION value="0" name="HOP_DISABLE">
            <DESCRIPTION>Hop disabled</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HOP_PM_TO">
            <DESCRIPTION>Hop if preamble timeout occurs.</DESCRIPTION>
            <DESCRIPTION>If no preamble detected after RX preamble timeout, then hop.  Otherwise a preamble is detected, stay on channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="HOP_RSSI_PM_TO">
            <DESCRIPTION>Hop if either RSSI timeout occurs or preamble timeout occurs.</DESCRIPTION>
            <DESCRIPTION>Either timeout condition forces hop, whichever occurs first.  Otherwise stay on channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="HOP_PM_SYNC_TO">
            <DESCRIPTION>Hop if preamble timeout or invalid sync word.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="HOP_RSSI_PM_SYNC_TO">
            <DESCRIPTION>Hop on RSSI timeout, preamble timeout or invalid sync word.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_SIZE" value="20481" default="0x01" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Number of entries in the RX hop table.</SUMMARY>
      <DESCRIPTION>Number of entries in the RX hop table.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_HOP_TABLE_SIZE" lsb="0" size="7">
          <RANGE min="1" max="64" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_0" value="20482" default="0" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.1 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.1 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_1" value="20483" default="1" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.2 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.2 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_2" value="20484" default="2" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.3 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.3 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_3" value="20485" default="3" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.4 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.4 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_4" value="20486" default="4" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.5 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.5 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_5" value="20487" default="5" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.6 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.6 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_6" value="20488" default="6" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.7 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.7 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_7" value="20489" default="7" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.8 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.8 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_8" value="20490" default="8" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.9 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.9 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_9" value="20491" default="9" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.10 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.10 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_10" value="20492" default="10" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.11 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.11 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_11" value="20493" default="11" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.12 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.12 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_12" value="20494" default="12" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.13 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.13 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_13" value="20495" default="13" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.14 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.14 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_14" value="20496" default="14" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.15 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.15 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_15" value="20497" default="15" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.16 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.16 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_16" value="20498" default="16" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.17 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.17 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_17" value="20499" default="17" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.18 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.18 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_18" value="20500" default="18" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.19 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.19 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_19" value="20501" default="19" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.20 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.20 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_20" value="20502" default="20" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.21 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.21 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_21" value="20503" default="21" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.22 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.22 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_22" value="20504" default="22" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.23 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.23 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_23" value="20505" default="23" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.24 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.24 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_24" value="20506" default="24" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.25 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.25 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_25" value="20507" default="25" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.26 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.26 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_26" value="20508" default="26" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.27 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.27 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_27" value="20509" default="27" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.28 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.28 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_28" value="20510" default="28" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.29 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.29 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_29" value="20511" default="29" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.30 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.30 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_30" value="20512" default="30" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.31 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.31 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_31" value="20513" default="31" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.32 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.32 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_32" value="20514" default="32" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.33 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.33 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_33" value="20515" default="33" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.34 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.34 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_34" value="20516" default="34" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.35 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.35 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_35" value="20517" default="35" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.36 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.36 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_36" value="20518" default="36" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.37 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.37 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_37" value="20519" default="37" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.38 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.38 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_38" value="20520" default="38" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.39 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.39 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_39" value="20521" default="39" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.40 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.40 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_40" value="20522" default="40" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.41 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.41 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_41" value="20523" default="41" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.42 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.42 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_42" value="20524" default="42" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.43 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.43 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_43" value="20525" default="43" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.44 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.44 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_44" value="20526" default="44" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.45 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.45 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_45" value="20527" default="45" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.46 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.46 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_46" value="20528" default="46" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.47 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.47 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_47" value="20529" default="47" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.48 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.48 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_48" value="20530" default="48" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.49 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.49 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_49" value="20531" default="49" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.50 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.50 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_50" value="20532" default="50" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.51 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.51 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_51" value="20533" default="51" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.52 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.52 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_52" value="20534" default="52" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.53 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.53 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_53" value="20535" default="53" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.54 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.54 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_54" value="20536" default="54" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.55 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.55 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_55" value="20537" default="55" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.56 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.56 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_56" value="20538" default="56" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.57 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.57 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_57" value="20539" default="57" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.58 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.58 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_58" value="20540" default="58" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.59 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.59 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_59" value="20541" default="59" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.60 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.60 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_60" value="20542" default="60" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.61 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.61 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_61" value="20543" default="61" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.62 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.62 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_62" value="20544" default="62" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.63 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.63 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_63" value="20545" default="63" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>No.64 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.64 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <ENUMERATION value="255" name="INVALID">
            <DESCRIPTION>Hopping entry is invalid.</DESCRIPTION>
          </ENUMERATION>
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPI_ACTIVE_SEQ_DELAY_15_8" value="61952" default="0x02" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Upper byte of sequencer delay from spi active to ready.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPI_ACTIVE_SEQ_DELAY_7_0" value="61953" default="0x8A" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Lower byte of sequencer delay from spi active to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="READY_SEQ_DELAY" value="61954" default="0x82" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Sequencer delay from ready to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="TX_TUNE_SEQ_DELAY" value="61955" default="0x1E" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Sequencer delay from tx tune to tx.</SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RX_SEQ_DELAY_15_8" value="61956" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Upper byte of Sequencer delay from rx to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RX_SEQ_DELAY_7_0" value="61957" default="0x91" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Lower byte of Sequencer delay from rx to tx.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <APIUPDATED>ROM3</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="CAL_ENABLE_VTR" value="61958" default="0x61" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VTR calibration enables.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CAL_EN_VTR_XO" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr xo cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_RX" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr rx cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_TX" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr tx cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_ADC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr adc cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_SY" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr sy cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_V3P3" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco v3p3 cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_V1P5" lsb="6" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco v1p5 cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_VTR_VCO_LADR" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform vtr vco ladr cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="CAL_ENABLE" value="61959" default="0x15" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Calibration enables.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CAL_EN_BOOT_OSC" lsb="0" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform boot osc cal on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RC_CAL_32K" lsb="1" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform rc32k cal on every warm boot.  Always performed at cold boot and on CAL timer expiration.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_PGA_OFS" lsb="2" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform pga ofs cal on every entry into RX.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RC_CAL_FOR_ADC" lsb="3" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform rc32k cal for adc on every warm boot.  Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RFPKD_FULL" lsb="4" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform full RF peak detector cal on every warm boot.  Full Always performed at cold boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_RFPKD_FAST" lsb="5" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform fast RF peak detector cal on every entry into RX.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_SPARE6" lsb="6" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform xxx cal on every warm boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="CAL_EN_SPARE7" lsb="7" size="1">
        <ENUMERATION value="0x1">
          <DESCRIPTION>Perform xxx cal on every warm boot.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_V3P3_TARGET_VOLTAGE" value="61960" default="0xFB" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO v3.3 target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_V1P5_TARGET_VOLTAGE" value="61961" default="0x08" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO v1.5 target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_LADR_TARGET_VOLTAGE" value="61962" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO Ladder target voltage</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL_ADC_TARGET_15_8" value="61963" default="0x7D" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32K ADC cal target</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <DESCRIPTION>Upper byte of RC Cal ADC Target in Hz.</DESCRIPTION>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL_ADC_TARGET_7_0" value="61964" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32K ADC cal target</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <DESCRIPTION>Lower byte of RC Cal ADC Target in Hz.</DESCRIPTION>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL" value="61965" default="0x4" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="FINE_CAL_CYCLES" lsb="0" size="8">
        <DESCRIPTION>Number of RC32k cycles to measure RC frequency over. (nc)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL1" value="61966" default="0x44" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="COARSE_CAL_CYCLES" lsb="0" size="4">
        <DESCRIPTION>Number of RC32k cycles to measure RC frequency over. (nc)</DESCRIPTION>
      </FIELD>
      <FIELD name="COARSE_ADC_CAL_CYCLES" lsb="4" size="4">
        <DESCRIPTION>Number of RC32k cycles to measure RC32k frequency over for ADC cal. (nc)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL2" value="61967" default="0x42" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="HIGH_CURR_CHOP" lsb="6" size="2">
        <ENUMERATION value="0" name="CHOP_DIS_HI_DIS">
          <DESCRIPTION>Operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="1" name="CHOP_EN_HI_DIS">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="2" name="CHOP_DIS_HI_EN">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
        <ENUMERATION value="3" name="CHOP_EN_HI_EN">
          <DESCRIPTION>Do not operate in high current mode.</DESCRIPTION>
        </ENUMERATION>
      </FIELD>
      <FIELD name="SETTLE_CYCLES" lsb="0" size="6">
        <DESCRIPTION>Number of RC32k cycles to wait for clock to settle after changing frequency and before checking frequency. (ns)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="BOOT_OSC_CAL" value="61968" default="0x09" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Boot osc calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="XO_CAPCODE_RESTORE_DELAY" lsb="3" size="5">
        <DESCRIPTION>Delay before restoring XO_CAPCODE.</DESCRIPTION>
      </FIELD>
      <FIELD name="BOOT_OSC_ADJ" lsb="0" size="3">
        <DESCRIPTION>Adjustment value for Boot osc.  This value is subtracted from BOSC aconfig register after boot osc cal.  There is an additional adjustment factor applied based on crystal frequency.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="BOOT_OSC_CAL1" value="61969" default="0x02" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Boot osc calibration parameters</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <FIELD name="CRYSTAL_OK_DELAY" lsb="0" size="8">
        <DESCRIPTION>Delay after restoring capcode, before polling crystal ok.</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_TEMP_SLOPE" value="61970" default="0x63" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_TEMP_INTERCEPT" value="61971" default="0x4A" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SY_GAIN_ERROR" value="61972" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>AuxADC gain adjustment, 8-bit signed.</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SY_OFFSET_ERROR" value="61973" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>AuxADC offset adjustment, 8-bit signed.</SUMMARY>
      <TARGETRELEASE>ROM2-Partial</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="ADC_VOLTAGE_TRIM" value="61974" default="0x0F" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_RXFE_LPF" value="61975" default="0x35" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_ADC_LPF" value="61976" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_LOAD5_LPF" value="61977" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_LPF" value="61978" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_COM_LPF" value="61979" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_TX_LPF" value="61980" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_TX_LPF" value="61981" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RESERVED_F2_1E" value="61982" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_RXFE_HPF" value="61983" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_ADC_HPF" value="61984" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_LOAD5_HPF" value="61985" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_HPF" value="61986" default="0x30" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>
        This is the value that will be used for the CLKGEN ACONFIG register for RX if <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:Band > 4.
      </SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_COM_HPF" value="61987" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_TX_HPF" value="61988" default="0x20" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>
        This is the value that will be used for the CLKGEN ACONFIG register for TX if <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:Band > 4.
      </SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_TX_HPF" value="61989" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="PH_WATERMARK" value="61990" default="0x62" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <FIELD name="RX_WATERMARK" lsb="4" size="4">
        <DESCRIPTION></DESCRIPTION>
        <RANGE min="1" max="8" />
      </FIELD>
      <FIELD name="TX_WATERMARK" lsb="0" size="4">
        <DESCRIPTION></DESCRIPTION>
        <RANGE min="1" max="8" />
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="PROC_MON_RCAL" value="61991" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REF_CAL_BANDGAP" value="61992" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>REF_CAL bandgap calibration</SUMMARY>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SAMPLER_CFG" value="61993" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPARE1" value="61994" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>For use in patches</SUMMARY>
      <TARGETRELEASE></TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="MODULATION" value="9216" default="0x02" feature="common" dev="1" wip="0">
      <SUMMARY>Configure modulation using the EZ config feature.</SUMMARY>
      <DESCRIPTION>This property selects a modulation type, modulation source and tx direct mode control if supported.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="MOD_TYPE" lsb="0" size="2">
          <ENUMERATION value="0" name="CW" feature="tx">
            <DESCRIPTION>CW</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="OOK">
            <DESCRIPTION>OOK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="FSK">
            <DESCRIPTION>FSK</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GFSK">
            <DESCRIPTION>GFSK</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MOD_SOURCE" lsb="3" size="2">
          <ENUMERATION value="0" name="PACKET">
            <DESCRIPTION>Modulation source is packet handler fifo</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIRECT">
            <DESCRIPTION>Modulation source is direct mode pin.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="PSEUDO">
            <DESCRIPTION>Modulation source is pseudo-random generator</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_GPIO" lsb="5" size="2" feature="tx">
          <DESCRIPTION>
            Selects which GPIO will be used as the TX data source if MOD_SOURCE = DIRECT.  The gpio selected here must be configured (using <REFERENCE>GPIO_PIN_CFG</REFERENCE>) as a CMOS input.
          </DESCRIPTION>
          <ENUMERATION value="0" name="GPIO0">
            <DESCRIPTION>TX direct mode uses gpio0 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="GPIO1">
            <DESCRIPTION>TX direct mode uses gpio1 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="GPIO2">
            <DESCRIPTION>TX direct mode uses gpio2 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GPIO3">
            <DESCRIPTION>TX direct mode uses gpio3 as data source, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_TYPE" lsb="7" size="1" feature="tx">
          <ENUMERATION value="0" name="SYNC">
            <DESCRIPTION>Direct mode operates in synchronous mode, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ASYNC">
            <DESCRIPTION>Direct mode operates in asynchronous mode, applies to TX only.  GFSK is not supported.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="CONFIG_SELECT" value="9217" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Select the index from EZ config table.</SUMMARY>
      <DESCRIPTION>This property selects the configuration index from a predefined EZConfig table.</DESCRIPTION>
      <TARGETRELEASE>ROM2</TARGETRELEASE>
      <BYTE>
        <FIELD name="CONFIG_INDEX" lsb="0" size="8">
          <ENUMERATION value="0" name="NONE">
            <DESCRIPTION>Select none</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="CONFIG_INDEX_1">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_9.6kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CONFIG_INDEX_2">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_10.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="CONFIG_INDEX_3">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_15.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CONFIG_INDEX_4">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_19.2kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CONFIG_INDEX_5">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_20.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="CONFIG_INDEX_6">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_38.4kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="CONFIG_INDEX_7">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_40.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="CONFIG_INDEX_8">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_50.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CONFIG_INDEX_9">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="CONFIG_INDEX_10">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="CONFIG_INDEX_11">
            <DESCRIPTION>283-350MHz_2GFSK_hiPPM_128.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="CONFIG_INDEX_12">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_2.4kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="CONFIG_INDEX_13">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_4.8kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="CONFIG_INDEX_14">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_5.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="CONFIG_INDEX_15">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_9.6kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="CONFIG_INDEX_16">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_10.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="CONFIG_INDEX_17">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_15.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="18" name="CONFIG_INDEX_18">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_19.2kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="19" name="CONFIG_INDEX_19">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_20.0kbps_chBW69.3kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="20" name="CONFIG_INDEX_20">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_38.4kbps_chBW76.8kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="21" name="CONFIG_INDEX_21">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_40.0kbps_chBW85.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="22" name="CONFIG_INDEX_22">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_50.0kbps_chBW110.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="23" name="CONFIG_INDEX_23">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="24" name="CONFIG_INDEX_24">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="25" name="CONFIG_INDEX_25">
            <DESCRIPTION>283-350MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="26" name="CONFIG_INDEX_26">
            <DESCRIPTION>283-350MHz_OOK_2.4kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="27" name="CONFIG_INDEX_27">
            <DESCRIPTION>283-350MHz_OOK_4.8kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="28" name="CONFIG_INDEX_28">
            <DESCRIPTION>283-350MHz_OOK_5.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="29" name="CONFIG_INDEX_29">
            <DESCRIPTION>283-350MHz_OOK_9.6kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="30" name="CONFIG_INDEX_30">
            <DESCRIPTION>283-350MHz_OOK_10.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31" name="CONFIG_INDEX_31">
            <DESCRIPTION>283-350MHz_OOK_15.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="32" name="CONFIG_INDEX_32">
            <DESCRIPTION>283-350MHz_OOK_19.2kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="33" name="CONFIG_INDEX_33">
            <DESCRIPTION>283-350MHz_OOK_20.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="34" name="CONFIG_INDEX_34">
            <DESCRIPTION>283-350MHz_OOK_38.4kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="35" name="CONFIG_INDEX_35">
            <DESCRIPTION>283-350MHz_OOK_40.0kbps_chBW113.4kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="36" name="CONFIG_INDEX_36">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_9.6kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="37" name="CONFIG_INDEX_37">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_10.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="38" name="CONFIG_INDEX_38">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_15.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="39" name="CONFIG_INDEX_39">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_19.2kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="40" name="CONFIG_INDEX_40">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_20.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="41" name="CONFIG_INDEX_41">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_38.4kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="42" name="CONFIG_INDEX_42">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_40.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="43" name="CONFIG_INDEX_43">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_50.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="44" name="CONFIG_INDEX_44">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_96.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="45" name="CONFIG_INDEX_45">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_100.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="46" name="CONFIG_INDEX_46">
            <DESCRIPTION>425-525MHz_2GFSK_hiPPM_128.0kbps_chBW285.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="47" name="CONFIG_INDEX_47">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_2.4kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="48" name="CONFIG_INDEX_48">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_4.8kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="49" name="CONFIG_INDEX_49">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_5.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="50" name="CONFIG_INDEX_50">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_9.6kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="51" name="CONFIG_INDEX_51">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_10.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="52" name="CONFIG_INDEX_52">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_15.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="53" name="CONFIG_INDEX_53">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_19.2kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="54" name="CONFIG_INDEX_54">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_20.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="55" name="CONFIG_INDEX_55">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_38.4kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="56" name="CONFIG_INDEX_56">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_40.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="57" name="CONFIG_INDEX_57">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_50.0kbps_chBW105.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="58" name="CONFIG_INDEX_58">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="59" name="CONFIG_INDEX_59">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="60" name="CONFIG_INDEX_60">
            <DESCRIPTION>425-525MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="61" name="CONFIG_INDEX_61">
            <DESCRIPTION>425-525MHz_OOK_2.4kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="62" name="CONFIG_INDEX_62">
            <DESCRIPTION>425-525MHz_OOK_4.8kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="63" name="CONFIG_INDEX_63">
            <DESCRIPTION>425-525MHz_OOK_5.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="64" name="CONFIG_INDEX_64">
            <DESCRIPTION>425-525MHz_OOK_9.6kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="65" name="CONFIG_INDEX_65">
            <DESCRIPTION>425-525MHz_OOK_10.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="66" name="CONFIG_INDEX_66">
            <DESCRIPTION>425-525MHz_OOK_15.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="67" name="CONFIG_INDEX_67">
            <DESCRIPTION>425-525MHz_OOK_19.2kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="68" name="CONFIG_INDEX_68">
            <DESCRIPTION>425-525MHz_OOK_20.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="69" name="CONFIG_INDEX_69">
            <DESCRIPTION>425-525MHz_OOK_38.4kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="70" name="CONFIG_INDEX_70">
            <DESCRIPTION>425-525MHz_OOK_40.0kbps_chBW171.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="71" name="CONFIG_INDEX_71">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_9.6kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="72" name="CONFIG_INDEX_72">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_10.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="73" name="CONFIG_INDEX_73">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_15.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="74" name="CONFIG_INDEX_74">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_19.2kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="75" name="CONFIG_INDEX_75">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_20.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="76" name="CONFIG_INDEX_76">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_38.4kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="77" name="CONFIG_INDEX_77">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_40.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="78" name="CONFIG_INDEX_78">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_50.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="79" name="CONFIG_INDEX_79">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_96.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="80" name="CONFIG_INDEX_80">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_100.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="81" name="CONFIG_INDEX_81">
            <DESCRIPTION>850-960MHz_2GFSK_hiPPM_128.0kbps_chBW549.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="82" name="CONFIG_INDEX_82">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_2.4kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="83" name="CONFIG_INDEX_83">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_4.8kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="84" name="CONFIG_INDEX_84">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_5.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="85" name="CONFIG_INDEX_85">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_9.6kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="86" name="CONFIG_INDEX_86">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_10.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="87" name="CONFIG_INDEX_87">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_15.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="88" name="CONFIG_INDEX_88">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_19.2kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="89" name="CONFIG_INDEX_89">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_20.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="90" name="CONFIG_INDEX_90">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_38.4kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="91" name="CONFIG_INDEX_91">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_40.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="92" name="CONFIG_INDEX_92">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_50.0kbps_chBW183.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="93" name="CONFIG_INDEX_93">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_96.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="94" name="CONFIG_INDEX_94">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_100.0kbps_chBW210.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="95" name="CONFIG_INDEX_95">
            <DESCRIPTION>850-960MHz_2GFSK_loPPM_128.0kbps_chBW280.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="96" name="CONFIG_INDEX_96">
            <DESCRIPTION>850-960MHz_OOK_2.4kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="97" name="CONFIG_INDEX_97">
            <DESCRIPTION>850-960MHz_OOK_4.8kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="98" name="CONFIG_INDEX_98">
            <DESCRIPTION>850-960MHz_OOK_5.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="99" name="CONFIG_INDEX_99">
            <DESCRIPTION>850-960MHz_OOK_9.6kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="100" name="CONFIG_INDEX_100">
            <DESCRIPTION>850-960MHz_OOK_10.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="101" name="CONFIG_INDEX_101">
            <DESCRIPTION>850-960MHz_OOK_15.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="102" name="CONFIG_INDEX_102">
            <DESCRIPTION>850-960MHz_OOK_19.2kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="103" name="CONFIG_INDEX_103">
            <DESCRIPTION>850-960MHz_OOK_20.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="104" name="CONFIG_INDEX_104">
            <DESCRIPTION>850-960MHz_OOK_38.4kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="105" name="CONFIG_INDEX_105">
            <DESCRIPTION>850-960MHz_OOK_40.0kbps_chBW336.0kHz</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="PKT" value="9218" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>EZ config packet configure.</SUMMARY>
      <DESCRIPTION>This property selects packet configuration options.</DESCRIPTION>
      <TARGETRELEASE>ROM3</TARGETRELEASE>
      <BYTE>
        <FIELD name="CRC_ENABLE" lsb="0" size="1">
          <DESCRIPTION>Selectes whether to use CRC for transmit or recieve</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>DISABLE - CRC will not be automatically transmitted, and will not be checked on receive.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>ENABLE - CRC will be appended to the end of the transmitted packet and will be checked on receive.  If a CRC error occurs the CRC .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
  </CHIP>
  <CHIP type="Si4460" revision="B1" name="Pro2">
    <COMMAND name="NOP" value="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>No operation command.</SUMMARY>
      <DESCRIPTION>Can be used to ensure communication with the device.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED></APIUPDATED>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PART_INFO" value="0x01" feature="common" dev="1" wip="0">
      <SUMMARY>Reports basic information about the device.</SUMMARY>
      <DESCRIPTION>Returns Part Number, Part Version, ROM ID, etc.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CHIPREV" address="1" type="u8">
          <DESCRIPTION>Chip Mask Revision.</DESCRIPTION>
        </REPLY>
        <REPLY name="PART" address="2" type="u16">
          <DESCRIPTION>Part Number (e.g., si4461 will return - 0x4461).</DESCRIPTION>
        </REPLY>
        <REPLY name="PBUILD" address="4" type="u8">
          <DESCRIPTION>Part Build.</DESCRIPTION>
        </REPLY>
        <REPLY name="ID" address="5" type="u16">
          <DESCRIPTION>Id.</DESCRIPTION>
        </REPLY>
        <REPLY name="CUSTOMER" address="7" type="u8">
          <DESCRIPTION>Customer ID.</DESCRIPTION>
        </REPLY>
        <REPLY name="ROMID" address="8" type="u8">
          <DESCRIPTION>ROM Id.</DESCRIPTION>
        </REPLY>
        <REPLY name="BOND" address="9" type="u8" internal="1">
          <DESCRIPTION>Bond Option.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FUNC_INFO" value="0x10" feature="common" dev="1" wip="0">
      <SUMMARY>Returns the Function revision information of the device.</SUMMARY>
      <DESCRIPTION>
        Return Function revision numbers for currently loaded functional mode firmware. Contrast with <REFERENCE>PART_INFO</REFERENCE>.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="REVEXT" address="1" type="u8">
          <DESCRIPTION>External revision number.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="REVBRANCH" address="2" type="u8">
          <DESCRIPTION>Branch revision number.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="REVINT" address="3" type="u8">
          <DESCRIPTION>Internal revision number.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </REPLY>
        <REPLY name="PATCH" address="4" type="u16" internal="1">
          <DESCRIPTION>ID of applied patch. This is also the last 2 bytes in the associated patch file (*.csg).</DESCRIPTION>
          <DESCRIPTION>0x0000 = No patch applied.</DESCRIPTION>
        </REPLY>
        <REPLY name="FUNC" address="6" type="u8">
          <DESCRIPTION>Current functional mode.</DESCRIPTION>
          <ENUMERATION value="0" name="BOOT">
            <DESCRIPTION>Part is currently in boot mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="MAIN">
            <DESCRIPTION>Part is currently in running main application image.</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
        <REPLY name="SVNFLAGS" address="7" type="bitfield" internal="1">
          <FIELD name="LOCALMOD" lsb="0" size="1">
            <DESCRIPTION>If set, image has local modifications. MAJOR, MINOR and BUILD will be 0.</DESCRIPTION>
          </FIELD>
          <FIELD name="MIXEDREV" lsb="1" size="1">
            <DESCRIPTION>If set, image has mixed revisions. MAJOR, MINOR and BUILD will be 0.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOCATION" lsb="4" size="2">
            <DESCRIPTION>Trunk, Branch or Tag.</DESCRIPTION>
            <ENUMERATION value="0" name="TAG">
              <DESCRIPTION>Built from a SVN Tag.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="BRANCH">
              <DESCRIPTION>Built from a SVN Branch. MAJOR, MINOR and BUILD will be 0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2" name="TRUNK">
              <DESCRIPTION>Built from the SVN Trunk. MAJOR, MINOR and BUILD will be 0.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="SVNREV" address="8" type="u32" internal="1">
          <DESCRIPTION>Subversion revision image was built from.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="POWER_UP" value="0x02" feature="boot" dev="1" wip="0">
      <SUMMARY>Power-up device and mode selection. Modes include operational function.</SUMMARY>
      <DESCRIPTION>Power-up the device with the specified function.  Power-up is complete when the CTS bit is set. This command may  take longer to set the CTS bit than other commands.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="BOOT_OPTIONS" address="1" type="bitfield">
          <FIELD name="FUNC" lsb="0" size="6">
            <DESCRIPTION>Selects the boot function of the device.</DESCRIPTION>
            <ENUMERATION value="0" name="BOOT" internal="1">
              <DESCRIPTION>Stay in boot mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="MAIN">
              <DESCRIPTION>Boot main application image.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="63" name="LOADED" internal="1">
              <DESCRIPTION>Image already loaded, just boot.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="PATCH" lsb="7" size="1">
            <DESCRIPTION>Select patch mode.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Copy selected functional image from otp and boot device.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Indicates a patch has been applied.  Validate patched image matches function selected and boot.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="XTAL_OPTIONS" address="2" type="bitfield">
          <FIELD name="TCXO" lsb="0" size="1">
            <DESCRIPTION>Select if TCXO is in use.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>XTAL is not TCXO.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>XTAL is TCXO.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="XO_FREQ" address="3" type="u32">
          <DESCRIPTION>Frequency of TCXO or external crystal oscillator in Hz. The default is 30000000 (30 MHz).</DESCRIPTION>
          <RANGE min="25000000" max="32000000" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="RAM_TEST" value="0x03" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>Tests the contents and operation of RAM.</SUMMARY>
      <DESCRIPTION>Calculate CRC of RAMs selected by MEMORY mask.  CRC is calculated before other operations are performed.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="OPERATION" address="1" type="bitfield">
          <DESCRIPTION>Indicates RAM test operation to perform.  Only one bit should be set at a time.</DESCRIPTION>
          <FIELD name="CRC_EN" size="1" lsb="0">
            <DESCRIPTION>If set, compute CRC started at CRC_START_ADDR over CRC_SIZE bytes.</DESCRIPTION>
          </FIELD>
          <FIELD name="MCUPX_RAM_TEST" size="1" lsb="7">
            <DESCRIPTION>If set, run RAM test on MCUPX RAM.  When tests are complete part should be reset.   Simple fills ram with alternating pattern of RAM_TEST_FILL_BYTE and ~RAM_TEST_FILL_BYTE.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CRC_START_ADDR" address="2" type="u16">
          <DESCRIPTION>Address to start CRC calculation at:              RAM starts at 0x4000 and is 2k in size,           ROM starts at 0x8000 and is 16k in size,          OTP starts at 0xC000 and is 8k in size</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="CRC_SIZE" address="4" type="u16">
          <DESCRIPTION>Number of bytes to calculate CRC over.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RAM_TEST_FILL_BYTE" address="6" type="u8">
          <DESCRIPTION>Fill byte to run RAM test with.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RESULT" address="1" type="bitfield">
          <FIELD name="RAM_TEST_PASS" lsb="0" size="1">
            <DESCRIPTION>Indicates if the ram test passed or failed.</DESCRIPTION>
            <ENUMERATION value="0" name="FAILED">
              <DESCRIPTION>RAM Test Failed.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="PASSED">
              <DESCRIPTION>RAM Test Passed.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="OTP_CRC" address="2" type="u16">
          <DESCRIPTION>CRC of application from OTP.</DESCRIPTION>
        </REPLY>
        <REPLY name="CRC" address="4" type="u16">
          <DESCRIPTION>CRC of selected memory.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_IMAGE" value="0x04" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>Loads image from NVM/ROM into RAM.</SUMMARY>
      <DESCRIPTION>Loads the selected function into RAM for execution or patching.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FLAGS" address="1" type="bitfield">
          <FIELD name="FUNC" lsb="0" size="4">
            <DESCRIPTION>Selects the image to load.</DESCRIPTION>
            <ENUMERATION value="0" name="BOOT">
              <DESCRIPTION>Boot Loader - No image is loaded.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRX">
              <DESCRIPTION>Transceiver.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="VERIFYCRC" lsb="5" size="1" internal="1">
            <DESCRIPTION>Verify CRC. If no match, do not load NVM and report error. Set in patches along with CRC.</DESCRIPTION>
          </FIELD>
          <FIELD name="NONVM" lsb="4" size="1" internal="1">
            <DESCRIPTION>Do not load image from NVM, this is a full download.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CRC" address="2" internal="1" type="u16">
          <DESCRIPTION>
            CRC value which the RAMs must match after the image is loaded. If VERIFYCRC is not set,  then the CRC supplied is ignored. If the CRC does not match,  no <REFERENCE>PATCH_ARGS</REFERENCE>, <REFERENCE>PATCH_DATA</REFERENCE>, <REFERENCE>PATCH_COPY</REFERENCE> or <REFERENCE>POWER_UP</REFERENCE> commands will be accepted.  This condition can be cleared by sending another PATCH_IMAGE command with VERIFYCRC cleared.
          </DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED1" address="4" type="u8" internal="1">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED2" address="5" type="u8" internal="1">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="KEY1" address="6" type="u8" internal="1">
          <DESCRIPTION>decryption key1 for patch.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="KEY2" address="7" type="u8" internal="1">
          <DESCRIPTION>decryption key2 for patch.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_ARGS" value="0x05" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Initialize parameters for patching.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PIP" address="1" type="u8">
          <DESCRIPTION>Patch In Progress. This bit is set in all but the final PATCH_ARGS command.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED1" address="2" type="u8">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="RESERVED2" address="5" type="u8">
          <DESCRIPTION>Not used in this product.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="CRC" address="6" type="u16">
          <DESCRIPTION>
            Validates the data loaded from patch commands. If the CRC fails, no further <REFERENCE>PATCH_DATA</REFERENCE>, <REFERENCE>PATCH_ARGS</REFERENCE>, <REFERENCE>PATCH_COPY</REFERENCE> or <REFERENCE>POWER_UP</REFERENCE> commands will be accepted.
          </DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_DATA" value="0xE0" feature="boot" dev="1" wip="0" internal="1">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Load patch data. Technically, there are 16 PATCH_DATA commands 0x10-0x1F. CMD[2:0]  is the number of valid bytes in the command. CMD[3] is the LSB of the CRC.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS internal="1">
        <PARAMETER name="DATA0" address="1" type="u8">
          <DESCRIPTION>encrypted patch data byte to load into RAM.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="2" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="3" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="4" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="5" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA5" address="6" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA6" address="7" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA7" address="8" type="u8">
          <DESCRIPTION>...</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_COPY" value="0x06" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>Patch RAM by copying from ROM/RAM/NVM to RAMs.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SRC_ADDR" address="1" type="u16">
          <DESCRIPTION>Memory Controller source address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DST_ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="COUNT" address="5" type="u16">
          <DESCRIPTION>Number of bytes to copy.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PATCH_COPY_2" value="0x0A" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>*ENCRYPTED* Reserved command used for patch file downloads.</SUMMARY>
      <DESCRIPTION>
        This is the same command as <REFERENCE>PATCH_COPY</REFERENCE> with the lsb of the CRC set.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SRC_ADDR" address="1" type="u16">
          <DESCRIPTION>Memory Controller source address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DST_ADDR" address="3" type="u16">
          <DESCRIPTION>Memory Controller destination address for copy.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="COUNT" address="5" type="u16">
          <DESCRIPTION>Number of bytes to copy.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="TEST_DATA" value="0x09" feature="boot" internal="1" dev="1" wip="0">
      <SUMMARY>Read NVM Test Data block.</SUMMARY>
      <DESCRIPTION>Reports Test Data block read from NVM.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="OFFSET" address="1" type="u8">
          <DESCRIPTION>Offset in test data block to begin reading at.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="TEST0" address="1" type="u8">
        </REPLY>
        <REPLY name="TEST1" address="2" type="u8">
        </REPLY>
        <REPLY name="TEST2" address="3" type="u8">
        </REPLY>
        <REPLY name="TEST3" address="4" type="u8">
        </REPLY>
        <REPLY name="TEST4" address="5" type="u8">
        </REPLY>
        <REPLY name="TEST5" address="6" type="u8">
        </REPLY>
        <REPLY name="TEST6" address="7" type="u8">
        </REPLY>
        <REPLY name="TEST7" address="8" type="u8">
        </REPLY>
        <REPLY name="TEST8" address="9" type="u8">
        </REPLY>
        <REPLY name="TEST9" address="10" type="u8">
        </REPLY>
        <REPLY name="TESTA" address="11" type="u8">
        </REPLY>
        <REPLY name="TESTB" address="12" type="u8">
        </REPLY>
        <REPLY name="TESTC" address="13" type="u8">
        </REPLY>
        <REPLY name="TESTD" address="14" type="u8">
        </REPLY>
        <REPLY name="TESTE" address="15" type="u8">
        </REPLY>
        <REPLY name="TESTF" address="16" type="u8">
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_PH_STATUS" value="0x21" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the interrupt status of the Packet Handler Interrupt Group (both STATUS and PENDING).  Optionally, it may be used to clear latched (PENDING) interrupt events.</SUMMARY>
      <DESCRIPTION>Returns the current interrupt status of Packet Handler interrupt events (both STATUS and PENDING) and optionally clears PENDING interrupts.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the <REFERENCE>GET_INT_STATUS</REFERENCE> command for more details regarding the difference between STATUS and PENDING interrupts.
      </DESCRIPTION>
      <DESCRIPTION>
        Sending the <REFERENCE>GET_PH_STATUS</REFERENCE> command with NO input parameter results in clearing all of the PENDING interrupts.
      </DESCRIPTION>
      <DESCRIPTION>When PENDING interrupts are being cleared, the reply stream reflects their status prior to clearing.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PH_CLR_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending RX_FIFO_ALMOST_FULL interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND_CLR" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear any pending TX_FIFO_ALMOST_EMPTY interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="ALT_CRC_ERROR_PEND_CLR" lsb="2" size="1" feature="rx" internal="1">
            <DESCRIPTION>If clear, Clear any pending ALT_CRC_ERROR interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending CRC_ERROR interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending PACKET_RX interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND_CLR" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear any pending PACKET_SENT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND_CLR" lsb="6" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending FILTER_MISS interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND_CLR" lsb="7" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending FILTER_MATCH interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="PH_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the RX_FIFO_ALMOST_FULL status bit has been detected and therefore a RX_FIFO_ALMOST_FULL interrupt is pending.  See associated RX_FIFO_ALMOST_FULL status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, a rising edge of the TX_FIFO_ALMOST_EMPTY status bit has been detected and therefore a TX_FIFO_ALMOST_EMPTY interrupt is pending.  See associated TX_FIFO_ALMOST_EMPTY status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="ALT_CRC_ERROR_PEND" lsb="2" size="1" feature="rx" internal="1">
            <DESCRIPTION>If set, a rising edge of the ALT_CRC_ERROR status bit has been detected and therefore a ALT_CRC_ERROR interrupt is pending.  See associated ALT_CRC_ERROR status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the CRC_ERROR status bit has been detected and therefore a CRC_ERROR interrupt is pending.  See associated CRC_ERROR status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the PACKET_RX status bit has been detected and therefore a PACKET_RX interrupt is pending.  See associated PACKET_RX status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, a rising edge of the PACKET_SENT status bit has been detected and therefore a PACKET_SENT interrupt is pending.  See associated PACKET_SENT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND" lsb="6" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the FILTER_MISS status bit has been detected and therefore a FILTER_MISS interrupt is pending.  See associated FILTER_MISS status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND" lsb="7" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the FILTER_MATCH status bit has been detected and therefore a FILTER_MATCH interrupt is pending.  See associated FILTER_MATCH status bit for more details.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_STATUS" address="2" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL" lsb="0" size="1" feature="rx">
            <DESCRIPTION>
              Set to indicate that the number of bytes stored in the RX FIFO is equal to or greater than the <REFERENCE>PKT_RX_THRESHOLD</REFERENCE> value.  This interrupt may be used to signal the host MCU to read more data bytes from the RX FIFO, thus providing a means for handling packets with lengths greater than the size of the RX FIFO (i.e., 64 bytes, or 129 bytes in shared FIFO mode).  Cleared if the amount of data in the RX FIFO is less than the <REFERENCE>PKT_TX_THRESHOLD</REFERENCE> value.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY" lsb="1" size="1" feature="tx">
            <DESCRIPTION>
              Set to indicate that the amount of space in the TX FIFO is equal to or greater than the <REFERENCE>PKT_TX_THRESHOLD</REFERENCE> value.  This interrupt may be used to signal the host MCU to store more data bytes into the TX FIFO, thus providing a means for handling packets with lengths greater than the size of the TX FIFO (i.e., 64 bytes, or 129 bytes in shared FIFO mode).  Cleared if the amount of data in the TX FIFO is less than the <REFERENCE>PKT_TX_THRESHOLD</REFERENCE> value.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="ALT_CRC_ERROR" lsb="2" size="1" feature="rx" internal="1">
            <DESCRIPTION>
              Set to indicate that the received CRC checksum byte(s) do not match the calculated alternate CRC checksum value. For the difference between the two CRC engines (CRC, ALT_CRC), see <REFERENCE>PKT_CRC_CONFIG</REFERENCE> property.  Cleared upon entry into RX state or if RX is restarted.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>Set to indicate that the received CRC checksum byte(s) do not match the calculated CRC checksum value.  Cleared upon entry into RX state or if RX is restarted.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX" lsb="4" size="1" feature="rx">
            <DESCRIPTION>Set to indicate that the expected number of data bytes have been successfully received and placed in the RX FIFO.  All enabled Packet Handler functions (e.g., CRC check, Filter Matching) must be successfully completed in order to generate a PACKET_RX interrupt.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT" lsb="5" size="1" feature="tx">
            <DESCRIPTION>Set to indicate that data bytes in the TX FIFO were transmitted successfully.  Cleared upon entry into TX state.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS" lsb="6" size="1" feature="rx">
            <DESCRIPTION>Set to indicate the incoming packet was discarded because filter did not match.  Cleared upon entry into RX state, or if RX is restarted.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH" lsb="7" size="1" feature="rx">
            <DESCRIPTION>Set to indicate the incoming packet matched filter.  Cleared upon entry into RX state, or if RX is restarted.</DESCRIPTION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_MODEM_STATUS" value="0x22" feature="rx" dev="1" wip="0">
      <SUMMARY>Returns the interrupt status of the Modem Interrupt Group (both STATUS and PENDING).  Optionally, it may be used to clear latched (PENDING) interrupt events.</SUMMARY>
      <DESCRIPTION>Returns the current interrupt status of Modem interrupt events (both STATUS and PENDING) and optionally clears PENDING interrupts.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the <REFERENCE>GET_INT_STATUS</REFERENCE> command for more details regarding the difference between STATUS and PENDING interrupts.
      </DESCRIPTION>
      <DESCRIPTION>
        Sending the <REFERENCE>GET_MODEM_STATUS</REFERENCE> command with NO input parameter results in clearing all of the PENDING interrupts.
      </DESCRIPTION>
      <DESCRIPTION>When PENDING interrupts are being cleared, the reply stream reflects their status prior to clearing.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="MODEM_CLR_PEND" address="1" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending SYNC_DETECT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND_CLR" lsb="1" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending PREAMBLE_DETECT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND_CLR" lsb="2" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending INVALID_PREAMBLE interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending RSSI interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending RSSI_JUMP interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND_CLR" lsb="5" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending INVALID_SYNC interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="POSTAMBLE_DETECT_PEND_CLR" lsb="6" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending POSTAMBLE_DETECT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_LATCH_PEND_CLR" lsb="7" size="1" feature="unreleased">
            <DESCRIPTION>If clear, Clear any pending RSSI_LATCH interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="MODEM_PEND" address="1" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the SYNC_DETECT status bit has been detected and therefore a SYNC_DETECT interrupt is pending.  See associated SYNC_DETECT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND" lsb="1" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the PREAMBLE_DETECT status bit has been detected and therefore a PREAMBLE_DETECT interrupt is pending.  See associated PREAMBLE_DETECT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND" lsb="2" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the INVALID_PREAMBLE status bit has been detected and therefore a INVALID_PREAMBLE interrupt is pending.  See associated INVALID_PREAMBLE status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the RSSI status bit has been detected and therefore a RSSI interrupt is pending.  See associated RSSI status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the RSSI_JUMP status bit has been detected and therefore a RSSI_JUMP interrupt is pending.  See associated RSSI_JUMP status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND" lsb="5" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the INVALID_SYNC status bit has been detected and therefore a INVALID_SYNC interrupt is pending.  See associated INVALID_SYNC status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="POSTAMBLE_DETECT_PEND" lsb="6" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the POSTAMBLE_DETECT status bit has been detected and therefore a POSTAMBLE_DETECT interrupt is pending.  See associated POSTAMBLE_DETECT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_LATCH_PEND" lsb="7" size="1" feature="unreleased">
            <DESCRIPTION>If set, a rising edge of the RSSI_LATCH status bit has been detected and therefore a RSSI_LATCH interrupt is pending.  See associated RSSI_LATCH status bit for more details.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_STATUS" address="2" type="bitfield">
          <FIELD name="SYNC_DETECT" lsb="0" size="1" feature="rx">
            <DESCRIPTION>Set when the received Sync Word pattern matched the pattern of bits defined in the SYNC_BITS_XX properties.  Cleared when a packet is received (valid or invalid), upon entry into RX state, or if RX is restarted.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT" lsb="1" size="1" feature="rx">
            <DESCRIPTION>
              Set when a pattern of bits was received that matched the expected Preamble pattern.  If configured to receive a standard preamble, the expected pattern of bits is '...010101...' with a threshold length defined in <REFERENCE>PREAMBLE_CONFIG_STD_1</REFERENCE>.  If configured to receive a non-standard preamble, the expected pattern of bits is defined by the PREAMBLE_PATTERN_XX and the <REFERENCE>PREAMBLE_CONFIG_NSTD</REFERENCE> properties.  Cleared when SYNC is detected, upon entering RX state, or RX is restarted.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE" lsb="2" size="1" feature="rx">
            <DESCRIPTION>
              Self clearing signal that pulses high indicating that one of the following has occurred:  a) a valid Preamble was not detected within the allowed search timeout period, or b) the Latched RSSI value is below the <REFERENCE>MODEM_RSSI_THRESH</REFERENCE> value and the chip has been enabled to check for this condition.  The search timeout period for Preamble is configured in <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>, while the CHECK_THRESH_AT_LATCH function is configured in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI" lsb="3" size="1" feature="rx">
            <DESCRIPTION>
              Set if the current RSSI value has exceeded the threshold value defined in the <REFERENCE>MODEM_RSSI_THRESH</REFERENCE> property.  Cleared upon entry into RX state or if RX is restarted.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP" lsb="4" size="1" feature="rx">
            <DESCRIPTION>
              Self clearing signal that pulses high when the Current RSSI value jumps by more than the threshold value defined in the <REFERENCE>MODEM_RSSI_JUMP_THRESH</REFERENCE> property.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC" lsb="5" size="1" feature="rx">
            <DESCRIPTION>
              Self clearing signal that pulses high when a valid Sync Word (matching the pattern of bits defined in the SYNC_BITS_XX properties) was not detected within the allowed search timeout period.  If configured to receive a standard preamble, the search timeout period is Sync Word Length + 4bits.  If configured to receive a non-standard preamble, the search timeout period is defined by the <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE> property.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="POSTAMBLE_DETECT" lsb="6" size="1" feature="rx">
            <DESCRIPTION>
              Set if 1-4 bytes of received data matches the pattern of bits defined in the POSTAMBLE_PATTERN_XX properties.  Postamble detection must also be enabled in the <REFERENCE>PREAMBLE_POSTAMBLE_CONFIG</REFERENCE> property.  Cleared upon entry into RX, or if RX is restarted.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_LATCH" lsb="7" size="1" feature="unreleased">
            <DESCRIPTION>
              Set if the latched RSSI value (defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE> has exceeded the threshold value defined in the <REFERENCE>MODEM_RSSI_THRESH</REFERENCE> property.  Cleared upon entry into RX state or if RX is restarted.
            </DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CURR_RSSI" address="3" type="u8">
          <DESCRIPTION>Current RSSI reading from the modem.</DESCRIPTION>
        </REPLY>
        <REPLY name="LATCH_RSSI" address="4" type="u8">
          <DESCRIPTION>
            Latched RSSI reading from the modem as configured by <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>.  Reset to 0 upon entering RX mode or if RX is restarted.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="ANT1_RSSI" address="5" type="u8">
          <DESCRIPTION>RSSI of ANT1 during evaluation of the antenna diversity algorithm. The RSSI value is latched during Preamble evaluation and is available for reading only after detection of Sync Word.</DESCRIPTION>
        </REPLY>
        <REPLY name="ANT2_RSSI" address="6" type="u8">
          <DESCRIPTION>RSSI of ANT2 during evaluation of the antenna diversity algorithm. The RSSI value is latched during Preamble evaluation and is available for reading only after detection of Sync Word.</DESCRIPTION>
        </REPLY>
        <REPLY name="AFC_FREQ_OFFSET" address="7" type="u16">
          <DESCRIPTION>The AFC value that is generated by the PLL AFC feedback loop during receive mode.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_CHIP_STATUS" value="0x23" feature="pro2" dev="1" wip="0">
      <SUMMARY>Returns the interrupt status of the Chip Interrupt Group (both STATUS and PENDING).  Optionally, it may be used to clear latched (PENDING) interrupt events.</SUMMARY>
      <DESCRIPTION>Returns the current interrupt status of Chip interrupt events (both STATUS and PENDING) and optionally clears PENDING interrupts.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the <REFERENCE>GET_INT_STATUS</REFERENCE> command for more details regarding the difference between STATUS and PENDING interrupts.
      </DESCRIPTION>
      <DESCRIPTION>
        Sending the <REFERENCE>GET_CHIP_STATUS</REFERENCE> command with NO input parameter results in clearing all of the PENDING interrupts.
      </DESCRIPTION>
      <DESCRIPTION>When PENDING interrupts are being cleared, the reply stream reflects their status prior to clearing.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1</APIUPDATED>
      <INPUT_DETAILS>
        <PARAMETER name="CHIP_CLR_PEND" address="1" type="bitfield">
          <FIELD name="WUT_PEND_CLR" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear any pending WUT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND_CLR" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear any pending LOW_BATT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear any pending CHIP_READY interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear any pending CMD_ERROR interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear any pending STATE_CHANGE interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear any pending FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND_CLR" lsb="6" size="1">
            <DESCRIPTION>If clear, Clear any pending CAL interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CHIP_PEND" address="1" type="bitfield">
          <FIELD name="WUT_PEND" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, a rising edge of the WUT status bit has been detected and therefore a WUT interrupt is pending.  See associated WUT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, a rising edge of the LOW_BATT status bit has been detected and therefore a LOW_BATT interrupt is pending.  See associated LOW_BATT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, a rising edge of the CHIP_READY status bit has been detected and therefore a CHIP_READY interrupt is pending.  See associated CHIP_READY status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, a rising edge of the CMD_ERROR status bit has been detected and therefore a CMD_ERROR interrupt is pending.  See associated CMD_ERROR status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, a rising edge of the STATE_CHANGE status bit has been detected and therefore a STATE_CHANGE interrupt is pending.  See associated STATE_CHANGE status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, a rising edge of the FIFO_UNDERFLOW_OVERFLOW_ERROR status bit has been detected and therefore a FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt is pending.  See associated FIFO_UNDERFLOW_OVERFLOW_ERROR status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND" lsb="6" size="1">
            <DESCRIPTION>If set, a rising edge of the CAL status bit has been detected and therefore a CAL interrupt is pending.  See associated CAL status bit for more details.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_STATUS" address="2" type="bitfield">
          <FIELD name="WUT" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>
              Set to indicate the battery voltage is below the threshold set by <REFERENCE>GLOBAL_LOW_BATT_THRESH</REFERENCE>.  Cleared to indicate the battery voltage is above the threshold set by <REFERENCE>GLOBAL_LOW_BATT_THRESH</REFERENCE>.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>Self clearing signal that pulses high to indicate the WUT (Wake-up timer) has expired.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY" lsb="2" size="1">
            <DESCRIPTION>Set to indicate the chip (upon completion of the POWER_UP sequence) has reached the state where it is ready to accept commands, or when the IR calibration process is completed.  Cleared when the chip is shutdown or when IR calibration has begun.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR" lsb="3" size="1">
            <DESCRIPTION>Self clearing signal that pulses high to indicate an error has occurred in the processing of a command. For example, an incorrect command/property ID is sent, or an attempt was made to write a property that is outside of the given property group.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE" lsb="4" size="1">
            <DESCRIPTION>Set to indicate a successful transition from one state to another operating state.  Cleared when a state transition is in progress.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR" lsb="5" size="1">
            <DESCRIPTION>
              Set to indicate that the number of received or transmitted bytes exceeds the size of the RX or TX FIFO, respectively (i.e., 64 bytes for each FIFO, or 129 bytes when sharing the FIFO).  Upon such an underflow/overflow event, the FIFO(s) will need to be reset.  Cleared by issuing a <REFERENCE>FIFO_INFO</REFERENCE> command to reset the FIFOs.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="CAL" lsb="6" size="1">
            <DESCRIPTION>Self clearing signal that pulses high to indicate a RC32K calibration event is pending. If this occurs, the RC32K oscillator will be calibrated on the next transition to Sleep/Standby state.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CMD_ERR_STATUS" address="3" type="bitfield">
          <FIELD name="CMD_ERR_STATUS" lsb="0" size="8">
            <DESCRIPTION>Last command error cause.  Only valid if CMD_ERROR status bit is set.</DESCRIPTION>
            <ENUMERATION value="0x00" name="CMD_ERROR_NONE">
              <DESCRIPTION>No error.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x10" name="CMD_ERROR_BAD_COMMAND">
              <DESCRIPTION>Bad command issued.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x11" name="CMD_ERROR_BAD_ARG">
              <DESCRIPTION>Argment(s) in issued command were invalid.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x12" name="CMD_ERROR_COMMAND_BUSY">
              <DESCRIPTION>Command was issued before previous command was completed.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x20" name="CMD_ERROR_BAD_NVM" internal="1">
              <DESCRIPTION>Bad NVM detected.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x30" name="CMD_ERROR_BAD_PATCH" internal="1">
              <DESCRIPTION>Bad patch detected.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x31" name="CMD_ERROR_BAD_BOOTMODE">
              <DESCRIPTION>Invalid bootmode supplied.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x40" name="CMD_ERROR_BAD_PROPERTY">
              <DESCRIPTION>Bad Property ID was provided.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0xF0" name="CMD_ERROR_INTERNAL_PH_FIFO" internal="1">
              <DESCRIPTION>Occurs when the internal packet handler FIFOs underflow or overflow.  Can be caused by a user FIFO underflow on TX or the firmware not keeping up with the datarate.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_INT_STATUS" value="0x20" dev="1" wip="0" feature="common">
      <SUMMARY>Returns the interrupt status of ALL the possible interrupt events (both STATUS and PENDING).  Optionally, it may be used to clear latched (PENDING) interrupt events.</SUMMARY>
      <DESCRIPTION>Returns the current interrupt status of ALL the possible interrupt events (both STATUS and PENDING) and optionally clears PENDING interrupts.</DESCRIPTION>
      <DESCRIPTION>STATUS indicates the current state of an internal interrupt event such as preamble/sync word detection, packet sent/received, etc.  For example, PREAMBLE_DETECT is low before detection of a valid preamble, but goes high when the preamble arrives and is successfully detected.  STATUS is cleared automatically upon termination or cessation of the corresponding internal interrupt event.</DESCRIPTION>
      <DESCRIPTION>
        PENDING simply latches the rising edge of the corresponding STATUS, and does not change until cleared by a <REFERENCE>GET_INT_STATUS</REFERENCE> command (or <REFERENCE>GET_CHIP_STATUS</REFERENCE>, <REFERENCE>GET_PH_STATUS</REFERENCE>, <REFERENCE>GET_MODEM_STATUS</REFERENCE>).  For example, PREAMBLE_DETECT_PEND is low before detection of a valid preamble, goes high with PREAMBLE_DETECT, and remains high until cleared.
      </DESCRIPTION>
      <DESCRIPTION>
        It is possible to poll for interrupts by reading the STATUS and PENDING response bytes, as they are always up-to-date.  Additionally, PENDING interrupts may generate a HW interrupt on the NIRQ output pin, if the interrupt is enabled via <REFERENCE>INT_CTL_ENABLE</REFERENCE>, <REFERENCE>INT_CTL_PH_ENABLE</REFERENCE>, <REFERENCE>INT_CTL_MODEM_ENABLE</REFERENCE>, and <REFERENCE>INT_CTL_CHIP_ENABLE</REFERENCE> properties.
      </DESCRIPTION>
      <DESCRIPTION>
        Sending the <REFERENCE>GET_INT_STATUS</REFERENCE> command with NO input parameters results in clearing all of the PENDING interrupts.
      </DESCRIPTION>
      <DESCRIPTION>When PENDING interrupts are being cleared, the reply stream reflects their status prior to clearing.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PH_CLR_PEND" address="1" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending RX_FIFO_ALMOST_FULL interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND_CLR" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear any pending TX_FIFO_ALMOST_EMPTY interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="ALT_CRC_ERROR_PEND_CLR" lsb="2" size="1" feature="rx" internal="1">
            <DESCRIPTION>If clear, Clear any pending ALT_CRC_ERROR interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending CRC_ERROR interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending PACKET_RX interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND_CLR" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If clear, Clear any pending PACKET_SENT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND_CLR" lsb="6" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending FILTER_MISS interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND_CLR" lsb="7" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending FILTER_MATCH interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="MODEM_CLR_PEND" address="2" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND_CLR" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending SYNC_DETECT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND_CLR" lsb="1" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending PREAMBLE_DETECT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND_CLR" lsb="2" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending INVALID_PREAMBLE interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND_CLR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending RSSI interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND_CLR" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending RSSI_JUMP interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND_CLR" lsb="5" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending INVALID_SYNC interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="POSTAMBLE_DETECT_PEND_CLR" lsb="6" size="1" feature="rx">
            <DESCRIPTION>If clear, Clear any pending POSTAMBLE_DETECT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_LATCH_PEND_CLR" lsb="7" size="1" feature="unreleased">
            <DESCRIPTION>If clear, Clear any pending RSSI_LATCH interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="CHIP_CLR_PEND" address="3" type="bitfield">
          <FIELD name="WUT_PEND_CLR" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear any pending WUT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND_CLR" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If clear, Clear any pending LOW_BATT interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND_CLR" lsb="2" size="1">
            <DESCRIPTION>If clear, Clear any pending CHIP_READY interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND_CLR" lsb="3" size="1">
            <DESCRIPTION>If clear, Clear any pending CMD_ERROR interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND_CLR" lsb="4" size="1">
            <DESCRIPTION>If clear, Clear any pending STATE_CHANGE interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND_CLR" lsb="5" size="1">
            <DESCRIPTION>If clear, Clear any pending FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND_CLR" lsb="6" size="1">
            <DESCRIPTION>If clear, Clear any pending CAL interrupt. If set, leave interrupt pending.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="INT_PEND" address="1" type="bitfield">
          <FIELD name="PH_INT_PEND" lsb="0" size="1">
            <DESCRIPTION>If set, an enabled PH_PEND bit is set indicating an interrupt is pending. See the PH_STATUS field for the triggering events within the Packet Handler Interrupt group.</DESCRIPTION>
          </FIELD>
          <FIELD name="MODEM_INT_PEND" lsb="1" size="1">
            <DESCRIPTION>If set, an enabled MODEM_PEND bit is set indicating an interrupt is pending. See the MODEM_STATUS field for the triggering events within the Modem Interrupt group.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_INT_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, an enabled CHIP_PEND bit is set indicating an interrupt is pending. See the CHIP_STATUS field for the triggering events within the Chip Interrupt group.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="INT_STATUS" address="2" type="bitfield">
          <FIELD name="PH_INT_STATUS" lsb="0" size="1">
            <DESCRIPTION>If set, the Packet Handler Interrupt group has an interrupt pending. See the PH_PEND field for the triggering events within the Packet Handler Interrupt group.</DESCRIPTION>
          </FIELD>
          <FIELD name="MODEM_INT_STATUS" lsb="1" size="1">
            <DESCRIPTION>If set, the Modem Interrupt group has an interrupt pending. See the PH_PEND field for the triggering events within the Modem Interrupt group.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_INT_STATUS" lsb="2" size="1">
            <DESCRIPTION>If set, the Chip Status Interrupt group has an interrupt pending. See the PH_PEND field for the triggering events within the Chip Status Interrupt group.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_PEND" address="3" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the RX_FIFO_ALMOST_FULL status bit has been detected and therefore a RX_FIFO_ALMOST_FULL interrupt is pending.  See associated RX_FIFO_ALMOST_FULL status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY_PEND" lsb="1" size="1" feature="tx">
            <DESCRIPTION>If set, a rising edge of the TX_FIFO_ALMOST_EMPTY status bit has been detected and therefore a TX_FIFO_ALMOST_EMPTY interrupt is pending.  See associated TX_FIFO_ALMOST_EMPTY status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="ALT_CRC_ERROR_PEND" lsb="2" size="1" feature="rx" internal="1">
            <DESCRIPTION>If set, a rising edge of the ALT_CRC_ERROR status bit has been detected and therefore a ALT_CRC_ERROR interrupt is pending.  See associated ALT_CRC_ERROR status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the CRC_ERROR status bit has been detected and therefore a CRC_ERROR interrupt is pending.  See associated CRC_ERROR status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the PACKET_RX status bit has been detected and therefore a PACKET_RX interrupt is pending.  See associated PACKET_RX status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT_PEND" lsb="5" size="1" feature="tx">
            <DESCRIPTION>If set, a rising edge of the PACKET_SENT status bit has been detected and therefore a PACKET_SENT interrupt is pending.  See associated PACKET_SENT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS_PEND" lsb="6" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the FILTER_MISS status bit has been detected and therefore a FILTER_MISS interrupt is pending.  See associated FILTER_MISS status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH_PEND" lsb="7" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the FILTER_MATCH status bit has been detected and therefore a FILTER_MATCH interrupt is pending.  See associated FILTER_MATCH status bit for more details.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="PH_STATUS" address="4" type="bitfield">
          <FIELD name="RX_FIFO_ALMOST_FULL" lsb="0" size="1" feature="rx">
            <DESCRIPTION>
              Set to indicate that the number of bytes stored in the RX FIFO is equal to or greater than the <REFERENCE>PKT_RX_THRESHOLD</REFERENCE> value.  This interrupt may be used to signal the host MCU to read more data bytes from the RX FIFO, thus providing a means for handling packets with lengths greater than the size of the RX FIFO (i.e., 64 bytes, or 129 bytes in shared FIFO mode).  Cleared if the amount of data in the RX FIFO is less than the <REFERENCE>PKT_TX_THRESHOLD</REFERENCE> value.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="TX_FIFO_ALMOST_EMPTY" lsb="1" size="1" feature="tx">
            <DESCRIPTION>
              Set to indicate that the amount of space in the TX FIFO is equal to or greater than the <REFERENCE>PKT_TX_THRESHOLD</REFERENCE> value.  This interrupt may be used to signal the host MCU to store more data bytes into the TX FIFO, thus providing a means for handling packets with lengths greater than the size of the TX FIFO (i.e., 64 bytes, or 129 bytes in shared FIFO mode).  Cleared if the amount of data in the TX FIFO is less than the <REFERENCE>PKT_TX_THRESHOLD</REFERENCE> value.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="ALT_CRC_ERROR" lsb="2" size="1" feature="rx" internal="1">
            <DESCRIPTION>
              Set to indicate that the received CRC checksum byte(s) do not match the calculated alternate CRC checksum value. For the difference between the two CRC engines (CRC, ALT_CRC), see <REFERENCE>PKT_CRC_CONFIG</REFERENCE> property.  Cleared upon entry into RX state or if RX is restarted.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="CRC_ERROR" lsb="3" size="1" feature="rx">
            <DESCRIPTION>Set to indicate that the received CRC checksum byte(s) do not match the calculated CRC checksum value.  Cleared upon entry into RX state or if RX is restarted.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_RX" lsb="4" size="1" feature="rx">
            <DESCRIPTION>Set to indicate that the expected number of data bytes have been successfully received and placed in the RX FIFO.  All enabled Packet Handler functions (e.g., CRC check, Filter Matching) must be successfully completed in order to generate a PACKET_RX interrupt.</DESCRIPTION>
          </FIELD>
          <FIELD name="PACKET_SENT" lsb="5" size="1" feature="tx">
            <DESCRIPTION>Set to indicate that data bytes in the TX FIFO were transmitted successfully.  Cleared upon entry into TX state.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MISS" lsb="6" size="1" feature="rx">
            <DESCRIPTION>Set to indicate the incoming packet was discarded because filter did not match.  Cleared upon entry into RX state, or if RX is restarted.</DESCRIPTION>
          </FIELD>
          <FIELD name="FILTER_MATCH" lsb="7" size="1" feature="rx">
            <DESCRIPTION>Set to indicate the incoming packet matched filter.  Cleared upon entry into RX state, or if RX is restarted.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_PEND" address="5" type="bitfield">
          <FIELD name="SYNC_DETECT_PEND" lsb="0" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the SYNC_DETECT status bit has been detected and therefore a SYNC_DETECT interrupt is pending.  See associated SYNC_DETECT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT_PEND" lsb="1" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the PREAMBLE_DETECT status bit has been detected and therefore a PREAMBLE_DETECT interrupt is pending.  See associated PREAMBLE_DETECT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE_PEND" lsb="2" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the INVALID_PREAMBLE status bit has been detected and therefore a INVALID_PREAMBLE interrupt is pending.  See associated INVALID_PREAMBLE status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_PEND" lsb="3" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the RSSI status bit has been detected and therefore a RSSI interrupt is pending.  See associated RSSI status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP_PEND" lsb="4" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the RSSI_JUMP status bit has been detected and therefore a RSSI_JUMP interrupt is pending.  See associated RSSI_JUMP status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC_PEND" lsb="5" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the INVALID_SYNC status bit has been detected and therefore a INVALID_SYNC interrupt is pending.  See associated INVALID_SYNC status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="POSTAMBLE_DETECT_PEND" lsb="6" size="1" feature="rx">
            <DESCRIPTION>If set, a rising edge of the POSTAMBLE_DETECT status bit has been detected and therefore a POSTAMBLE_DETECT interrupt is pending.  See associated POSTAMBLE_DETECT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_LATCH_PEND" lsb="7" size="1" feature="unreleased">
            <DESCRIPTION>If set, a rising edge of the RSSI_LATCH status bit has been detected and therefore a RSSI_LATCH interrupt is pending.  See associated RSSI_LATCH status bit for more details.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="MODEM_STATUS" address="6" type="bitfield">
          <FIELD name="SYNC_DETECT" lsb="0" size="1" feature="rx">
            <DESCRIPTION>Set when the received Sync Word pattern matched the pattern of bits defined in the SYNC_BITS_XX properties.  Cleared when a packet is received (valid or invalid), upon entry into RX state, or if RX is restarted.</DESCRIPTION>
          </FIELD>
          <FIELD name="PREAMBLE_DETECT" lsb="1" size="1" feature="rx">
            <DESCRIPTION>
              Set when a pattern of bits was received that matched the expected Preamble pattern.  If configured to receive a standard preamble, the expected pattern of bits is '...010101...' with a threshold length defined in <REFERENCE>PREAMBLE_CONFIG_STD_1</REFERENCE>.  If configured to receive a non-standard preamble, the expected pattern of bits is defined by the PREAMBLE_PATTERN_XX and the <REFERENCE>PREAMBLE_CONFIG_NSTD</REFERENCE> properties.  Cleared when SYNC is detected, upon entering RX state, or RX is restarted.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_PREAMBLE" lsb="2" size="1" feature="rx">
            <DESCRIPTION>
              Self clearing signal that pulses high indicating that one of the following has occurred:  a) a valid Preamble was not detected within the allowed search timeout period, or b) the Latched RSSI value is below the <REFERENCE>MODEM_RSSI_THRESH</REFERENCE> value and the chip has been enabled to check for this condition.  The search timeout period for Preamble is configured in <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>, while the CHECK_THRESH_AT_LATCH function is configured in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI" lsb="3" size="1" feature="rx">
            <DESCRIPTION>
              Set if the current RSSI value has exceeded the threshold value defined in the <REFERENCE>MODEM_RSSI_THRESH</REFERENCE> property.  Cleared upon entry into RX state or if RX is restarted.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_JUMP" lsb="4" size="1" feature="rx">
            <DESCRIPTION>
              Self clearing signal that pulses high when the Current RSSI value jumps by more than the threshold value defined in the <REFERENCE>MODEM_RSSI_JUMP_THRESH</REFERENCE> property.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="INVALID_SYNC" lsb="5" size="1" feature="rx">
            <DESCRIPTION>
              Self clearing signal that pulses high when a valid Sync Word (matching the pattern of bits defined in the SYNC_BITS_XX properties) was not detected within the allowed search timeout period.  If configured to receive a standard preamble, the search timeout period is Sync Word Length + 4bits.  If configured to receive a non-standard preamble, the search timeout period is defined by the <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE> property.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="POSTAMBLE_DETECT" lsb="6" size="1" feature="rx">
            <DESCRIPTION>
              Set if 1-4 bytes of received data matches the pattern of bits defined in the POSTAMBLE_PATTERN_XX properties.  Postamble detection must also be enabled in the <REFERENCE>PREAMBLE_POSTAMBLE_CONFIG</REFERENCE> property.  Cleared upon entry into RX, or if RX is restarted.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="RSSI_LATCH" lsb="7" size="1" feature="unreleased">
            <DESCRIPTION>
              Set if the latched RSSI value (defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE> has exceeded the threshold value defined in the <REFERENCE>MODEM_RSSI_THRESH</REFERENCE> property.  Cleared upon entry into RX state or if RX is restarted.
            </DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_PEND" address="7" type="bitfield">
          <FIELD name="WUT_PEND" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>If set, a rising edge of the WUT status bit has been detected and therefore a WUT interrupt is pending.  See associated WUT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT_PEND" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>If set, a rising edge of the LOW_BATT status bit has been detected and therefore a LOW_BATT interrupt is pending.  See associated LOW_BATT status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY_PEND" lsb="2" size="1">
            <DESCRIPTION>If set, a rising edge of the CHIP_READY status bit has been detected and therefore a CHIP_READY interrupt is pending.  See associated CHIP_READY status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR_PEND" lsb="3" size="1">
            <DESCRIPTION>If set, a rising edge of the CMD_ERROR status bit has been detected and therefore a CMD_ERROR interrupt is pending.  See associated CMD_ERROR status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE_PEND" lsb="4" size="1">
            <DESCRIPTION>If set, a rising edge of the STATE_CHANGE status bit has been detected and therefore a STATE_CHANGE interrupt is pending.  See associated STATE_CHANGE status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_PEND" lsb="5" size="1">
            <DESCRIPTION>If set, a rising edge of the FIFO_UNDERFLOW_OVERFLOW_ERROR status bit has been detected and therefore a FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt is pending.  See associated FIFO_UNDERFLOW_OVERFLOW_ERROR status bit for more details.</DESCRIPTION>
          </FIELD>
          <FIELD name="CAL_PEND" lsb="6" size="1">
            <DESCRIPTION>If set, a rising edge of the CAL status bit has been detected and therefore a CAL interrupt is pending.  See associated CAL status bit for more details.</DESCRIPTION>
          </FIELD>
        </REPLY>
        <REPLY name="CHIP_STATUS" address="8" type="bitfield">
          <FIELD name="WUT" lsb="0" size="1" feature="pro2">
            <DESCRIPTION>
              Set to indicate the battery voltage is below the threshold set by <REFERENCE>GLOBAL_LOW_BATT_THRESH</REFERENCE>.  Cleared to indicate the battery voltage is above the threshold set by <REFERENCE>GLOBAL_LOW_BATT_THRESH</REFERENCE>.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="LOW_BATT" lsb="1" size="1" feature="pro2">
            <DESCRIPTION>Self clearing signal that pulses high to indicate the WUT (Wake-up timer) has expired.</DESCRIPTION>
          </FIELD>
          <FIELD name="CHIP_READY" lsb="2" size="1">
            <DESCRIPTION>Set to indicate the chip (upon completion of the POWER_UP sequence) has reached the state where it is ready to accept commands, or when the IR calibration process is completed.  Cleared when the chip is shutdown or when IR calibration has begun.</DESCRIPTION>
          </FIELD>
          <FIELD name="CMD_ERROR" lsb="3" size="1">
            <DESCRIPTION>Self clearing signal that pulses high to indicate an error has occurred in the processing of a command. For example, an incorrect command/property ID is sent, or an attempt was made to write a property that is outside of the given property group.</DESCRIPTION>
          </FIELD>
          <FIELD name="STATE_CHANGE" lsb="4" size="1">
            <DESCRIPTION>Set to indicate a successful transition from one state to another operating state.  Cleared when a state transition is in progress.</DESCRIPTION>
          </FIELD>
          <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR" lsb="5" size="1">
            <DESCRIPTION>
              Set to indicate that the number of received or transmitted bytes exceeds the size of the RX or TX FIFO, respectively (i.e., 64 bytes for each FIFO, or 129 bytes when sharing the FIFO).  Upon such an underflow/overflow event, the FIFO(s) will need to be reset.  Cleared by issuing a <REFERENCE>FIFO_INFO</REFERENCE> command to reset the FIFOs.
            </DESCRIPTION>
          </FIELD>
          <FIELD name="CAL" lsb="6" size="1">
            <DESCRIPTION>Self clearing signal that pulses high to indicate a RC32K calibration event is pending. If this occurs, the RC32K oscillator will be calibrated on the next transition to Sleep/Standby state.</DESCRIPTION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="EZCONFIG_CHECK" value="0x19" feature="ezconfig2" dev="1" wip="0">
      <SUMMARY>Validates the ezconfig array was written correctly.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHECKSUM" address="1" type="u16">
          <DESCRIPTION>Expected checksum of the ezconfig array passed to the chip.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RESULT" address="1" type="u8" internal="1">
          <DESCRIPTION>Current calibration state.</DESCRIPTION>
          <ENUMERATION value="0" name="VALID">
            <DESCRIPTION>Ezconfig array is valid, chip is now in normal operating state.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="BAD_CHECKSUM">
            <DESCRIPTION>Ezconfig array is invalid.  Ezconfig state restarted.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INVALID_STATE">
            <DESCRIPTION>Chip was not in Ezconfig2 state.</DESCRIPTION>
          </ENUMERATION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="SET_PROPERTY" value="0x11" feature="common" dev="1" wip="0">
      <SUMMARY>Sets the value of a property.</SUMMARY>
      <DESCRIPTION>Sets a property common to one or more commands. These are similar to parameters for an  API command but are not expected to change frequently and may be controlled by higher layers of  the user's software. Setting some properties may not cause the device to take immediate  action; however, the property will take affect once a command which uses it is issued.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GROUP" address="1" type="u8">
          <DESCRIPTION>Selects the group of the property to set.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="NUM_PROPS" address="2" type="u8">
          <DESCRIPTION>Number of properties to write starting at START_PROP.</DESCRIPTION>
          <RANGE min="1" max="12" />
        </PARAMETER>
        <PARAMETER name="START_PROP" address="3" type="u8">
          <DESCRIPTION>
            Selects the property index to set. The available properties are  determined by the part number and the <REFERENCE>POWER_UP</REFERENCE>:FUNC selection.
          </DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA0" address="4" type="u8">
          <DESCRIPTION>Value of the property START_PROP.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="5" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 1 (don't care if NUM_PROPS &lt; 2).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="6" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 2 (don't care if NUM_PROPS &lt; 3).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="7" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 3 (don't care if NUM_PROPS &lt; 4).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="8" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 4 (don't care if NUM_PROPS &lt; 5).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA5" address="9" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 5 (don't care if NUM_PROPS &lt; 6).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA6" address="10" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 6 (don't care if NUM_PROPS &lt; 7).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA7" address="11" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 7 (don't care if NUM_PROPS &lt; 8).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA8" address="12" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 8 (don't care if NUM_PROPS &lt; 9).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA9" address="13" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 9 (don't care if NUM_PROPS &lt; 10).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA10" address="14" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 10 (don't care if NUM_PROPS &lt; 11).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA11" address="15" type="u8">
          <DESCRIPTION>Value of the property START_PROP + 11 (don't care if NUM_PROPS &lt; 12).</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_PROPERTY" value="0x12" feature="common" dev="1" wip="0">
      <SUMMARY>Retrieve a property's value.</SUMMARY>
      <DESCRIPTION>
        Retrieve a property's value.  The value will either be the default or the value set with <REFERENCE>SET_PROPERTY</REFERENCE>.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GROUP" address="1" type="u8">
          <DESCRIPTION>Selects the group of the properties to retrieve.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="NUM_PROPS" address="2" type="u8">
          <DESCRIPTION>Number of properties to retrieve starting at START_PROP.</DESCRIPTION>
          <RANGE min="1" max="16" />
        </PARAMETER>
        <PARAMETER name="START_PROP" address="3" type="u8">
          <DESCRIPTION>Selects the first property index to retrieve.  The available properties are  determined by the part number.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA0" address="1" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE>.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA1" address="2" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 1 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 2).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA2" address="3" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 2 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 3).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA3" address="4" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 3 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 4).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA4" address="5" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 4 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 5).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA5" address="6" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 5 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 6).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA6" address="7" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 6 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 7).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA7" address="8" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 7 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 8).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA8" address="9" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 8 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 9).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA9" address="10" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 9 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 10).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA10" address="11" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 10 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 11).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA11" address="12" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 11 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 12).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA12" address="13" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 12 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 13).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA13" address="14" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 13 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 14).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA14" address="15" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 14 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 15).
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA15" address="16" type="u8">
          <DESCRIPTION>
            Value of the property <REFERENCE>START_PROP</REFERENCE> + 15 (don't care if <REFERENCE>NUM_PROPS</REFERENCE> &lt; 16).
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FIFO_INFO" value="0x15" feature="common" dev="1" wip="0">
      <SUMMARY>Provides access to transmit and receive FIFO counts and reset.</SUMMARY>
      <DESCRIPTION>This command is normally used for error recovery, FIFO hardware does not need to be reset prior to use.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIFO" address="1" type="bitfield">
          <FIELD name="TX" lsb="0" size="1" feature="tx">
            <DESCRIPTION>
              Resets TX FIFO and TX FIFO mode specified in property <REFERENCE>GLOBAL_CONFIG</REFERENCE> will be effective after reset.
            </DESCRIPTION>
            <ENUMERATION value="0" name="FALSE">
              <DESCRIPTION>No need to reset TX data FIFO.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRUE">
              <DESCRIPTION>Resets transmit data FIFO.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RX" lsb="1" size="1" feature="rx">
            <DESCRIPTION>
              Resets RX FIFO and RX FIFO mode specified in property <REFERENCE>GLOBAL_CONFIG</REFERENCE> will be effective after reset.
            </DESCRIPTION>
            <ENUMERATION value="0" name="FALSE">
              <DESCRIPTION>No need to reset RX data FIFO.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="TRUE">
              <DESCRIPTION>Resets receive data FIFO.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="RX_FIFO_COUNT" address="1" type="u8" feature="rx" />
        <DESCRIPTION>Number of bytes currently in receive FIFO.</DESCRIPTION>
        <REPLY name="TX_FIFO_SPACE" address="2" type="u8" feature="tx">
          <DESCRIPTION>Amount of space currently available in transmit FIFO.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PACKET_INFO" value="0x16" feature="rx" dev="1" wip="0">
      <SUMMARY>Returns information about the last packet received and optionally overrides field length.</SUMMARY>
      <DESCRIPTION>This command is used to retrieve the length field extracted from the packet when using variable length packets.</DESCRIPTION>
      <DESCRIPTION>On 802.15.4g receive mode, the FCS byte length embedded in the FHR is included to inform the host of the number of FCS bytes in the FIFO following the MAC Payload. if FCS is 0, 2 is added to the return length; if FCS is 1, 4 is added to the return length.</DESCRIPTION>
      <DESCRIPTION>If arguments follow, it can also be used to override packet length that was originally programmed with non-zero RX_LEN in START_RX or field length originally programmed with PKT field length properties.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIELD_NUMBER" address="1" type="bitfield">
          <FIELD name="FIELD_NUM" lsb="0" size="5">
            <ENUMERATION value="0x00">
              <DESCRIPTION>Nothing to override.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x01">
              <DESCRIPTION>Override FIELD 1 length or RX_LEN in START_RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x02">
              <DESCRIPTION>Override FIELD 2 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x04">
              <DESCRIPTION>Override FIELD 3 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x08">
              <DESCRIPTION>Override FIELD 4 length.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x10">
              <DESCRIPTION>Override FIELD 5 length.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="LEN" address="2" type="u16">
          <DESCRIPTION>Length in bytes.</DESCRIPTION>
          <RANGE min="1" max="8191" />
        </PARAMETER>
        <PARAMETER name="LEN_DIFF" address="4" type="u16">
          <DESCRIPTION>Difference in bytes based on the original field length or RX_LEN. Signed.</DESCRIPTION>
          <RANGE min="-32768" max="32767" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="LENGTH_15_8" address="1" type="u8">
          <DESCRIPTION>Most significant byte of the extracted length.</DESCRIPTION>
        </REPLY>
        <REPLY name="LENGTH_7_0" address="2" type="u8">
          <DESCRIPTION>Least significant byte of the extracted length.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="IRCAL" value="0x17" feature="ir_cal" dev="1" wip="0" internal="0">
      <SUMMARY>Image rejection calibration.</SUMMARY>
      <DESCRIPTION>Performs image rejection calibration.  Completion can be monitored by polling CTS or waiting for CHIP_READY interrupt source.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="SEARCHING_STEP_SIZE" address="1" type="bitfield">
          <FIELD name="COARSE_STEP_SIZE" lsb="0" size="4">
            <DESCRIPTION>Step Size of coarse stepping.  Writing a value of 0 will skip coarse stepping.</DESCRIPTION>
            <RANGE min="0" max="15" />
          </FIELD>
          <FIELD name="FINE_STEP_SIZE" lsb="4" size="2">
            <DESCRIPTION>Step size of fine stepping.  Writing a value of 0 will skip fine stepping.</DESCRIPTION>
            <RANGE min="0" max="3" />
          </FIELD>
          <FIELD name="INITIAL_PH_AMP" lsb="6" size="1">
            <DESCRIPTION>Initial ph and amp value when start IR calibration.</DESCRIPTION>
            <ENUMERATION value="1">
              <DESCRIPTION>Use zero for phase and amplitude values as starting values.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0">
              <DESCRIPTION>Use previous calibration values as starting values.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="SEARCHING_RSSI_AVG" address="2" type="bitfield">
          <FIELD name="RSSI_COARSE_AVG" lsb="0" size="2">
            <DESCRIPTION>How many measurements(2^avg) per RSSI measurement while coarse stepping.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>1 measurement.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 measurements.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>4 measurements.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>8 measurements.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SKIP_CAL" lsb="2" size="1" internal="1">
            <DESCRIPTION>Skip calibration and skip reverting parameters, only configure the parameters for IR cal.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>do calibration and then revert parameters.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>skip calibration and reverting parameters.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RSSI_FINE_AVG" lsb="4" size="2">
            <DESCRIPTION>How many measurements(2^avg) per RSSI measurement while fine stepping.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>1 measurement.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 measurements.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>4 measurements.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>8 measurements.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SKIP_INIT_SEARCH_STAT" lsb="6" size="1" internal="1">
            <DESCRIPTION>Whether initialize the searching process(clear the saved information when step-by-step searching)</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Start a new search.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Continue to search.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="STEP_BY_STEP" lsb="7" size="1" internal="1">
            <DESCRIPTION>Whether only do one step searching. If we do only one step searching, then we don't revert the parameters when the API call is finished. If we calibrate IR step-by-step, the calibration state will be automatically changed, please refer the return state.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Do automatic searching.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Only search one step.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_CHAIN_SETTING1" address="3" type="bitfield">
          <FIELD name="PGA_GAIN" lsb="0" size="3">
            <DESCRIPTION>Set PGA Gain.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>6 dB.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>9 dB.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>12 dB.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>6 dB.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="4">
              <DESCRIPTION>6 dB.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="5">
              <DESCRIPTION>6 dB.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="6">
              <DESCRIPTION>0 dB.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="7">
              <DESCRIPTION>3 dB.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="CLOSE_SHUNT_SWITCH" lsb="3" size="1">
            <DESCRIPTION>Close shunt switch.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Open LNA input shunt switch.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Close Open LNA input shunt switch.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RF_SOURCE_PWR" lsb="4" size="2">
            <DESCRIPTION>Power of internal generator(Default 3).</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>smallest.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>small.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>big.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>biggest.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="IRCLKDIV" lsb="6" size="1">
            <DESCRIPTION>Set irclkdiv.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Set to nominal gain.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Harmonics at N x 30 MHz.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="EN_HRMNIC_GEN" lsb="7" size="1">
            <DESCRIPTION>Enable harmonic generator.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Not enable.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Enable.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_CHAIN_SETTING2" address="4" type="bitfield">
          <FIELD name="ADC_HIGH_GAIN" lsb="0" size="1">
            <DESCRIPTION>Set ADC to high gain.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Set to nominal gain.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Set to high gain.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RSSI_READ_DLEAY" lsb="4" size="4" internal="1">
            <DESCRIPTION>How many bits clock delay before read RSSI when calibration. Delay = (2 + RSSI_READ_DLEAY)*bit_clock).</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>2 + 0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>2 + 1.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="15">
              <DESCRIPTION>2 + 15.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CAL_STATE" address="1" type="bitfield" internal="1">
          <DESCRIPTION>Current calibration state.</DESCRIPTION>
          <FIELD name="CAL_STATE" lsb="0" size="8">
            <ENUMERATION value="0">
              <DESCRIPTION>Not in proc.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>PH fine stepping.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>AMP fine stepping.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="4">
              <DESCRIPTION>PH coarse stepping.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="8">
              <DESCRIPTION>AMP coarse stepping.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="RSSI" address="2" type="u8" internal="1">
          <DESCRIPTION>Current value of register RSSI. Usually the RSSI value is the RSSI of current AMP/PH. If (DIRECT_CHANGE = 1) or (CAL_STATE is different to previous value), then this means the search direction is changed, now the RSSI is the value before change direction. If it is this condition the RSSI of current value should be ready out by sfr_read.</DESCRIPTION>
        </REPLY>
        <REPLY name="DIR_CH" address="3" type="u8" internal="1">
          <DESCRIPTION>Whether search direction changed.</DESCRIPTION>
        </REPLY>
        <REPLY name="LAST_RSSI" address="4" type="u8" internal="1">
          <DESCRIPTION>New for ROM3, return the final RSSI value after IR calibration.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PROTOCOL_CFG" value="0x18" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sets the chip up for specified protocol.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="PROTOCOL" address="1" type="bitfield">
          <FIELD name="PROTOCOL" lsb="0" size="8">
            <DESCRIPTION>Selects which protocol to configure the chip for.</DESCRIPTION>
            <ENUMERATION name="GENERIC" value="0">
              <DESCRIPTION>Packet format is generic, no dynamic reprogramming of packet handler properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="IEEE802154G" value="1">
              <DESCRIPTION>Packet format is IEEE802.15.4g compliant. The following properties are overriden: PKT_CRC_CONFIG, CRC_ENDIAN/BIT_ORDER in PKT_CONFG1 for TX and RX, PKT_FIELD_1_CRC_CONFIG for RX. Other applicable properties in the packet handler group still need to be programmed. Field 1 should have the length of 16 bits to contain the PHR with PKT_LEN_FIELD_SOURCE set to 1 for RX. PSDU field shall use Field 2 with variable length. Field 2 length should be set to the maximum allowed including the anticipated FCS length. It is anticipated that the FCS will be calculated by the host and transmitted over the air.  PHR and FCS will be put in the FIFO for the host to retrieve and check. Therefore, CRC shouldn't be enabled.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GPIO_PIN_CFG" value="0x13" feature="common" dev="1" wip="0">
      <SUMMARY>Configures the gpio pins.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="GPIO0" address="1" type="bitfield">
          <FIELD name="GPIO0_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the RX FIFO is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the TX FIFO is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="rx" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting RX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="rx" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="rx" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO0_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO1" address="2" type="bitfield">
          <FIELD name="GPIO1_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the RX FIFO is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the TX FIFO is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="rx" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting RX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="rx" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="rx" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO1_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO2" address="3" type="bitfield">
          <FIELD name="GPIO2_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the RX FIFO is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the TX FIFO is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="rx" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting RX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="rx" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="rx" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO2_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GPIO3" address="4" type="bitfield">
          <FIELD name="GPIO3_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the RX FIFO is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the TX FIFO is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="rx" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting RX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="rx" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="rx" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO3_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NIRQ" address="5" type="bitfield">
          <FIELD name="NIRQ_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="nirq" value="39">
              <DESCRIPTION>Active low interrupt signal.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="NIRQ_DRV_PULL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="SDO" address="6" type="bitfield">
          <FIELD name="SDO_MODE" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SDO_PULL_CTL" lsb="6" size="1">
            <ENUMERATION name="pull_dis" value="0">
              <DESCRIPTION>Disable pullup.  Recommended setting if pin is driven.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pull_en" value="1">
              <DESCRIPTION>Enable pullup.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="GEN_CONFIG" address="7" type="bitfield">
          <FIELD name="DRV_STRENGTH" lsb="5" size="2">
            <ENUMERATION name="HIGH" value="0">
              <DESCRIPTION>GPIOs configured as outputs will have highest drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_HIGH" value="1">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_LOW" value="2">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="LOW" value="3">
              <DESCRIPTION>GPIOs configured as outputs will have lowest drive strength.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="GPIO0" address="1" type="bitfield">
          <FIELD name="GPIO0r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the RX FIFO is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the TX FIFO is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="rx" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting RX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="rx" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="rx" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO0_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO1" address="2" type="bitfield">
          <FIELD name="GPIO1r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the RX FIFO is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the TX FIFO is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="rx" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting RX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="rx" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="rx" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO1_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO2" address="3" type="bitfield">
          <FIELD name="GPIO2r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the RX FIFO is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the TX FIFO is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="rx" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting RX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="rx" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="rx" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO2_STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GPIO3" address="4" type="bitfield">
          <FIELD name="GPIO3r" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="boot_clk" feature="pro2" value="6" internal="0">
              <DESCRIPTION>BOOT_CLK - Outputs boot clock.  This will only output when the boot clock in SPI ACTIVE state because that is the only time the boot clock is active.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="inv_cts" feature="pro2" value="9" internal="0">
              <DESCRIPTION>INV_CTS - Output low when clear to send a new command, output high otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cmd_overlap" feature="pro2" value="10" internal="0">
              <DESCRIPTION>CMD_OVERLAP - Output low unless command overlap occurs.  When command overlap occurs output goes high until the rising edge of CTS.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cal_wut" feature="pro2" value="13" internal="0">
              <DESCRIPTION>
                CAL_WUT - Output low normally, Pulses high for one 32 kHz clock cycle when calibration timer expires.  To use the calibration timer the 32 kHz clock must be enabled.  Calibration timer period is configured using <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_CAL_PERIOD and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:CAL_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_state" feature="tx" value="32" internal="0">
              <DESCRIPTION>TX_STATE - Output high while in TX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_state" feature="rx" value="33" internal="0">
              <DESCRIPTION>RX_STATE - Output high while in RX state.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_fifo_full" feature="rx" value="34" internal="0">
              <DESCRIPTION>RX_FIFO_FULL - Output high while the RX FIFO is almost full.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_fifo_empty" feature="tx" value="35" internal="0">
              <DESCRIPTION>TX_FIFO_EMPTY - Output high while the TX FIFO is almost empty.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="low_batt" feature="pro2" value="36" internal="0">
              <DESCRIPTION>LOW_BATT - Output high while the battery voltage is low.  Output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca_latch" feature="rx" value="37" internal="0">
              <DESCRIPTION>CCA_LATCH - Output high if RSSI goes above clear channel assesment threshold.  Returns to output low on sync detect or exiting RX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hopped" feature="rx" value="38" internal="0">
              <DESCRIPTION>HOPPED - Toggles between output high and output low when hop occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="hop_table_wrap" feature="rx" value="39" internal="0">
              <DESCRIPTION>HOP_TABLE_WRAP - Toggles between output high and output low when the hop table wraps.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="in_sleep" feature="pro2" value="28" internal="1">
              <DESCRIPTION>IN_SLEEP - Output high when not in sleep state.  Output low when in sleep state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="GPIO3STATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="NIRQ" address="5" type="bitfield">
          <FIELD name="NIRQr" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="nirq" value="39">
              <DESCRIPTION>Active low interrupt signal.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="NIRQSTATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="SDO" address="6" type="bitfield">
          <FIELD name="SDOr" lsb="0" size="6">
            <ENUMERATION name="donothing" feature="common" value="0" internal="0">
              <DESCRIPTION>DONOTHING - Do not modify the behavior of this pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tristate" feature="common" value="1" internal="0">
              <DESCRIPTION>TRISTATE - Input and output drivers disabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive0" feature="common" value="2" internal="0">
              <DESCRIPTION>DRIVE0 - CMOS output driven low.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="drive1" feature="common" value="3" internal="0">
              <DESCRIPTION>DRIVE1 - CMOS output driven high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="input" feature="common" value="4" internal="0">
              <DESCRIPTION>INPUT - CMOS input.  This is used for all GPIO functions that require the pin to be an input (e.g., TX Direct Mode Data In).  What this pin is used for is controlled by other properties.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="32k_clk" feature="pro2" value="5" internal="0">
              <DESCRIPTION>
                32K_CLK - Outputs 32 kHz clock selected using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.  Output low if the 32 kHz clock is not enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="div_clk" feature="pro2" value="7" internal="0">
              <DESCRIPTION>
                DIV_CLK - Outputs divided clock.  Output divided boot clock in SPI ACTIVE state, Output low while in SLEEP state as the divided clock source is not running, and Output divided XTAL in all other states.  The divider is configured using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:DIVIDED_CLK_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cts" feature="pro2" value="8" internal="0">
              <DESCRIPTION>CTS - Output High when clear to send a new command, output low otherwise.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sdo" feature="common" value="11" internal="0">
              <DESCRIPTION>SDO - Output SPI Serial data out.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="por" feature="common" value="12" internal="0">
              <DESCRIPTION>POR - Output low until power on reset is complete then output high.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="wut" feature="pro2" value="14" internal="0">
              <DESCRIPTION>
                WUT - Output low normally, Pulses high for one 32 kHz clock cycle for when wakeup timer expires.  To use the wakeup timer the 32 kHz clock must be enabled.  The WUT period is configured using <REFERENCE>GLOBAL_WUT_M_15_8</REFERENCE>, <REFERENCE>GLOBAL_WUT_M_7_0</REFERENCE>, and <REFERENCE>GLOBAL_WUT_R</REFERENCE> and enabled by <REFERENCE>GLOBAL_WUT_CONFIG</REFERENCE>:WUT_EN.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="pa" feature="tx" value="15" internal="1">
              <DESCRIPTION>EN_PA - Enable PA is internal signal that show when the internal PA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data_clk" feature="tx" value="16" internal="0">
              <DESCRIPTION>TX_DATA_CLK - Outputs TX data CLK to be used in conjunction with TX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data_clk" feature="rx" value="17" internal="0">
              <DESCRIPTION>RX_DATA_CLK - Outputs RX data CLK to be used in conjunction with RX Data pin.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="lna" feature="rx" value="18" internal="1">
              <DESCRIPTION>EN_LNA - Enable LNA is internal signal that show when the internal LNA is enabled.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="tx_data" feature="tx" value="19" internal="1">
              <DESCRIPTION>TX_DATA - Outputs TX data bits going into the modulator.  This is not for TX Direct mode.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_data" feature="rx" value="20" internal="0">
              <DESCRIPTION>RX_DATA - Outputs RX data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="rx_raw_data" feature="rx" value="21" internal="0">
              <DESCRIPTION>RX_RAW_DATA - RX raw data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_0_sw" feature="rx" value="22" internal="0">
              <DESCRIPTION>ANTENNA_0_SW - Antenna 1 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="antenna_1_sw" feature="rx" value="23" internal="0">
              <DESCRIPTION>ANTENNA_1_SW - Antenna 2 Switch used for antenna diversity.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="valid_preamble" feature="rx" value="24" internal="0">
              <DESCRIPTION>VALID_PREAMBLE - Output high when a valid preamble is detected.  Returns to output low after packet received or sync word timeout occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="invalid_preamble" feature="rx" value="25" internal="0">
              <DESCRIPTION>
                INVALID_PREAMBLE - Output low normally, pulses output high when the preamble is not detected within a period time (determined by <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE>:RX_PREAMBLE_TIMEOUT) after the demodulator is enabled.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="sync_word_detect" feature="rx" value="26" internal="0">
              <DESCRIPTION>SYNC_WORD_DETECT - Output high when a sync word is detected. Returns to output low after the packet is received.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="cca" feature="rx" value="27" internal="0">
              <DESCRIPTION>
                CCA - Output high when RSSI above clear channel assessment threshold set by <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.  Output low when below threshold.
              </DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="SDOSTATE" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Pin was read back as a 0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Pin was read back as a 1.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="GEN_CONFIG" address="7" type="bitfield">
          <FIELD name="DRV_STRENGTH" lsb="5" size="2">
            <ENUMERATION name="HIGH" value="0">
              <DESCRIPTION>GPIOs configured as outputs will have highest drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_HIGH" value="1">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="MED_LOW" value="2">
              <DESCRIPTION>GPIOs configured as outputs will have medium drive strength.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="LOW" value="3">
              <DESCRIPTION>GPIOs configured as outputs will have lowest drive strength.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="PEEK" value="0xF0" feature="debug" internal="1" dev="1" wip="0">
      <SUMMARY>Read a memory location if the feature is enabled.</SUMMARY>
      <DESCRIPTION>Read a memory location in the MCU memory.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADDR0" address="1" type="u16">
          <DESCRIPTION>Memory address to read.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR1" address="3" type="u16">
          <DESCRIPTION>Memory address to read.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR2" address="5" type="u16">
          <DESCRIPTION>Memory address to read.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR3" address="7" type="u16">
          <DESCRIPTION>Memory address to read.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR4" address="9" type="u16">
          <DESCRIPTION>Memory address to read.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR5" address="11" type="u16">
          <DESCRIPTION>Memory address to read.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR6" address="13" type="u16">
          <DESCRIPTION>Memory address to read.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="DATA0" address="1" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR0 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA1" address="2" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR1 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA2" address="3" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR2 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA3" address="4" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR3 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA4" address="5" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR4 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA5" address="6" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR5 == 0 ).</DESCRIPTION>
        </REPLY>
        <REPLY name="DATA6" address="7" type="u8">
          <DESCRIPTION>Data byte read (don't care if ADDR6 == 0 ).</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="POKE" value="0xF1" feature="debug" internal="1" dev="1" wip="0">
      <SUMMARY>Write a memory location if the feature is enabled.</SUMMARY>
      <DESCRIPTION>Write a memory location in the MCU.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADDR0" address="1" type="u16">
          <DESCRIPTION>Memory controller address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA0" address="3" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR0 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR1" address="4" type="u16">
          <DESCRIPTION>Memory controller address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA1" address="6" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR1 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR2" address="7" type="u16">
          <DESCRIPTION>Memory controller address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA2" address="9" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR2 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR3" address="10" type="u16">
          <DESCRIPTION>Memory controller address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA3" address="12" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR3 == 0).</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="ADDR4" address="13" type="u16">
          <DESCRIPTION>Memory controller address to write.</DESCRIPTION>
        </PARAMETER>
        <PARAMETER name="DATA4" address="15" type="u8">
          <DESCRIPTION>Data byte to write (don't care if ADDR4 == 0).</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="GET_ADC_READING" value="0x14" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Performs and retrieve the results of possible ADC conversions.</SUMMARY>
      <DESCRIPTION>Performs and returns results of selected ADC conversions.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="ADC_EN" address="1" type="bitfield">
          <FIELD name="ADC_GPIO_PIN" lsb="0" size="2">
            <DESCRIPTION>Select GPIOx pin. The pin must be set as input.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Measure voltage of GPIO0.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Measure voltage of GPIO1.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>Measure voltage of GPIO2.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>Measure voltage of GPIO3.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="ADC_GPIO_EN" lsb="2" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion on GPIO, will read 0 value in reply.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of GPIO, results in GPIO_ADC. Vgpio = GPIO_ADC/GPIO_ADC_DIV where GPIO_ADC_DIV is defined by GPIO_ATT selection.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="BATTERY_VOLTAGE_EN" lsb="3" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion of battery voltage, will read 0 value in reply BATTERY_ADC.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of battery voltage, results in BATTERY_ADC. Vbatt = 3*BATTERY_ADC/1280</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="TEMPERATURE_EN" lsb="4" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Don't do ADC conversion of temperature, will read 0 value in reply TEMPERATURE.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Do ADC conversion of temperature, result in TEMP_ADC. Temp in Celsius = ((800 + TEMP_SLOPE)/4096)*TEMP_ADC - (INTERCEPT/2 + 256)</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="ADC_CFG" address="2" type="bitfield">
          <FIELD name="GPIO_ATT" lsb="0" size="4">
            <DESCRIPTION>Sets attenuation of gpio input voltage when vgpio measured. Defaults to 0xC if ADC_CFG is 0.</DESCRIPTION>
            <ENUMERATION value="0x0" name="0P8">
              <DESCRIPTION>ADC range 0 to 0.8 V.  GPIO_ADC_DIV = 2560.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x4" name="1P6">
              <DESCRIPTION>ADC range 0 to 1.6 V.  GPIO_ADC_DIV = 1280.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x8" name="2P4">
              <DESCRIPTION>ADC range 0 to 2.4 V.  GPIO_ADC_DIV = 853.33.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0xC" name="3P2">
              <DESCRIPTION>ADC range 0 to 3.2 V.  GPIO_ADC_DIV = 640.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="0x9" name="3P6">
              <DESCRIPTION>ADC range 0 to 3.6 V.  GPIO_ADC_DIV = 426.66.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="UDTIME" lsb="4" size="4">
            <DESCRIPTION>ADC conversion Time = SYS_CLK / 12 / 2^(UDTIME + 1).  Defaults to 0xC if ADC_CFG is 0.   Selecting shorter conversion times will result in lower ADC resolution and longer times will result in  higher ADC resolution.</DESCRIPTION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="GPIO_ADC" address="1" type="u16">
          <DESCRIPTION>ADC value of voltage on GPIO.</DESCRIPTION>
        </REPLY>
        <REPLY name="BATTERY_ADC" address="3" type="u16">
          <DESCRIPTION>ADC value of battery voltage.</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_ADC" address="5" type="u16">
          <DESCRIPTION>ADC value of temperature sensor voltage.</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_SLOPE" address="7" type="u8">
          <DESCRIPTION>Slope in the formula of Vtempadc -- Temperature.</DESCRIPTION>
        </REPLY>
        <REPLY name="TEMP_INTERCEPT" address="8" type="u8">
          <DESCRIPTION>Intercept in the formula of Vtempadc -- Temperature.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_TX" value="0x31" feature="tx" dev="1" wip="0">
      <SUMMARY>Switches to TX state and starts packet transmission.</SUMMARY>
      <DESCRIPTION>Switches to TX state when condition is met.  Command arguments are retained though sleep state, so they only need to be written when they change.  CTS will not return high until in TX state.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHANNEL" address="1" type="u8">
          <DESCRIPTION>
            Channel number to tune the receiver to.  Frequency is determined using integer, fractional, and step size properties in the FREQ_CONTROL property group.  This value will be overwritten with <REFERENCE>START_RX</REFERENCE>:CHANNEL if supported.
          </DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="CONDITION" address="2" type="bitfield">
          <FIELD name="START" lsb="0" size="2">
            <ENUMERATION name="IMMEDIATE" value="0" feature="tx">
              <DESCRIPTION>Start TX immediately.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="WUT" value="1" feature="tx">
              <DESCRIPTION>Start TX when wake up timer expires.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="UPDATE" value="3" feature="pro2">
              <DESCRIPTION>Update TX parameters.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="RETRANSMIT" lsb="2" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Send data that has been written to FIFO.  If FIFO is empty a FIFO underflow interrupt will occur.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Send last packet again.  If this option is used, ensure that no new data is written to the FIFO.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="TXCOMPLETE_STATE" lsb="4" size="4" default="3">
            <DESCRIPTION>State to go to when current packet transmission completes.  If this parameter is not sent with the command, the last value specified is used.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>Do not change from previously sent TXCOMPLETE_STATE.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>
                Sleep/Standby state.  RC32K operation in this state is controlled using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>SPI Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="TX_LEN" address="3" type="u16">
          <DESCRIPTION>If this field is nonzero, the packet will be transmitted using only field 1.  If this field is zero, the configuration of the packet handler fields is used.  If RETRANSMIT is set, this field is ignored.</DESCRIPTION>
          <RANGE min="0" max="8191" />
        </PARAMETER>
        <PARAMETER name="TX_DELAY" address="5" type="u8">
          <DESCRIPTION>Delay in us between transmits if another transmit is scheduled.</DESCRIPTION>
          <RANGE min="0" max="128" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="TX_HOP" value="0x37" feature="unreleased" dev="1" wip="0">
      <SUMMARY>Hop to a new frequency while in TX.</SUMMARY>
      <DESCRIPTION>While in TX state this will ramp down the PA, Retune the PLL, and ramp the PA back up.</DESCRIPTION>
      <TARGETRELEASE>revB1C</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="INTE" address="1" type="u8">
          <DESCRIPTION>INTE register value.</DESCRIPTION>
          <RANGE min="0" max="127" />
        </PARAMETER>
        <PARAMETER name="FRAC2" address="2" type="u8">
          <DESCRIPTION>FRAC2 register value.</DESCRIPTION>
          <RANGE min="0" max="15" />
        </PARAMETER>
        <PARAMETER name="FRAC1" address="3" type="u8">
          <DESCRIPTION>FRAC1 register value.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="FRAC0" address="4" type="u8">
          <DESCRIPTION>FRAC0 register value.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT1" address="5" type="u8">
          <DESCRIPTION>VCO_CNT1 register value.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT0" address="6" type="u8">
          <DESCRIPTION>VCO_CNT0 register value.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="PLL_SETTLE_TIME" address="7" type="u16">
          <DESCRIPTION>Delay in us to leave PA ramped down.</DESCRIPTION>
          <RANGE min="50" max="128" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_RX" value="0x32" feature="rx" dev="1" wip="0">
      <SUMMARY>Switches to RX state. Command arguments are retained though sleep state, so these only need to be written when they change.</SUMMARY>
      <DESCRIPTION>Switches to RX state when condition is met.  Switch to specified state when RX packet completes.  CTS will not return until in RX mode.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="CHANNEL" address="1" type="u8">
          <DESCRIPTION>
            Channel number to transmit the packet on.  Frequency is determined using integer, fractional, and step size properties in the FREQ_CONTROL property group.  This value will be overwritten with <REFERENCE>START_TX</REFERENCE>:CHANNEL if supported.
          </DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="CONDITION" address="2" type="bitfield">
          <FIELD name="START" lsb="0" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Start RX immediately.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Start RX when wake up timer expires.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="RX_LEN" address="3" type="u16">
          <DESCRIPTION>If this field is nonzero, the packet will be received using only field 1.  If this field is zero, the configuration of the packet handler fields is used.</DESCRIPTION>
          <RANGE min="0" max="8191" />
        </PARAMETER>
        <PARAMETER name="NEXT_STATE1" address="5" type="bitfield">
          <FIELD name="RXTIMEOUT_STATE" lsb="0" size="4">
            <DESCRIPTION>
              If preamble detection times out, RX will transition to RXTIMEOUT_STATE. See <REFERENCE>PREAMBLE_CONFIG_STD_2</REFERENCE> for details regarding how to configure preamble timeout.  Defaults to 0.
            </DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>Remain in RX state if RXTIMEOUT occurs.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>
                Sleep/Standby state.  RC32K operation in this state is controlled using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>SPI Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NEXT_STATE2" address="6" type="bitfield">
          <FIELD name="RXVALID_STATE" lsb="0" size="4">
            <DESCRIPTION>RX transitions to RXVALID_STATE if CRC check passes when CRC is enabled via PKT group properties. If CRC is not enabled, upon receiving packet received interrupt, RX transitions to RXVALID_STATE.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>
                Sleep/Standby state.  RC32K operation in this state is controlled using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>SPI Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="NEXT_STATE3" address="7" type="bitfield">
          <FIELD name="RXINVALID_STATE" lsb="0" size="4">
            <DESCRIPTION>If CRC checking is enabled, in case of CRC error, RX will transition to RXINVALID_STATE.  Defaults to 3.</DESCRIPTION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>
                Sleep/Standby state.  RC32K operation in this state is controlled using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>Spi Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="RX_HOP" value="0x36" feature="rx" dev="1" wip="0">
      <SUMMARY>Hop to a new frequency while in RX.</SUMMARY>
      <DESCRIPTION>While in RX state this will hop to the frequency specified by the parameters and start searching for a preamble.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="INTE" address="1" type="u8">
          <DESCRIPTION>INTE register value.</DESCRIPTION>
          <RANGE min="0" max="127" />
        </PARAMETER>
        <PARAMETER name="FRAC2" address="2" type="u8">
          <DESCRIPTION>FRAC2 register value.</DESCRIPTION>
          <RANGE min="0" max="15" />
        </PARAMETER>
        <PARAMETER name="FRAC1" address="3" type="u8">
          <DESCRIPTION>FRAC1 register value.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="FRAC0" address="4" type="u8">
          <DESCRIPTION>FRAC0 register value.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT1" address="5" type="u8">
          <DESCRIPTION>VCO_CNT1 register value.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
        <PARAMETER name="VCO_CNT0" address="6" type="u8">
          <DESCRIPTION>VCO_CNT0 register value.</DESCRIPTION>
          <RANGE min="0" max="255" />
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="CHANGE_STATE" value="0x34" feature="common" dev="1" wip="0">
      <SUMMARY>Update state machine entries.</SUMMARY>
      <DESCRIPTION>This command is used to manually switch to a specified state.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="NEXT_STATE1" address="1" type="bitfield">
          <FIELD name="NEW_STATE" lsb="0" size="4">
            <DESCRIPTION>State to go to immediately.</DESCRIPTION>
            <ENUMERATION name="NOCHANGE" value="0" feature="common" internal="0">
              <DESCRIPTION>Remain in current state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>
                Sleep/Standby state.  RC32K operation in this state is controlled using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>SPI Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="START_MFSK" value="0x35" feature="mfsk" dev="1" wip="0" internal="1">
      <SUMMARY>Start direct frequency offset transmission mode.</SUMMARY>
      <DESCRIPTION>This command is used to switch to direct frequency offset transmission mode.</DESCRIPTION>
      <DESCRIPTION>Configures MSB or LSB, invert data or not, median frequency offset.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="DIR_MODE_CFG" address="1" type="bitfield">
          <FIELD name="msb_first" lsb="1" size="1">
            <DESCRIPTION>Allows to shift in SPI data as MSB first or LSB first.</DESCRIPTION>
            <ENUMERATION value="0" name="LSB_FIRST">
              <DESCRIPTION>LSB first.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1" name="MSB_FIRST">
              <DESCRIPTION>MSB first.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="scale_factor" lsb="4" size="2">
            <DESCRIPTION>Data samples will be scaled prior to be written to the  modem offset registers.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>This sampled data X1.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>This sampled data X2.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="2">
              <DESCRIPTION>This sampled data X4.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="3">
              <DESCRIPTION>This sampled data X8.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="inv_data" lsb="6" size="1">
            <DESCRIPTION>Invert SDI data.</DESCRIPTION>
            <ENUMERATION value="0">
              <DESCRIPTION>Not invert SDI data.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>SDI data will be inverted prior to be shift in.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
        <PARAMETER name="FREQ_OFFSET" address="2" type="u16">
          <DESCRIPTION>Median frequency offset value, in 2's Complement.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="AGC_OVERRIDE" value="0xD0" feature="common" dev="1" wip="0" internal="1">
      <SUMMARY>Override the AGC.</SUMMARY>
      <DESCRIPTION>This command is used to allow override of the AGC.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="AGC_OVERRIDE" address="1" type="bitfield">
          <FIELD name="LNA_GAIN_CFG" lsb="0" size="3">
            <DESCRIPTION>LNA Gain.</DESCRIPTION>
          </FIELD>
          <FIELD name="DIS_LNA_AGC" lsb="3" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Use hardware AGC to control LNA gain.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Disable LNA hardware AGC, and set LNA gain to fixed value.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
          <FIELD name="PGA_GAIN_CFG" lsb="4" size="3">
            <DESCRIPTION>PGA Gain configuration.</DESCRIPTION>
          </FIELD>
          <FIELD name="DIS_PGA_AGC" lsb="7" size="1">
            <ENUMERATION value="0">
              <DESCRIPTION>Use hardware AGC to control PGA gain.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION value="1">
              <DESCRIPTION>Disable PGA hardware AGC, and set PGA gain to fixed value.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="REQUEST_DEVICE_STATE" value="0x33" feature="common" dev="1" wip="0">
      <SUMMARY>Request current device state.</SUMMARY>
      <DESCRIPTION>Requests the current state of the device.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CURR_STATE" address="1" type="bitfield">
          <FIELD name="MAIN_STATE" lsb="0" size="4">
            <DESCRIPTION>Current State.</DESCRIPTION>
            <ENUMERATION name="SLEEP" value="1" feature="common" internal="0">
              <DESCRIPTION>
                Sleep/Standby state.  RC32K operation in this state is controlled using <REFERENCE>GLOBAL_CLK_CFG</REFERENCE>:CLK_32K_SEL.
              </DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="SPI_ACTIVE" value="2" feature="common" internal="0">
              <DESCRIPTION>SPI Active state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY" value="3" feature="common" internal="0">
              <DESCRIPTION>Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="READY2" value="4" feature="common" internal="0">
              <DESCRIPTION>Another enumeration for Ready state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX_TUNE" value="5" feature="tx" internal="0">
              <DESCRIPTION>Tune state for TX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX_TUNE" value="6" feature="rx" internal="0">
              <DESCRIPTION>Tune state for RX.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="TX" value="7" feature="tx" internal="0">
              <DESCRIPTION>TX state.</DESCRIPTION>
            </ENUMERATION>
            <ENUMERATION name="RX" value="8" feature="rx" internal="0">
              <DESCRIPTION>RX state.</DESCRIPTION>
            </ENUMERATION>
          </FIELD>
        </REPLY>
        <REPLY name="CURRENT_CHANNEL" address="2" type="u8">
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="READ_CMD_BUFF" value="0x44" feature="common" dev="1" wip="0">
      <SUMMARY>Used to read CTS and the command response.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="CTS" address="0" type="u8">
          <DESCRIPTION>
            Clear to Send. Indicates that the previous command has completed
            execution and DATA[1..16] is valid. The next command may be sent.
          </DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF0" address="1" type="u8">
          <DESCRIPTION>Byte 0 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF1" address="2" type="u8">
          <DESCRIPTION>Byte 1 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF2" address="3" type="u8">
          <DESCRIPTION>Byte 2 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF3" address="4" type="u8">
          <DESCRIPTION>Byte 3 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF4" address="5" type="u8">
          <DESCRIPTION>Byte 4 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF5" address="6" type="u8">
          <DESCRIPTION>Byte 5 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF6" address="7" type="u8">
          <DESCRIPTION>Byte 6 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF7" address="8" type="u8">
          <DESCRIPTION>Byte 7 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF8" address="9" type="u8">
          <DESCRIPTION>Byte 8 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF9" address="10" type="u8">
          <DESCRIPTION>Byte 9 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF10" address="11" type="u8">
          <DESCRIPTION>Byte 10 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF11" address="12" type="u8">
          <DESCRIPTION>Byte 11 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF12" address="13" type="u8">
          <DESCRIPTION>Byte 12 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF13" address="14" type="u8">
          <DESCRIPTION>Byte 13 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF14" address="15" type="u8">
          <DESCRIPTION>Byte 14 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
        <REPLY name="CMD_BUFF15" address="16" type="u8">
          <DESCRIPTION>Byte 15 of the command response buffer.  Only valid if CTS is 0xFF.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_A_READ" value="0x50" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with A.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_A_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_B_READ" value="0x51" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with B.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_B_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_C_READ" value="0x53" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with C.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_C_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_D_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="FRR_D_READ" value="0x57" feature="common" dev="1" wip="0">
      <SUMMARY>Reads the fast response registers starting with D.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FRR_D_VALUE" address="0" type="u8">
          <DESCRIPTION>Value in Fast Response Register D.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_A_VALUE" address="1" type="u8">
          <DESCRIPTION>Value in Fast Response Register A.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_B_VALUE" address="2" type="u8">
          <DESCRIPTION>Value in Fast Response Register B.</DESCRIPTION>
        </REPLY>
        <REPLY name="FRR_C_VALUE" address="3" type="u8">
          <DESCRIPTION>Value in Fast Response Register C.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="WRITE_TX_FIFO" value="0x66" feature="tx" dev="1" wip="0">
      <SUMMARY>Writes the TX FIFO.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command has no response to be read.
        If you write more data than the  TX FIFO can hold it will trigger a FIFO Overflow interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
        <PARAMETER name="FIRST_BYTE" address="1" type="u8">
          <DESCRIPTION>First byte to write to the TX FIFO.</DESCRIPTION>
        </PARAMETER>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
      </OUTPUT_DETAILS>
    </COMMAND>
    <COMMAND name="READ_RX_FIFO" value="0x77" feature="rx" dev="1" wip="0">
      <SUMMARY>Reads the RX FIFO.</SUMMARY>
      <DESCRIPTION>
        This command does not cause CTS to go low, and can be sent and the reply read while CTS is low.

        This command is used to read values from the hardware.  The command ID should be clocked in on SDI then the reply should be clocked out on SDO without deasserting NSEL.
        If you read more data than the  RX FIFO contains it will trigger a FIFO Underflow interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <INPUT_DETAILS>
      </INPUT_DETAILS>
      <OUTPUT_DETAILS>
        <REPLY name="FIRST_BYTE" address="0" type="u8">
          <DESCRIPTION>First byte in the RX FIFO.</DESCRIPTION>
        </REPLY>
      </OUTPUT_DETAILS>
    </COMMAND>
    <PROPERTY group="GLOBAL" name="XO_TUNE" value="0" default="0x40" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Configure crystal oscillator frequency tuning bank.</SUMMARY>
      <DESCRIPTION>Crystal oscillator frequency tuning value.  0x00 is maximum frequency value and 0x7F is lowest frequency value. Each LSB code corresponds to a 70 fF capacitance change. The total adjustment range assuming a 30 MHz XTAL is +/-100 ppm.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="127" />
      <BYTE>
        <FIELD name="TUNE_VALUE" lsb="0" size="7">
          <ENUMERATION value="0" name="FASTEST_FREQUENCY">
            <DESCRIPTION>Maximum frequency.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="127" name="SLOWEST_FREQUENCY">
            <DESCRIPTION>Lowest frequency.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="CLK_CFG" value="1" default="0" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Clock configuration options.</SUMMARY>
      <DESCRIPTION>Configures user clock configuration options.  It is necessary to configure these values before using the WUT or GPIO clock output.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CLK_32K_SEL" lsb="0" size="3">
          <SUMMARY>Selects 32 kHz clock source.</SUMMARY>
          <ENUMERATION value="0" name="OFF">
            <DESCRIPTION>32 kHz clock is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="RC">
            <DESCRIPTION>32 kHz clock is driven by internal RC oscillator.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CRYSTAL">
            <DESCRIPTION>32 kHz clock is driven by External crystal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="DIVIDED_CLK_SEL" lsb="3" size="3">
          <SUMMARY>Selected divided clock output divider.</SUMMARY>
          <ENUMERATION value="0" name="DIV_1">
            <DESCRIPTION>Clock output is system clock divided by 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIV_2">
            <DESCRIPTION>Clock output is system clock divided by 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="DIV_3">
            <DESCRIPTION>Clock output is system clock divided by 3.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="DIV_7_5">
            <DESCRIPTION>Clock output is system clock divided by 7.5.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="DIV_10">
            <DESCRIPTION>Clock output is system clock divided by 10.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="DIV_15">
            <DESCRIPTION>Clock output is system clock divided by 15.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="DIV_30">
            <DESCRIPTION>Clock output is system clock divided by 30.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="DIVIDED_CLK_EN" lsb="6" size="1">
          <SUMMARY>Enables divided clock output from the GPIOs.</SUMMARY>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Divided clock output is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Divided clock output is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="LOW_BATT_THRESH" value="2" default="0x18" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Low battery threshold.</SUMMARY>
      <DESCRIPTION>Sets the low battery threshold based on the formula:</DESCRIPTION>
      <LATEX equation="vdd\_thresh=0.2+\left(\frac{30+THRESHOLD}{20}\right)" dpi="150">
      </LATEX>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="THRESHOLD" lsb="0" size="5">
          <RANGE min="0" max="31">!</RANGE>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="CONFIG" value="3" default="0x20" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Global configuration settings.</SUMMARY>
      <DESCRIPTION>Various settings that affect entire chip. If PROTOCOL is specified, the chip is placed into protocol aware state.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="POWER_MODE" feature="low_power_mode" lsb="0" size="1">
          <ENUMERATION value="0" name="HIGH_PERF">
            <DESCRIPTION>High performance mode for RX and TX. RX current = 13 mA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="LOW_POWER">
            <DESCRIPTION>Low power mode for RX and TX. RX current = 10 mA.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PROTOCOL" lsb="1" size="3">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Packet format is generic, no dynamic reprogramming of packet handler properties.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Packet format is IEEE802.15.4g compliant.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="FIFO_MODE" lsb="4" size="1">
          <DESCRIPTION>
            This bit is effective only when chip power up or after related FIFO reset by sending command <REFERENCE>FIFO_INFO</REFERENCE>
          </DESCRIPTION>
          <ENUMERATION value="0" name="SPLIT_FIFO">
            <DESCRIPTION>TX and RX FIFO are independent, 64-byte size for each other.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HALF_DUPLEX_FIFO">
            <DESCRIPTION>TX/RX FIFO are sharing with 129-byte size buffer.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEQUENCER_MODE" lsb="5" size="1" feature="tx">
          <DESCRIPTION>This bit determines if the sequencer timing is used, or transmit is started as soon as possible.</DESCRIPTION>
          <ENUMERATION value="0" name="GUARANTEED">
            <DESCRIPTION>Transmit is guaranteed to occur x us after nSEL goes High.  x depends on the current state.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="FAST">
            <DESCRIPTION>Start TX as soon as possible.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LPF_SATURATION_MODE" lsb="6" size="1" feature="low_power_rx">
          <DESCRIPTION>
            This bit determines if the ADC will be put in high power mode when the RSSI level is above <REFERENCE>MODEM_RSSI_THRESH</REFERENCE>.   If this feature is enabled, the RX current will increase 1 mA if the RSSI is above the threshold.
          </DESCRIPTION>
          <ENUMERATION value="0" name="HIGH_SAT">
            <DESCRIPTION>Enable higher saturation level in LOW_POWER mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="LOW_SAT">
            <DESCRIPTION>Lower saturation level (-15 dB), but lower power consumption in LOW_POWER mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_CONFIG" value="4" default="0x00" feature="global_grp" dev="1" wip="0">
      <SUMMARY>General Wakeup Timer feature configuration.</SUMMARY>
      <DESCRIPTION>Program WUT and enable events, Low Battery Detector support , Low Duty Cycle operation.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CAL_EN" lsb="0" size="1">
          <DESCRIPTION>Controls if the chip will wake up on WUT_CAL_PERIOD intervals and perform RC32K calibration.</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE_CAL">
            <DESCRIPTION>Disable calibration timer.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_CAL">
            <DESCRIPTION>Enable calibration timer.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_EN" lsb="1" size="1">
          <ENUMERATION value="0" name="DISABLE_WUT">
            <DESCRIPTION>Disable wake up timer.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_WUT">
            <DESCRIPTION>Enable wake up timer.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_LBD_EN" lsb="2" size="1">
          <ENUMERATION value="0" name="DISABLE_LBD">
            <DESCRIPTION>Disable low battery detect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE_LBD">
            <DESCRIPTION>Enable low battery detect on WUT interval.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_CAL_PERIOD" lsb="3" size="3">
          <DESCRIPTION>If enabled by CAL_EN, selects how often to power up the chip and perform 32 kHz RC calibration.</DESCRIPTION>
          <ENUMERATION value="0" name="1_SEC">
            <DESCRIPTION>1 sec.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="2_SEC">
            <DESCRIPTION>2 sec.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="4_SEC">
            <DESCRIPTION>4 sec.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="8_SEC">
            <DESCRIPTION>8 sec.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="16_SEC">
            <DESCRIPTION>16 sec.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="32_SEC">
            <DESCRIPTION>32 sec.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="64_SEC">
            <DESCRIPTION>64 sec.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="128_SEC">
            <DESCRIPTION>128 sec.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WUT_LDC_EN" lsb="6" size="2">
          <ENUMERATION value="0" name="DISABLE_LDC">
            <DESCRIPTION>Disable LDC operation.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="RX_LDC" feature="rx">
            <DESCRIPTION>LDC RX Mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="TX_LDC" feature="tx">
            <DESCRIPTION>LDC TX Mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_M_15_8" value="5" default="0x00" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Configure WUT_M_15_8.</SUMMARY>
      <DESCRIPTION>Sets HW WUT_M higher byte.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_M_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_M_7_0" value="6" default="0x01" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Configure WUT_M_7_0.</SUMMARY>
      <DESCRIPTION>Sets HW WUT_M lower byte.  The M (mantissa) value is only used to define the WUT, and must be set to a minimum of decimal 1.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_M_7_0" lsb="0" size="8">
          <RANGE min="1" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_R" value="7" default="0x60" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Configure WUT_R.</SUMMARY>
      <DESCRIPTION>Sets HW WUT_R.  The R (exponent) value is shared between the WUT and the LDC mode duration. The value of R can be 0, and is limited to a maximum of decimal 20 (10100).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_R" lsb="0" size="5">
          <RANGE min="0" max="20" />
        </FIELD>
        <FIELD name="WUT_SLEEP" lsb="5" size="1">
          <ENUMERATION value="0" name="READY">
            <DESCRIPTION>Go to Ready state after WUT.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SLEEP">
            <DESCRIPTION>Go to Sleep state after WUT.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_LDC" value="8" default="0x00" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Configures LDC active period.</SUMMARY>
      <DESCRIPTION>
        The M (mantissa) value used to define the active period in LDC operation.  R (exponent) is set by <REFERENCE>GLOBAL_WUT_R</REFERENCE>
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="1" max="255" />
    </PROPERTY>
    <PROPERTY group="GLOBAL" name="WUT_CAL" value="9" default="0x00" feature="global_grp" dev="1" wip="0">
      <SUMMARY>Controls if RC32K calibration will be performed on WUT intervals.</SUMMARY>
      <DESCRIPTION>0 disables this feature, any other value will calibrate the RC32K every WUT_CAL wakeup timer intervals.   For example: 1 will calibrate the RC32K every WUT interval, 2 every other, 3 every third, etc.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="1" max="255" />
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="ENABLE" value="256" default="0x04" feature="common" dev="1" wip="0">
      <SUMMARY>This property provides for global enabling of the three interrupt groups (Chip, Modem and Packet Handler) in order to generate HW interrupts at the NIRQ pin.</SUMMARY>
      <DESCRIPTION>Enables top-level interrupt sources to generate HW interrupts at the NIRQ pin.</DESCRIPTION>
      <DESCRIPTION>
        The three interrupt groups are Chip, Modem and Packet Handler.  Each of them contains multiple possible interrupt sources that must be individually enabled via the <REFERENCE>INT_CTL_PH_ENABLE</REFERENCE>, <REFERENCE>INT_CTL_MODEM_ENABLE</REFERENCE>, <REFERENCE>INT_CTL_CHIP_ENABLE</REFERENCE> properties.
      </DESCRIPTION>
      <DESCRIPTION>
        Note that this property only provides for global enabling/disabling of the HW interrupt indication on the NIRQ output pin.  An internal interrupt event may still be generated even if the indication on the NIRQ output pin is disabled.  The interrupt event may always be monitored by polling a GPIO pin, or via <REFERENCE>GET_INT_STATUS</REFERENCE>, <REFERENCE>GET_CHIP_STATUS</REFERENCE>, <REFERENCE>GET_PH_STATUS</REFERENCE>, or <REFERENCE>GET_MODEM_STATUS</REFERENCE> commands.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="PH_INT_STATUS_EN" lsb="0" size="1">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disable pending interrupts in the Packet Handler group from asserting nNIRQ.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLED">
            <DESCRIPTION>Enable pending interrupts in the Packet Handler group to assert nNIRQ.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MODEM_INT_STATUS_EN" lsb="1" size="1" feature="rx">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disable pending interrupts in the Modem group from asserting nNIRQ.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLED">
            <DESCRIPTION>Enable pending interrupts in the Modem group to assert nNIRQ.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHIP_INT_STATUS_EN" lsb="2" size="1">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disable pending interrupts in the Chip Status group from asserting nNIRQ.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLED">
            <DESCRIPTION>Enable pending interrupts in the Chip Status group to assert nNIRQ.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="PH_ENABLE" value="257" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Enable individual interrupt sources within the Packet Handler Interrupt Group to generate a HW interrupt on the NIRQ output pin.</SUMMARY>
      <DESCRIPTION>Enable individual interrupt sources within the Packet Handler Interrupt Group in order to generate a HW interrupt at the NIRQ output pin.</DESCRIPTION>
      <DESCRIPTION>
        In order to fully enable a HW interrupt, it is necessary to enable both the individual interrupt source (within this property) as well as the corresponding interrupt group (e.g., set <REFERENCE>INT_CTL_ENABLE</REFERENCE>:PH_INT_STATUS_EN).
      </DESCRIPTION>
      <DESCRIPTION>
        Note that even if an interrupt source is not enabled to generate a HW NIRQ interrupt, the given interrupt event still may occur inside the chip and may be monitored by polling a GPIO pin, or via the <REFERENCE>GET_INT_STATUS</REFERENCE> or <REFERENCE>GET_PH_STATUS</REFERENCE> commands.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIFO_ALMOST_FULL_EN" lsb="0" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables RX_FIFO_ALMOST_FULL interrupt on rising edge of RX_FIFO_ALMOST_FULL status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="TX_FIFO_ALMOST_EMPTY_EN" lsb="1" size="1" feature="tx">
          <DESCRIPTION>
            If set, Enables TX_FIFO_ALMOST_EMPTY interrupt on rising edge of TX_FIFO_ALMOST_EMPTY status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="ALT_CRC_ERROR_EN" lsb="2" size="1" feature="rx" internal="1">
          <DESCRIPTION>
            If set, Enables ALT_CRC_ERROR interrupt on rising edge of ALT_CRC_ERROR status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="CRC_ERROR_EN" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables CRC_ERROR interrupt on rising edge of CRC_ERROR status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="PACKET_RX_EN" lsb="4" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables PACKET_RX interrupt on rising edge of PACKET_RX status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="PACKET_SENT_EN" lsb="5" size="1" feature="tx">
          <DESCRIPTION>
            If set, Enables PACKET_SENT interrupt on rising edge of PACKET_SENT status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="FILTER_MISS_EN" lsb="6" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables FILTER_MISS interrupt on rising edge of FILTER_MISS status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="FILTER_MATCH_EN" lsb="7" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables FILTER_MATCH interrupt on rising edge of FILTER_MATCH status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="MODEM_ENABLE" value="258" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Enable individual interrupt sources within the Modem Interrupt Group to generate a HW interrupt on the NIRQ output pin.</SUMMARY>
      <DESCRIPTION>Enable individual interrupt sources within the Modem Interrupt Group in order to generate a HW interrupt at the NIRQ output pin.</DESCRIPTION>
      <DESCRIPTION>
        In order to fully enable a HW interrupt, it is necessary to enable both the individual interrupt source (within this property) as well as the corresponding interrupt group (e.g., set <REFERENCE>INT_CTL_ENABLE</REFERENCE>:MODEM_INT_STATUS_EN ).
      </DESCRIPTION>
      <DESCRIPTION>
        Note that even if an interrupt source is not enabled to generate a HW NIRQ interrupt, the given interrupt event still may occur inside the chip and may be monitored by polling a GPIO pin, or via the <REFERENCE>GET_INT_STATUS</REFERENCE> or <REFERENCE>GET_MODEM_STATUS</REFERENCE> commands.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="SYNC_DETECT_EN" lsb="0" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables SYNC_DETECT interrupt on rising edge of SYNC_DETECT status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="PREAMBLE_DETECT_EN" lsb="1" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables PREAMBLE_DETECT interrupt on rising edge of PREAMBLE_DETECT status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="INVALID_PREAMBLE_EN" lsb="2" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables INVALID_PREAMBLE interrupt on rising edge of INVALID_PREAMBLE status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_EN" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables RSSI interrupt on rising edge of RSSI status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_JUMP_EN" lsb="4" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables RSSI_JUMP interrupt on rising edge of RSSI_JUMP status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="INVALID_SYNC_EN" lsb="5" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables INVALID_SYNC interrupt on rising edge of INVALID_SYNC status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="POSTAMBLE_DETECT_EN" lsb="6" size="1" feature="rx">
          <DESCRIPTION>
            If set, Enables POSTAMBLE_DETECT interrupt on rising edge of POSTAMBLE_DETECT status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="RSSI_LATCH_EN" lsb="7" size="1" feature="unreleased">
          <DESCRIPTION>
            If set, Enables RSSI_LATCH interrupt on rising edge of RSSI_LATCH status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="INT_CTL" name="CHIP_ENABLE" value="259" default="0x04" feature="common" dev="1" wip="0">
      <SUMMARY>Enable individual interrupt sources within the Chip Interrupt Group to generate a HW interrupt on the NIRQ output pin.</SUMMARY>
      <DESCRIPTION>Enable individual interrupt sources within the Chip Interrupt Group in order to generate a HW interrupt at the NIRQ output pin.</DESCRIPTION>
      <DESCRIPTION>
        In order to fully enable a HW interrupt, it is necessary to enable both the individual interrupt source (within this property) as well as the corresponding interrupt group (e.g., set <REFERENCE>INT_CTL_ENABLE</REFERENCE>:CHIP_INT_STATUS_EN).
      </DESCRIPTION>
      <DESCRIPTION>
        Note that even if an interrupt source is not enabled to generate a HW NIRQ interrupt, the given interrupt event still may occur inside the chip and may be monitored by polling a GPIO pin, or via the <REFERENCE>GET_INT_STATUS</REFERENCE> or <REFERENCE>GET_CHIP_STATUS</REFERENCE> commands.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="WUT_EN" lsb="0" size="1" feature="pro2">
          <DESCRIPTION>
            If set, Enables WUT interrupt on rising edge of WUT status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="LOW_BATT_EN" lsb="1" size="1" feature="pro2">
          <DESCRIPTION>
            If set, Enables LOW_BATT interrupt on rising edge of LOW_BATT status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="CHIP_READY_EN" lsb="2" size="1">
          <DESCRIPTION>
            If set, Enables CHIP_READY interrupt on rising edge of CHIP_READY status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="CMD_ERROR_EN" lsb="3" size="1">
          <DESCRIPTION>
            If set, Enables CMD_ERROR interrupt on rising edge of CMD_ERROR status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="STATE_CHANGE_EN" lsb="4" size="1">
          <DESCRIPTION>
            If set, Enables STATE_CHANGE interrupt on rising edge of STATE_CHANGE status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="FIFO_UNDERFLOW_OVERFLOW_ERROR_EN" lsb="5" size="1">
          <DESCRIPTION>
            If set, Enables FIFO_UNDERFLOW_OVERFLOW_ERROR interrupt on rising edge of FIFO_UNDERFLOW_OVERFLOW_ERROR status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
        <FIELD name="CAL_EN" lsb="6" size="1">
          <DESCRIPTION>
            If set, Enables CAL interrupt on rising edge of CAL status bit.  See the status bits in <REFERENCE>GET_INT_STATUS</REFERENCE> for more details on the interrupt sources.
          </DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="A_MODE" value="512" default="0x01" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register A Configuration.</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register A.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_A_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS" feature="rx">
            <DESCRIPTION>Modem status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND" feature="rx">
            <DESCRIPTION>Modem interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI" feature="rx">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="B_MODE" value="513" default="0x02" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register B Configuration.</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register B.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_B_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS" feature="rx">
            <DESCRIPTION>Modem status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND" feature="rx">
            <DESCRIPTION>Modem interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI" feature="rx">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="C_MODE" value="514" default="0x09" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register C Configuration.</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register C.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_C_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS" feature="rx">
            <DESCRIPTION>Modem status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND" feature="rx">
            <DESCRIPTION>Modem interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI" feature="rx">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FRR_CTL" name="D_MODE" value="515" default="0x00" feature="common" dev="1" wip="0">
      <SUMMARY>Fast Response Register D Configuration.</SUMMARY>
      <DESCRIPTION>Set the data that is present in fast response register D.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FRR_D_MODE" lsb="0" size="8">
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Disabled.  Will always read back 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="INT_STATUS">
            <DESCRIPTION>Global status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="INT_PEND">
            <DESCRIPTION>Global interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="INT_PH_STATUS">
            <DESCRIPTION>Packet Handler status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="INT_PH_PEND">
            <DESCRIPTION>Packet Handler interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="INT_MODEM_STATUS" feature="rx">
            <DESCRIPTION>Modem status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="INT_MODEM_PEND" feature="rx">
            <DESCRIPTION>Modem interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="INT_CHIP_STATUS">
            <DESCRIPTION>Chip status.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="INT_CHIP_PEND">
            <DESCRIPTION>Chip status interrupt pending.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CURRENT_STATE">
            <DESCRIPTION>Current state.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="LATCHED_RSSI" feature="rx">
            <DESCRIPTION>
              Latched RSSI value as defined in <REFERENCE>MODEM_RSSI_CONTROL</REFERENCE>:LATCH.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="SPARE0" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="SPARE1" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="SPARE2" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="SPARE3" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="SPARE4" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="SPARE5" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="SPARE6" internal="1">
            <DESCRIPTION>Currently unused.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="MODE" value="8704" default="0x08" feature="pa_grp" dev="1" wip="0">
      <SUMMARY>PA operating mode and groups.</SUMMARY>
      <DESCRIPTION>Specify PA mode and HPA/MPA groups.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <BYTE>
        <FIELD name="PA_MODE" lsb="0" size="2">
          <DESCRIPTION>PA mode.</DESCRIPTION>
          <ENUMERATION value="0" name="CLE">
            <DESCRIPTION>Switching Mode (for Class E or Square Wave)</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="SWC">
            <DESCRIPTION>Switched Current Mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PA_STEP_SIZE" lsb="2" size="4">
          <DESCRIPTION>Step size selection for PA_PWR_LVL steps.</DESCRIPTION>
          <ENUMERATION value="1" name="FINE">
            <DESCRIPTION>Finer step size (2x) for 4463/64 with lower maximum power.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="COARSE">
            <DESCRIPTION>Larger step size for 4463/64 with higher maximum power.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANUAL_RAMP" lsb="6" size="1" feature="unreleased">
          <DESCRIPTION>
            Enable manual PA ramping. Step size is defined in <REFERENCE>PA_MANUAL_STEP_SIZE</REFERENCE>. The delay between each step is ~2 us.
          </DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable manual PA ramping.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable manual PA ramping.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="EXT_PA_RAMP" lsb="7" size="1">
          <DESCRIPTION>
            Enable of external PA ramping signal as configured using <REFERENCE>PA_RAMP_EX</REFERENCE>
          </DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable external TX ramp signal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable external TX ramp signal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="PWR_LVL" value="8705" default="0x7F" feature="pa_grp" dev="1" wip="0">
      <SUMMARY>PA Level Configuration.</SUMMARY>
      <DESCRIPTION>Set the PA output power level with higher value as larger output power.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="DDAC" lsb="0" size="7">
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="BIAS_CLKDUTY" value="8706" default="0x00" feature="pa_grp" dev="1" wip="0">
      <SUMMARY>PA Bias and TX clock duty cycle configuration.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="OB" lsb="0" size="6">
          <DESCRIPTION>Set the bias current in Switch Current mode for each UNIT of ODEV.</DESCRIPTION>
          <RANGE min="0" max="63" />
        </FIELD>
        <FIELD name="CLK_DUTY" lsb="6" size="2">
          <DESCRIPTION>Select 25% or 50% duty cycle clocks for transmitter to improve transmit efficiency.</DESCRIPTION>
          <ENUMERATION value="0" name="DIFF_50">
            <DESCRIPTION>TXP: 50%, TXN: 50%</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIFF_25">
            <DESCRIPTION>TXP: 25%, TXN: 25%</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="SINGLE_50">
            <DESCRIPTION>TXP: 50%, TXN: 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="SINGLE_25">
            <DESCRIPTION>TXP: 25%, TXN: 0.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="TC" value="8707" default="0x5D" feature="pa_grp" internal="0" dev="1" wip="0">
      <SUMMARY>PA cascode ramping Configuration.</SUMMARY>
      <DESCRIPTION>Configuration control for PA power ramping in order to minimize switching spectrum noise.  In (G)FSK mode, the values of TC and FSK_MOD_DLY should be programmed together so data modulation only occurs after the PA power ramping has been completed.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FSK_MOD_DLY" lsb="5" size="3">
          <DESCRIPTION>In (G)FSK mode this is the delay from PA enable to the start of modulation.  This is necessary to give the PA time to ramp.</DESCRIPTION>
          <ENUMERATION value="0" name="2_US">
            <DESCRIPTION>Modulation will begin 2 us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="6_US">
            <DESCRIPTION>Modulation will begin 6 us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="10_US">
            <DESCRIPTION>Modulation will begin 10 us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="14_US">
            <DESCRIPTION>Modulation will begin 14 us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="18_US">
            <DESCRIPTION>Modulation will begin 18 us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="22_US">
            <DESCRIPTION>Modulation will begin 22 us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="26_US">
            <DESCRIPTION>Modulation will begin 26 us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="30_US">
            <DESCRIPTION>Modulation will begin 30 us after PA is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TC" lsb="0" size="5">
          <DESCRIPTION>Ramping time (up and down) for the HV cascode of output device.           The ramp rate is determined by the formula: Ramp time=20 us/(32-TC)        NOTE: If using (G)FSK modulation this value must be programmed to a value less than 29.</DESCRIPTION>
          <RANGE min="0" max="31" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="RAMP_EX" value="8708" default="0x00" feature="pa_grp" internal="0" dev="1" wip="0">
      <SUMMARY>PA ramping voltage driving txramp pad Configuration.</SUMMARY>
      <DESCRIPTION>Txramp_stop will receive ook signal from digital and translate that into a 0 to 1.5 V ramping voltage driving txramp pad. This is used to provide a ramping reference for external power amplifier.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="TC" lsb="0" size="4">
          <DESCRIPTION>Ramping time (up and down) determined by the formula: Ramp time=20 us/(32-TC).</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
        <FIELD name="VSET" lsb="4" size="4">
          <DESCRIPTION>Regulator voltage settings. 0 represents 1.0 V, 15 represents 1.5 V.</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PA" name="RAMP_DOWN_DELAY" value="8709" default="0x23" feature="pa_grp" internal="0" dev="1" wip="0">
      <SUMMARY>Delay from the start of the PA ramp down to disabling of the PA output.</SUMMARY>
      <DESCRIPTION>
        This value delays shutting down the PA output until the PA output power is completely ramped down.  The length of this ramp is defined by <REFERENCE>PA_TC</REFERENCE>:TC.
      </DESCRIPTION>
      <DESCRIPTION>
        This value must be greater than or equal to the time specified by <REFERENCE>PA_TC</REFERENCE>:TC and less than 40.
      </DESCRIPTION>
      <DESCRIPTION>Units of this field are us.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="1" max="40" />
    </PROPERTY>
    <PROPERTY group="PA" name="MANUAL_STEP_SIZE" value="8710" default="0x01" feature="unreleased" internal="1" dev="1" wip="0">
      <SUMMARY>PA manual ramp step size.</SUMMARY>
      <DESCRIPTION>
        Defines the step size when MANUAL_RAMP in <REFERENCE>PA_MODE</REFERENCE> is enabled or during the <REFERENCE>TX_HOP</REFERENCE> command.  The delay between each step is 1 us.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="1" max="127" />
    </PROPERTY>
    <PROPERTY group="SYNTH" name="PFDCP_CPFF" value="8960" default="0x2C" feature="pro2" dev="1" wip="0">
      <SUMMARY>Feed forward charge pump current selection.</SUMMARY>
      <DESCRIPTION>The charge pump and loop filter in the PLL Synthesizer have two paths:  an integral path and a feed-forward path.  This property adjusts the charge pump gain (i.e., current) for the feed-forward path.</DESCRIPTION>
      <DESCRIPTION>The coding of the MSB (bit 5) of the CP_FF_CUR field is inverted.  As a result, the minimum charge pump gain setting is obtained for a value of CP_FF_CUR=0x20, while CP_FF_CUR=0x00 corresponds to a mid-range charge pump gain setting and 0x1F corresponds to the maximum charge pump gain setting.</DESCRIPTION>
      <DESCRIPTION>The step size or resolution of the charge pump feed-forward current is in increments of 5 uA.  Thus the range of values provided by the CP_FF_CUR field is from 0 uA to 315 uA.</DESCRIPTION>
      <DESCRIPTION>CP_FF_CUR_TEST is a test bit and is not recommended for general customer applications. The CP_FF_CUR_TEST bit is not binary-weighted with the CP_FF_CUR field but instead provides an additional 160 uA, when set.</DESCRIPTION>
      <DESCRIPTION>NOTE:  the primary purpose of the SYNTH group of properties is to adjust the PLL loop bandwidth to a value appropriate for the selected data rate.  Silicon Labs does not recommend modifying these properties away from the values suggested by the WDS Calculator.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="cp_ff_cur_test" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not increase charge pump current.  Use value defined in CP_FF_CUR.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Increase charge pump current defined in CP_FF_CUR by 160 uA.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="cp_ff_cur" lsb="0" size="6">
          <ENUMERATION value="0x20">
            <DESCRIPTION>0 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x21">
            <DESCRIPTION>5 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3F">
            <DESCRIPTION>155 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x00">
            <DESCRIPTION>160 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>165 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1F">
            <DESCRIPTION>315 uA.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="PFDCP_CPINT" value="8961" default="0x0E" feature="pro2" dev="1" wip="0">
      <SUMMARY>Integration charge pump current selection.</SUMMARY>
      <DESCRIPTION>The charge pump and loop filter in the PLL Synthesizer have two paths:  an integral path and a feed-forward path.  This property adjusts the charge pump gain (i.e., current) for the integral path.</DESCRIPTION>
      <DESCRIPTION>The coding of the MSB (bit 3) of the CP_INT_CUR field is inverted.  As a result, the minimum charge pump gain setting is obtained for a value of CP_INT_CUR=0x08, while CP_INT_CUR=0x00 corresponds to a mid-range charge pump gain setting and 0x07 corresponds to the maximum charge pump gain setting.</DESCRIPTION>
      <DESCRIPTION>The step size or resolution of the charge pump feed-forward current is in increments of 5 uA.  Thus the range of values provided by the CP_INT_CUR field is from 0 uA to 75 uA.</DESCRIPTION>
      <DESCRIPTION>NOTE:  the primary purpose of the SYNTH group of properties is to adjust the PLL loop bandwidth to a value appropriate for the selected data rate.  Silicon Labs does not recommend modifying these properties away from the values suggested by the WDS Calculator.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="cp_int_cur" lsb="0" size="4">
          <ENUMERATION value="8">
            <DESCRIPTION>0 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9">
            <DESCRIPTION>5 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10">
            <DESCRIPTION>10 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11">
            <DESCRIPTION>15 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12">
            <DESCRIPTION>20 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12">
            <DESCRIPTION>25 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14">
            <DESCRIPTION>30 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>35 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0">
            <DESCRIPTION>40 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>45 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>50 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>55 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>60 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>65 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>70 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>Maximum 75 uA.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="VCO_KV" value="8962" default="0x0B" feature="pro2" dev="1" wip="0">
      <SUMMARY>Gain scaling factors (Kv) for the VCO tuning varactors on both the integrated-path and feed forward path.</SUMMARY>
      <DESCRIPTION>The charge pump, loop filter, and VCO tuning varactors in the PLL Synthesizer have two paths:  an integral path and a feed-forward path.  This property adjusts the gain scaling factors (Kv) for the tuning varactors in both the integral path and the feed-forward path.  The adjustment of the gain factors is accomplished internally by switching in different number of varactor devices.</DESCRIPTION>
      <DESCRIPTION>NOTE:  the primary purpose of the SYNTH group of properties is to adjust the PLL loop bandwidth to a value appropriate for the selected data rate.  Silicon Labs does not recommend modifying these properties away from the values suggested by the WDS Calculator.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="kv_int" lsb="0" size="2">
          <DESCRIPTION>Sets the scaling factor on the tuning varactor gain (Kv_int) in the integral path.</DESCRIPTION>
          <ENUMERATION value="0" name="GND">
            <DESCRIPTION>Sets the integral path tuning varactor input port of the VCO to GND (used only for testing purposes).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="33PERCENT">
            <DESCRIPTION>Sets kv_int to 1/3 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="66PENCENT">
            <DESCRIPTION>Sets kv_int to 2/3 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="MAX">
            <DESCRIPTION>Sets kv_int to its maximum value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="kv_dir" lsb="2" size="2">
          <DESCRIPTION>Sets the scaling factor on the tuning varactor gain (Kv_dir) in the feed-forward path (i.e., direct path).</DESCRIPTION>
          <ENUMERATION value="0" name="GND">
            <DESCRIPTION>
              Sets the feed-forward (i.e., direct) path tuning varactor input port of the
              VCO to GND (used only for testing purposes).
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HALF">
            <DESCRIPTION>Sets kv_dir to 1/2 of its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="MAX">
            <DESCRIPTION>Sets kv_dir to its maximum value.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Sets kv_dir to its maximum value (same as kv_dir = 2).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Reserved" lsb="4" size="1">
          <DESCRIPTION>Reserved.  Always write 0.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT3" value="8963" default="0x04" feature="pro2" dev="1" wip="0">
      <SUMMARY>Value of resistor R2 in feed-forward path of loop filter.</SUMMARY>
      <DESCRIPTION>The loop filter in the feed-forward path contains three lowpass filter poles:  R1-C1,  R2-C2, and R3-C3.</DESCRIPTION>
      <DESCRIPTION>The LPF_FF_R2 field adjusts the value of resistor R2, and thus adjusts the cutoff frequency of the R2-C2 lowpass filter pole.</DESCRIPTION>
      <DESCRIPTION>Additionally, the resistor R2 affects the DC gain of the transistor Gm stage in the feed-forward path.  Increasing the value of R2 has the effect of increasing the feed-forward path gain.</DESCRIPTION>
      <DESCRIPTION>The value of R2 is in increments of 18 kOhm, ranging from a minimum value of 18 kOhm to a maximum of 144 kOhm.</DESCRIPTION>
      <DESCRIPTION>NOTE:  the primary purpose of the SYNTH group of properties is to adjust the PLL loop bandwidth to a value appropriate for the selected data rate.  Silicon Labs does not recommend modifying these properties away from the values suggested by the WDS Calculator.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_r2" lsb="0" size="3">
          <ENUMERATION value="0">
            <DESCRIPTION>R2 = 18 kOhm.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>R2 = 144 kOhm.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT2" value="8964" default="0x0C" feature="pro2" dev="1" wip="0">
      <SUMMARY>Value of capacitor C2 in feed-forward path of loop filter.</SUMMARY>
      <DESCRIPTION>The loop filter in the feed-forward path contains three lowpass filter poles:  R1-C1, R2-C2, and R3-C3.</DESCRIPTION>
      <DESCRIPTION>The LPF_FF_C2 field adjusts the value of capacitor C2, and thus adjusts the cutoff frequency of the R2-C2 lowpass filter pole.</DESCRIPTION>
      <DESCRIPTION>The value of C2 is in increments of 335 fF, ranging from a minimum value of 877 fF to a maximum of 11.25 pF.</DESCRIPTION>
      <DESCRIPTION>NOTE:  the primary purpose of the SYNTH group of properties is to adjust the PLL loop bandwidth to a value appropriate for the selected data rate.  Silicon Labs does not recommend modifying these properties away from the values suggested by the WDS Calculator.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_c2" lsb="0" size="5">
          <ENUMERATION value="0">
            <DESCRIPTION>C2 = 877 fF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31">
            <DESCRIPTION>C2 = 11.25 pF.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT1" value="8965" default="0x73" feature="pro2" dev="1" wip="0">
      <SUMMARY>Value of capacitors C1 and C3 in feed-forward path of loop filter.</SUMMARY>
      <DESCRIPTION>The loop filter in the feed-forward path contains three lowpass filter poles:  R1-C1, R2-C2, and R3-C3.</DESCRIPTION>
      <DESCRIPTION>The LPF_FF_C3 field adjusts the value of capacitor C3, and thus adjusts the cutoff frequency of the R3-C3 lowpass filter pole.  The value of resistor R3 is not adjustable and is fixed at R3=3.94 kOhm.</DESCRIPTION>
      <DESCRIPTION>The value of C3 is in increments of 1 pF, ranging from a minimum value of 9 pF  to a maximum of 12 pF.</DESCRIPTION>
      <DESCRIPTION>The total value of capacitor C1 is determined by a 3-bit binary-weighted field LPF_FF_C1 in increments of 380 fF, and a 2-bit offset field LPF_FF_C1_CODE in increments of 1 pF, plus an additional fixed capacitance of 4.55 pF.  Thus the total value of capacitor C1 may be described by the following equation:</DESCRIPTION>
      <DESCRIPTION>C1 = 4.55pF + 380fF*LPF_FF_C1 + 1pF*LPF_FF_C1_CODE</DESCRIPTION>
      <DESCRIPTION>The value of resistor R1 is not adjustable and is fixed at R1=9.86 kOhm.</DESCRIPTION>
      <DESCRIPTION>NOTE:  the primary purpose of the SYNTH group of properties is to adjust the PLL loop bandwidth to a value appropriate for the selected data rate.  Silicon Labs does not recommend modifying these properties away from the values suggested by the WDS Calculator.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_c3" lsb="0" size="2">
          <DESCRIPTION>Sets the value of C3 in increments of 1pF, with a range of 9pF to 12pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>C3 =  9 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>C3 = 10 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>C3 = 11 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>C3 = 12 pF.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="lpf_ff_c1_code" lsb="2" size="2">
          <DESCRIPTION>Offsets the value of C1 in increments of 1pF, with a range of 0pF to 3pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>delta C1 = 0 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>delta C1 = 1 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>delta C1 = 2 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>delta C1 = 3 pF.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="lpf_ff_c1" lsb="4" size="3">
          <DESCRIPTION>Sets the fine-tune value of C1 in increments of 380 fF, with a range from 4.55 pF to 7.21 pF.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>C1 = 4.55 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>C1 = 4.93 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>C1 = 5.31 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>C1 = 5.69 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>C1 = 6.07 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>C1 = 6.45 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>C1 = 6.83 pF.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>C1 = 7.21 pF.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="LPFILT0" value="8966" default="0x03" feature="pro2" dev="1" wip="0">
      <SUMMARY>Bias current of the loop filter.</SUMMARY>
      <DESCRIPTION>Bias current of the loop filter, 25 uA, 34 uA, 50 uA or 100 uA.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="lpf_ff_bias" lsb="0" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>25 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>34 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>50 uA.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>100 uA.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNTH" name="VCO_KVCAL" value="8967" default="0x05" feature="pro2" dev="1" wip="0">
      <SUMMARY>Scaling entire KV of VCO.</SUMMARY>
      <DESCRIPTION>Scaling on VCO KV for all parameters.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="kvcal" lsb="0" size="4">
          <DESCRIPTION>Sets the scaling on the VCO ladder where 0 is the max voltage setting and 15 is the min voltage setting.</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
        <FIELD name="ladr_select" lsb="4" size="1">
          <DESCRIPTION>Enable VCO ladder.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Disable VCO ladder.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable VCO ladder.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MOD_TYPE" value="8192" default="0x02" feature="pro2" dev="1" wip="0">
      <SUMMARY>Selects the type of modulation.  In TX mode, additionally selects the source of the modulation.</SUMMARY>
      <DESCRIPTION>This property configures the Modem in the chip for transmission/reception of the following modulation types: OOK, 2(G)FSK, and 4(G)FSK (if supported) modulation.</DESCRIPTION>
      <DESCRIPTION>In TX mode, this property is additionally used to select the source of the TX data stream, and whether that TX data stream is from a synchronous or asynchronous source (in Direct mode only).</DESCRIPTION>
      <DESCRIPTION>The Modem must be configured for transmission/reception of only one type of modulation throughout the entire packet; it is not possible (for example) to use OOK modulation over certain fields and (G)FSK modulation over other fields.  If 4(G)FSK is supported, it is possible to switch between 2(G)FSK and 4(G)FSK on a field-specific basis; however, this is accomplished by configuring the Modem to 4(G)FSK mode for the entire packet and then performing special data processing in the Packet Handler.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MOD_TYPE" lsb="0" size="3">
          <DESCRIPTION>This field configures the Modem for transmission or reception of the desired type of modulation.</DESCRIPTION>
          <DESCRIPTION>With the exception of CW mode (a TX-only function), this bit is applicable in both TX and RX modes.</DESCRIPTION>
          <ENUMERATION value="0" name="CW">
            <DESCRIPTION>CW.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="OOK">
            <DESCRIPTION>OOK.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="2FSK">
            <DESCRIPTION>2FSK.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="2GFSK">
            <DESCRIPTION>2GFSK.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="4FSK" feature="4fsk">
            <DESCRIPTION>4FSK.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="4GFSK" feature="4fsk">
            <DESCRIPTION>4GFSK.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MOD_SOURCE" lsb="3" size="2" feature="tx">
          <DESCRIPTION>This bit selects the source of modulation during TX mode.  It is applicable only in TX mode.</DESCRIPTION>
          <ENUMERATION value="0" name="PACKET">
            <DESCRIPTION>The modulation is sourced from the TX FIFO in the Packet Handler.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIRECT">
            <DESCRIPTION>The modulation is sourced in real-time (i.e., TX Direct Mode) from a GPIO pin, as selected by the TX_DIRECT_MODE_GPIO field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="PSEUDO">
            <DESCRIPTION>The modulation is sourced from the internal pseudo-random number generator.  The pattern length and sequence are set by the PKT_WHT_POLY_XX properties.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_GPIO" lsb="5" size="2" feature="tx">
          <DESCRIPTION>This field determines which GPIO pin is selected by the Modem as the modulation data source during TX Direct mode.  This bit is applicable only in TX mode, and only when the MOD_SOURCE field is also set for TX Direct mode.</DESCRIPTION>
          <DESCRIPTION>
            This field does not automatically configure the selected GPIO pin as a digital input pin; it remains necessary to additionally configure the desired GPIO pin as a CMOS-compatible input pin by setting <REFERENCE>GPIO_PIN_CFG</REFERENCE>=0x04.
          </DESCRIPTION>
          <ENUMERATION value="0" name="GPIO0">
            <DESCRIPTION>TX direct mode uses GPIO0 as data source.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="GPIO1">
            <DESCRIPTION>TX direct mode uses GPIO1 as data source.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="GPIO2">
            <DESCRIPTION>TX direct mode uses GPIO2 as data source.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GPIO3">
            <DESCRIPTION>TX direct mode uses GPIO3 as data source.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_TYPE" lsb="7" size="1" feature="tx">
          <DESCRIPTION>This bit determines whether a real-time TX data stream (applied to the chip on a selected GPIO input pin) is processed in synchronous or asynchronous fashion.  This bit is applicable only in TX mode, and only when the MOD_SOURCE field is also set for TX Direct mode.</DESCRIPTION>
          <DESCRIPTION>In TX Direct Synchronous mode, the chip controls the transmit data rate by outputting a TX bit clock (GPIO_PIN_CFG=0x10).  The host MCU receives the rising edge of the TX clock and responds by outputting one bit for each clock tick; the chip clocks in this new data bit on the subsequent falling edge of the TX clock.  All 2-level modulation modes (OOK, 2FSK, 2GFSK) are supported.</DESCRIPTION>
          <DESCRIPTION>In TX Direct Asynchronous mode, the host MCU controls the transmit data rate; the RFIC has no knowledge of the rate of the incoming TX data stream but simply oversamples the data as fast as possible to determine the bit edge transitions.  OOK and 2FSK are supported, but 2GFSK is not supported in this mode.</DESCRIPTION>
          <DESCRIPTION>4(G)FSK is not supported in either TX Direct Synchronous or TX Direct Asynchronous modes.</DESCRIPTION>
          <ENUMERATION value="0" name="SYNC">
            <DESCRIPTION>Direct mode operates in synchronous mode, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ASYNC">
            <DESCRIPTION>Direct mode operates in asynchronous mode, applies to TX only.  GFSK is not supported.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MAP_CONTROL" value="8193" default="0x80" feature="pro2" dev="1" wip="0">
      <SUMMARY>Controls bit mapping.</SUMMARY>
      <DESCRIPTION>Modem Mapping Control.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="eninv_adcq" internal="1" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert ADC Q channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert ADC Q channel.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="eninv_fd" lsb="4" size="1">
          <DESCRIPTION>If set, frequency deviation's priority  from negative to positive.</DESCRIPTION>
        </FIELD>
        <FIELD name="eninv_txbit" lsb="5" size="1" feature="tx">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert TX data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert TX data bits.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="eninv_rxbit" lsb="6" size="1" feature="rx">
          <ENUMERATION value="0">
            <DESCRIPTION>Do not invert RX data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Invert RX data bits.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enmanch" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Disable Manchester coding.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable Manchester coding.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DSM_CTRL" value="8194" default="0x07" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>DSM control.</SUMMARY>
      <DESCRIPTION>Delta Sigma Modulator control.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="dsm_order" lsb="0" size="2">
          <DESCRIPTION>DSM Mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>0 order, with 0 output continuously.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>1st order, on noise shaping.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>2nd order, MASH 1-1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>3rd order, MASH 1-1-1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsm_lsb" lsb="2" size="1">
          <DESCRIPTION>If set, DSM LSB input will be high all times.</DESCRIPTION>
        </FIELD>
        <FIELD name="dsm_rst" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>DSM reset is not active.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM will be in reset state until it is clear.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmdttp" lsb="4" size="1">
          <DESCRIPTION>Dithering type.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>+1/0 is added to DSM input LSB.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>+1/-1 is added to DSM input LSB.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmdt_en" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>DSM dithering is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM dithering is enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsm_mode" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>MASH 1-1-1 DSM will be selected.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>A single loop DSM will be selected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dsmclk_sel" lsb="7" size="1">
          <DESCRIPTION>DSM clock source selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>DSM clock comes from 30 MHz PLL feedback clock.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DSM clock comes from 30 MHz crystal clock.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_2" value="8195" default="0x0F" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_23_16" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_1" value="8196" default="0x42" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DATA_RATE_0" value="8197" default="0x40" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of TX data rate in bps (bits per second).</SUMMARY>
      <DESCRIPTION>Data rate, unsigned 24-bit, 100 kbps by default.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="dr_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_3" value="8198" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 3 of TX NCOs modulo and TX filter oversampling ratio.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50 kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_25_24" lsb="0" size="2">
          <RANGE min="0" max="3" />
        </FIELD>
        <FIELD name="txosr" lsb="2" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>TX filter's output oversampling ratio is 10. GFSK Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>TX filter's output oversampling ratio is 40. GFSK Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>TX filter's output oversampling ratio is 20. GFSK Only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Reserved.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_2" value="8199" default="0xC9" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50 kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_23_16" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_1" value="8200" default="0xC3" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50 kbps, it should be set to 0x1C9C380. Otherwise it will be 0x2DC6C0.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_NCO_MODE_0" value="8201" default="0x80" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of TX NCOs modulo.</SUMMARY>
      <DESCRIPTION>TX NCOs modulo, unsigned 26-bit, default value is 0x1C9C380. Together with the crystal frequency and data rate, this number will set the symbol rate. If data rate is greater than 50 kbps, it should be set to 0x1C9C380.  Otherwise it will be 0x2DC6C0.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncomod_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_2" value="8202" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of the 17-bit unsigned TX frequency deviation word.</SUMMARY>
      <DESCRIPTION>The TX frequency deviation is specified by an unsigned 17-bit value.  This property defines Byte 2 of the frequency deviation value.</DESCRIPTION>
      <DESCRIPTION>The units of the MODEM_FREQ_DEV_X property are in increments of the LSB tuning resolution of the PLL Synthesizer, and are therefore a function of the crystal frequency and output frequency band.  The formula for calculating the value of the MODEM_FREQ_DEV property is given by the following equation:</DESCRIPTION>
      <LATEX equation="MODEM\_FREQ\_DEV=\left(\frac{2^{19}*outdiv*Desired\_Dev\_Hz}{2*freq\_xo}\right)" dpi="150">
      </LATEX>
      <DESCRIPTION>For 2(G)FSK mode, the specified value is the peak deviation.  For 4(G)FSK mode (if supported), the specified value is the inner deviation (i.e., between channel center frequency and the nearest symbol deviation level).</DESCRIPTION>
      <DESCRIPTION>The MODEM_FREQ_DEV_X properties are only used in TX mode.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_16" lsb="0" size="1">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_1" value="8203" default="0x06" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of the 17-bit unsigned TX frequency deviation word.</SUMMARY>
      <DESCRIPTION>The TX frequency deviation is specified by an unsigned 17-bit value.  This property defines Byte 1 of the frequency deviation value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_FREQ_DEV_2</REFERENCE> for more details regarding TX frequency deviation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_15_8" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_DEV_0" value="8204" default="0xD3" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of the 17-bit unsigned TX frequency deviation word.</SUMMARY>
      <DESCRIPTION>The TX frequency deviation is specified by an unsigned 17-bit value.  This property defines Byte 0 of the frequency deviation value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_FREQ_DEV_2</REFERENCE> for more details regarding TX frequency deviation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqdev_7_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_OFFSET_1" value="8205" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of frequency offset adjustment(a 16-bit signed number).</SUMMARY>
      <DESCRIPTION>In TX mode, the MODEM_FREQ_OFFSET value is used to provide an offset to the programmed TX frequency. This allows fine tuning of the TX frequency to account for the variability of the TX reference frequency (e.g., crystal oscillator frequency error).</DESCRIPTION>
      <DESCRIPTION>
        In RX mode when PLL AFC is disabled, the MODEM_FREQ_OFFSET value is used to provide an offset for the programmed RX frequency.  This property has no function in RX mode with PLL AFC enabled.  Specifically, reading this property does NOT return the estimated AFC frequency error in RX mode; that frequency error value may be obtained from the <REFERENCE>GET_MODEM_STATUS</REFERENCE> command.
      </DESCRIPTION>
      <DESCRIPTION>The frequency offset adjustment is a signed 16-bit value.  This property is Byte 1 of the frequency offset value.</DESCRIPTION>
      <DESCRIPTION>The units of the MODEM_FREQ_OFFSET_X property are in increments of the LSB tuning resolution of the PLL Synthesizer, and are therefore a function of the crystal reference frequency and output frequency band.  The formula for calculating the value of the MODEM_FREQ_OFFSET property is given by the following equation:</DESCRIPTION>
      <LATEX equation="MODEM\_FREQ\_OFFSET=\left(\frac{2^{19}*outdiv*Desired\_Offset\_Hz}{2*freq\_xo}\right)" dpi="150">
      </LATEX>
      <DESCRIPTION>The absolute range of this property expressed in Hz is a function of the crystal reference frequency and output frequency band, but ranges from +/-937.5 kHz in the 915M band to +/-468.7 kHz in the 450M band, etc.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqoffset_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FREQ_OFFSET_0" value="8206" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of frequency offset adjustment (a 16-bit signed number).</SUMMARY>
      <DESCRIPTION>This property is Byte 0 of the frequency offset value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_FREQ_OFFSET_1</REFERENCE> for more details regarding the frequency offset function.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="freqoffset_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_8" value="8207" default="0x67" feature="tx" dev="1" wip="0">
      <SUMMARY>The 8th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>The chip can apply a spectral shaping filter function (e.g., Gaussian filtering) to the TX data stream.  The filter is implemented as a 17-tap digital FIR filter, and thus internally there are a total of 17 filter coefficients.  However, the values of the tap coefficients are symmetrical: Coeff16=Coeff0, Coeff15=Coeff1, etc. Thus it is only necessary to store a total of 9 coefficients (Coeff8 thru Coeff0); the internal circuitry obtains the remaining coefficients through symmetry.</DESCRIPTION>
      <DESCRIPTION>This property specifies the 8th coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>The filtering function provided by the default suggested coefficient values is Gaussian filtering with B*T=0.5.  Other filtering functions are possible; please contact Silicon Labs for filter coefficient values.</DESCRIPTION>
      <DESCRIPTION>The spectral shaping filter function is used only in TX mode, and is not available when using TX Direct Asynchronous mode.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_7" value="8208" default="0x60" feature="tx" dev="1" wip="0">
      <SUMMARY>The 7th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>This property specifies the 7th coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_TX_FILTER_COEFF_8</REFERENCE> for more details regarding TX spectral shaping filtering.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe7" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_6" value="8209" default="0x4D" feature="tx" dev="1" wip="0">
      <SUMMARY>The 6th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>This property specifies the 6th coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_TX_FILTER_COEFF_8</REFERENCE> for more details regarding TX spectral shaping filtering.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe6" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_5" value="8210" default="0x36" feature="tx" dev="1" wip="0">
      <SUMMARY>The 5th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>This property specifies the 5th coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_TX_FILTER_COEFF_8</REFERENCE> for more details regarding TX spectral shaping filtering.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe5" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_4" value="8211" default="0x21" feature="tx" dev="1" wip="0">
      <SUMMARY>The 4th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>This property specifies the 4th coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_TX_FILTER_COEFF_8</REFERENCE> for more details regarding TX spectral shaping filtering.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe4" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_3" value="8212" default="0x11" feature="tx" dev="1" wip="0">
      <SUMMARY>The 3rd coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>This property specifies the 3rd coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_TX_FILTER_COEFF_8</REFERENCE> for more details regarding TX spectral shaping filtering.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe3" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_2" value="8213" default="0x08" feature="tx" dev="1" wip="0">
      <SUMMARY>The 2nd coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>This property specifies the 2nd coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_TX_FILTER_COEFF_8</REFERENCE> for more details regarding TX spectral shaping filtering.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe2" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_1" value="8214" default="0x03" feature="tx" dev="1" wip="0">
      <SUMMARY>The 1st coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>This property specifies the 1st coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_TX_FILTER_COEFF_8</REFERENCE> for more details regarding TX spectral shaping filtering.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe1" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_FILTER_COEFF_0" value="8215" default="0x01" feature="tx" dev="1" wip="0">
      <SUMMARY>The 0th coefficient of TX spectral shaping filter.</SUMMARY>
      <DESCRIPTION>This property specifies the 0th coefficient of the TX shaping filter.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_TX_FILTER_COEFF_8</REFERENCE> for more details regarding TX spectral shaping filtering.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="txcoe0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="TX_RAMP_DELAY" value="8216" default="0x01" feature="tx" dev="1" wip="0">
      <SUMMARY>TX filter ramp delay setting.</SUMMARY>
      <DESCRIPTION>Unit in TX bit cycle, it is calculated according to modulation type.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ramp_dly" lsb="0" size="3">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="MDM_CTRL" value="8217" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>MDM control.</SUMMARY>
      <DESCRIPTION>Detector selection and PM pattern configuration.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ph_src_sel" lsb="7" size="1">
          <DESCRIPTION>BCR/Slicer phase source selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Input from phase computer output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Input from detector's output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_CONTROL" value="8218" default="0x08" feature="pro2" dev="1" wip="0">
      <SUMMARY>Fixed or scalable IF.</SUMMARY>
      <DESCRIPTION>Specifies fixed-IF(468.75 kHz), zero-IF, or scalable IF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="fixif" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>scaled-IF mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>fixed-IF mode, if_freq should be set to 468.75kHz.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="zeroif" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>normal mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>zero-IF mode, if_freq should be set to 0.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_2" value="8219" default="0x03" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of IF frequency setting.</SUMMARY>
      <DESCRIPTION>Bits 16 an 17 of the 18-bit IF frequency. Specify fixed-IF(468.75kHz), zero-IF, or scalable IF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_17_16" lsb="0" size="2">
          <DESCRIPTION>Bits 16 an 17 of the 18-bit IF frequency.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_1" value="8220" default="0xC0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of IF frequency setting.</SUMMARY>
      <DESCRIPTION>IF frequency is 18-bit.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="IF_FREQ_0" value="8221" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of IF frequency setting.</SUMMARY>
      <DESCRIPTION>IF frequency is 18-bit.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="if_freq_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DECIMATION_CFG1" value="8222" default="0x10" feature="pro2" dev="1" wip="0">
      <SUMMARY>Specifies the three CIC filter decimator ratios.</SUMMARY>
      <DESCRIPTION>Specifies the exponent of decimation ratios of the three CIC decimators in RX filter chain.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ndec0" lsb="1" size="3">
          <DESCRIPTION>OOK modem CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec0.</DESCRIPTION>
          <DESCRIPTION>ndec0 should be set to 0 for non-OOK modem.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>decimating by 16.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>decimating by 32.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>decimating by 64.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>decimating by 128.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ndec1" lsb="4" size="2">
          <DESCRIPTION>First stage CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec1.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ndec2" lsb="6" size="2">
          <DESCRIPTION>Second stage CIC filter decimating index.</DESCRIPTION>
          <DESCRIPTION>Decimating rate is 2^ndec2.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>decimating by 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>decimating by 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>decimating by 4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>decimating by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DECIMATION_CFG0" value="8223" default="0x20" feature="pro2" dev="1" wip="0">
      <SUMMARY>Specifies miscellaneous decimator filter selections.</SUMMARY>
      <DESCRIPTION>This property specifies the selection of the two polyphase filters preceding CIC filters,  the droop compensation filter, the RX decimate by 8 2x filter and the channel filter power mode.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxgainx2" lsb="0" size="1">
          <DESCRIPTION>Double filter's gain for decimating by 8.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>double filter's gain for decimating by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dwn2byp" lsb="4" size="1">
          <DESCRIPTION>Controls decimation by 2 filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass decimate-by-2 polyphase filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dwn3byp" lsb="5" size="1">
          <DESCRIPTION>Controls decimation by 3 filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass decimate-by-3 polyphase filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="droopfltbyp" lsb="6" size="1">
          <DESCRIPTION>Controls droop compensation filter.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bypass droop compensation filter.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="chflt_lopw" lsb="7" size="1">
          <DESCRIPTION>Controls channel filter power mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Channel filter operates in low power mode,  i.e., the number of taps is reduced from 27 to 15.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_20" value="8224" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_21" value="8225" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_OSR_1" value="8226" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>High byte of RX symbol oversampling rate at BCR/Slicer (12-bit unsigned number).</SUMMARY>
      <DESCRIPTION>High byte of RX symbol oversampling rate at BCR/Slicer (12-bit unsigned number).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxosr_11_8" lsb="0" size="4">
          <DESCRIPTION>High byte of RX symbol oversampling rate at BCR/Slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_OSR_0" value="8227" default="0x4B" feature="pro2" dev="1" wip="0">
      <SUMMARY>Low byte of RX symbol oversampling rate at BCR/Slicer.</SUMMARY>
      <DESCRIPTION>Low byte of RX symbol oversampling rate at BCR/Slicer, total 12 bits.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rxosr_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of RX symbol oversampling rate at BCR/Slicer.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_2" value="8228" default="0x06" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 2 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Specifies the 6 MSBs of the BCR NCO offset.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_21_16" lsb="0" size="6">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_1" value="8229" default="0xD3" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_NCO_OFFSET_0" value="8230" default="0xA0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of RX BCR NCO offset (an unsigned 22-bit number).</SUMMARY>
      <DESCRIPTION>Low byte of RX NCO offset.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ncoff_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GAIN_1" value="8231" default="0x06" feature="pro2" dev="1" wip="0">
      <SUMMARY>High byte of unsigned 11-bit RX BCR loop gain value.</SUMMARY>
      <DESCRIPTION>High byte of clock recovery timing loop gain value.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="crgain_10_8" lsb="0" size="3">
          <DESCRIPTION>High byte of clock recovery timing loop gain.</DESCRIPTION>
          <DESCRIPTION>The clock recovery gain is an unsigned 11-bit value that serves as a common "baseline" gain value; it is scaled by individually selectable amplification factors to determine the bit clock recovery gain values to be used prior to and after gear switching.</DESCRIPTION>
          <DESCRIPTION>
            These scale factors are specified by <REFERENCE>MODEM_BCR_GEAR</REFERENCE>:crfast and <REFERENCE>MODEM_BCR_GEAR</REFERENCE>:crslow.
          </DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GAIN_0" value="8232" default="0xD3" feature="pro2" dev="1" wip="0">
      <SUMMARY>Low byte of unsigned 11-bit RX BCR loop gain value.</SUMMARY>
      <DESCRIPTION>Low byte of clock recovery timing loop gain value.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="crgain_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_GEAR" value="8233" default="0x02" feature="pro2" dev="1" wip="0">
      <SUMMARY>RX BCR loop gear control.</SUMMARY>
      <DESCRIPTION>RX BCR loop gear control.</DESCRIPTION>
      <DESCRIPTION>A reduced value of bit clock recovery gain is often desired after gear shifting (to reduce clock jitter).  The BCR loop gain in both gear modes is obtained from a baseline clock recovery gain value (crgain in the MODEM_BCR_GAIN_x properties), scaled by the crfast and crslow values specified in this property.  NOTE:  larger values of crfast or crslow result in lower values of bit clock recovery gain.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="crslow" lsb="0" size="3">
          <DESCRIPTION>The slow timing gain applies after gear switching occurs. The effective BCR loop gain is calculated as: crgain/(2^crslow).</DESCRIPTION>
        </FIELD>
        <FIELD name="crfast" lsb="3" size="3">
          <DESCRIPTION>The fast timing gain applies before gear switching occurs.  The effective BCR loop gain is calculated as: crgain/(2^crfast).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_MISC1" value="8234" default="0xC0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Miscellaneous RX BCR loop controls.</SUMMARY>
      <DESCRIPTION>This property configures miscellaneous options within the RX BCR loop.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="bcrfbbyp" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR feedback phase compensation is bypassed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="slicefbbyp" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Slicer feedback phase compensation is bypassed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rxncocomp" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR NCO compensation is enabled when data rate error is greater than 1%.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Rxcomp_lat" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>BCR NCO compensation is sampled by end of preamble.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR NCO compensation is sampled by preamble detection.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Crgainx2" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR loop gain is doubled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Dis_midpt" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>BCR midpoint phase correction is disabled; this bit shall be  set if preamble is in '1010' patterns.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="Esc_midpt" lsb="0" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>When BCR mid-point phase is detected, NCO will stop running  for one sample clock to escape BCR mid-point phase sample.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>When BCR mid-point phase is detected, current phase error is  added to NCO to escape BCR mid-point phase sample.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="BCR_MISC0" value="8235" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Miscellaneous RX BCR loop controls.</SUMMARY>
      <DESCRIPTION>This property configures miscellaneous options within the RX BCR loop.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="adcwatch" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC watch dog is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC watch dog is enabled. If the invalid preamble is detected and  no 1010 pattern is detected, ADC reset will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="adcrst" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC watch dog is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable ADC reset from AGC loop.  If IF-PD's current and previous high threshold exceed,  ADC reset will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="distogg" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enabled. If the phase differential output is zero,  the discriminator output will be toggling.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ph0size" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>5 consecutive zeros of phase differential output will cause RX machine reset.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>3 consecutive zeros of phase differential output will cause RX machine reset.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GEAR" value="8236" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>RX AFC loop gear control.</SUMMARY>
      <DESCRIPTION>Selection of gear switching source for both RX AFC and BCR.</DESCRIPTION>
      <DESCRIPTION>Control of gain for RX AFC in both FAST and SLOW modes (i.e., before and after gear switching)</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="afc_slow" lsb="0" size="3">
          <DESCRIPTION>AFC Low Gear gain setting.</DESCRIPTION>
          <DESCRIPTION>This value sets the AFC loop gain after gear switching.</DESCRIPTION>
        </FIELD>
        <FIELD name="afc_fast" lsb="3" size="3">
          <DESCRIPTION>AFC High Gear gain setting.</DESCRIPTION>
          <DESCRIPTION>This value sets the AFC loop gain prior to gear switching.</DESCRIPTION>
        </FIELD>
        <FIELD name="gear_sw" lsb="6" size="2">
          <DESCRIPTION>AFC gear switch control source.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Preamble detection - switch gears after detection of Preamble.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Sync word detection - switch gears after detection of Sync Word.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>
              Mid-Point frequency error detection - switch gears when the estimated frequency error of the Mid-Point detector in the Asynchronous Demodulator is less than the half eye-threshold for a consecutive number of search periods.  NOTE: The consecutive number of search periods is defined <REFERENCE>MODEM_RAW_SEARCH</REFERENCE>:sch_frzth, while the length of each search period (in bits) is defined by <REFERENCE>MODEM_RAW_SEARCH</REFERENCE>:schprd_hi.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Preamble detection - switch gears after detection of Preamble (same as gear_sw = 0)</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_WAIT" value="8237" default="0x23" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>RX AFC loop wait time control.</SUMMARY>
      <DESCRIPTION>Short and long wait periods after AFC correction.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="lgwait" lsb="0" size="4">
          <DESCRIPTION>This specifies the long wait period per AFC correction cycle after preamble is detected.  When set to '0' then AFC is disabled.</DESCRIPTION>
        </FIELD>
        <FIELD name="shwait" lsb="4" size="4">
          <DESCRIPTION>This specifies the short wait period per AFC correction cycle before preamble is detected. Effective wait time is (shwait+1)*2 Tb.  When set to '0' then AFC is disabled.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GAIN_1" value="8238" default="0x83" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>High byte of AFC loop gain.</SUMMARY>
      <DESCRIPTION>High byte of 13-bit AFC loop gain value.</DESCRIPTION>
      <DESCRIPTION>Enabling of AFC frequency error estimation.</DESCRIPTION>
      <DESCRIPTION>Enabling of dynamic IF bandwidth switching during the packet.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <BYTE>
        <FIELD name="afcgain_12_8" lsb="0" size="5">
          <DESCRIPTION>High byte of 13-bit AFC loop gain value.</DESCRIPTION>
        </FIELD>
        <FIELD name="afcbd" lsb="6" size="1">
          <SUMMARY>Select CH filter coefficients.</SUMMARY>
          <DESCRIPTION>If set, the RX channel filter coefficients will be switched to the second RX channel filter coefficients (rx2coe0~13) from the first RX channel filter coefficients (rx1coe0~13) after gear switching occurs.  If cleared, the first set of RX channel filter coefficients are used for the entire packet.</DESCRIPTION>
        </FIELD>
        <FIELD name="enafc" lsb="7" size="1">
          <DESCRIPTION>When set, enables estimation of the frequency error.</DESCRIPTION>
          <DESCRIPTION>
            Estimated frequency error is made available to feedback to the Frac-N PLL, BCR and Slicer.  NOTE:  enabling of each individual AFC function is performed in the <REFERENCE>MODEM_BCR_MISC1</REFERENCE> and <REFERENCE>MODEM_AFC_MISC</REFERENCE> properties.
          </DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_GAIN_0" value="8239" default="0x69" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Low byte of AFC loop gain.</SUMMARY>
      <DESCRIPTION>Low byte of 13-bit AFC loop gain value</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="afcgain_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of 13-bit AFC loop gain value.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_LIMITER_1" value="8240" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Set high byte of AFC limiter value.</SUMMARY>
      <DESCRIPTION>High byte of 15-bit AFC limiter value.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="afclim_14_8" lsb="0" size="7">
          <DESCRIPTION>High byte of 15-bit AFC limiter value.  If the frequency error measured by the AFC correction algorithm exceeds this value, the AFC algorithm is reset to begin reacquisition from channel center frequency.</DESCRIPTION>
          <DESCRIPTION>The AFC limiter value should be viewed as a 14-bit value plus an additional bit that enables an 8x scale factor.  If afclim[14] = '0', then the AFC limiter value is afclim[13:0].  If afclim[14] = '1', then the AFC limiter value is afclim[13:0]*8.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_LIMITER_0" value="8241" default="0x40" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Low byte of AFC limiter.</SUMMARY>
      <DESCRIPTION>Low byte of 15-bit AFC limiter value.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="afclim_7_0" lsb="0" size="8">
          <DESCRIPTION>Low byte of 15-bit AFC limiter value.  If the frequency error measured by the AFC correction algorithm exceeds this value, the AFC algorithm is reset to begin reacquisition from channel center frequency.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_MISC" value="8242" default="0xA0" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Specifies misc AFC control bits.</SUMMARY>
      <DESCRIPTION>Specifies misc AFC control bits.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <BYTE>
        <FIELD name="enafcfrz" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>AFC will operate over the entire packet.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will be frozen after the gear switching.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enfbpll" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Enable AFC correction value to feedback to PLL.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="en2Tb_est" lsb="5" size="1">
          <DESCRIPTION>This bit must be set for standard packet mode.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>AFC will use MA or Mean detector frequency estimator's output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will use 2 Tb frequency estimator's output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enfzpmend" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC will be frozen at end of '10101' pattern preamble.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enafc_clksw" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>2Tb frequency estimator's clock will be  switched from free-running bit clock to BCR's bit clock  after the preamble is detected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ook_zerog" lsb="2" size="1" internal="1">
          <ENUMERATION value="0">
            <DESCRIPTION>FSK LO modulation will be enabled in OOK zero-IF mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>GFSK LO modulation will be enabled in OOK zero-IF mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="non_frzen" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>AFC frozen will be disabled while Mean detector found longer consecutive ones or zeros than search period.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AFC frozen will be enabled while Mean detector found longer consecutive ones or zeros than search period .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AFC_ZIFOFF" value="8243" default="0x00" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>AFC fixed frequency offset in zero IF mode.</SUMMARY>
      <DESCRIPTION>AFC fixed frequency offset in zero IF mode.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="zeroff" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ADC_CTRL" value="8244" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sigma Delta ADC controls.</SUMMARY>
      <DESCRIPTION>This property configures various options in the sigma delta ADC.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="realadc" lsb="1" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>ADC complex mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC real mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="en_drst" lsb="3" size="1">
          <ENUMERATION value="1">
            <DESCRIPTION>Enable direct reset by modem.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="hgain" lsb="4" size="1">
          <ENUMERATION value="1">
            <DESCRIPTION>Adds 12 dB gain to ADC input for IR calibration.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_CONTROL" value="8245" default="0xE0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>AGC control.</SUMMARY>
      <DESCRIPTION>AGC control.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rst_pkdt_period" lsb="0" size="1">
          <DESCRIPTION>Reset peak detector periodically.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Reset only when the digital received a '1' from  the synchronized peak detector output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC will reset the peak detector periodically.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="adc_gain_cor_en" lsb="1" size="1">
          <DESCRIPTION>Sets ADC input gain when minimal AGC gain is detected.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>ADC input gain correction is disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>ADC input gain is lowered by 6 dB.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="agc_slow" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC speed will is reduced by 8.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sgi_n" lsb="4" size="1">
          <DESCRIPTION>AGC stop increasing gain override bit.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>AGC gain increases during signal reductions are prevented.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC gain increases during signal reductions are allowed.  Only effective during preamble, prior to detection of PREAMBLE_VALID  signal in ANT-DIV mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rfpdslow" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>RFPG loop will slow down the gain decrease in -6 dB step.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RFPG loop will slow down the gain decrease in -3 dB step.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ifpdslow" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>IFPG loop will slow down the gain decrease in -6 dB step.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>IFPG loop will slow down the gain decrease in -3 dB step.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="agcovpkt" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The full AGC operates only during Preamble,  gain increases over remainder of packet are not allowed.  Gain reductions in the event of signal level increases are always allowed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC function operates over the entire packet.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_36" value="8246" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_37" value="8247" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_WINDOW_SIZE" value="8248" default="0x11" feature="pro2" dev="1" wip="0">
      <SUMMARY>Specifies the AGC measurement and settling window size.</SUMMARY>
      <DESCRIPTION>Sets PGA and LNA settling time window and measurement time window.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="settlewin" lsb="0" size="4">
          <DESCRIPTION>Settling window size, effective settling time is settlewin/Fs_rx period)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
        <FIELD name="measwin" lsb="4" size="4">
          <DESCRIPTION>Measurement window size, effective measurement time  is measwin/Fs_rx period)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_RFPD_DECAY" value="8249" default="0x10" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sets RF detector decay time.</SUMMARY>
      <DESCRIPTION>Sets RF detector decay time.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rfpd_decay" lsb="0" size="8">
          <DESCRIPTION>Effective decay time is rfpdcay/Fs_rx)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="AGC_IFPD_DECAY" value="8250" default="0x10" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sets IF detector decay time.</SUMMARY>
      <DESCRIPTION>Sets IF detector decay time.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ifpd_decay" lsb="0" size="8">
          <DESCRIPTION>Effective decay time is ifpdcay/Fs_rx)/2^(3*agc_slow).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_GAIN1" value="8251" default="0x0B" feature="4fsk" dev="1" wip="0">
      <SUMMARY>Specifies the gain factor of the secondary branch in 4(G)FSK ISI-suppression.</SUMMARY>
      <DESCRIPTION>Controls 4(G)FSK suppression gain.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fsk_isis_disable" lsb="7" size="1">
          <DESCRIPTION>Second phase compensation factor for 4(G)FSK.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Disable 4(G)FSK ISI-suppression.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4fsk_gain1" lsb="0" size="7">
          <DESCRIPTION>Gain factor of the secondary branch in 4(G)FSK ISI-suppression.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_GAIN0" value="8252" default="0x1C" feature="4fsk" dev="1" wip="0">
      <SUMMARY>Specifies the gain factor of the primary branch in 4(G)FSK ISI-suppression.</SUMMARY>
      <DESCRIPTION>Controls 4(G)FSK suppression gain.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fsk_gain0" lsb="0" size="7">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_TH1" value="8253" default="0x40" feature="4fsk" dev="1" wip="0">
      <SUMMARY>High byte of 4(G)FSK slicer threshold.</SUMMARY>
      <DESCRIPTION>High byte of 4(G)FSK slicer threshold.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskth_15_8" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_TH0" value="8254" default="0x00" feature="4fsk" dev="1" wip="0">
      <SUMMARY>Low byte of 4(G)FSK slicer threshold.</SUMMARY>
      <DESCRIPTION>Low byte of 4(G)FSK slicer threshold.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="4fskth_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="FSK4_MAP" value="8255" default="0x00" feature="4fsk" dev="1" wip="0">
      <SUMMARY>4(G)FSK symbol mapping code.</SUMMARY>
      <DESCRIPTION>4(G)FSK symbol mapping code.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <BYTE>
        <FIELD name="4fskmap" lsb="0" size="8">
          <ENUMERATION value="0">
            <DESCRIPTION>`00 `01 `11 `10</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>`00 `01 `10 `11</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>`00 `11 `01 `10</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>`00 `11 `10 `01</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>`00 `10 `01 `11</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>`00 `10 `11 `01</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>`01 `00 `11 `10</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>`01 `00 `10 `11</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8">
            <DESCRIPTION>`01 `11 `00 `10</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9">
            <DESCRIPTION>`01 `11 `10 `00</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10">
            <DESCRIPTION>`01 `10 `00 `11</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11">
            <DESCRIPTION>`01 `10 `11 `00</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12">
            <DESCRIPTION>`11 `00 `01 `10</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13">
            <DESCRIPTION>`11 `00 `10 `01</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14">
            <DESCRIPTION>`11 `01 `00 `10</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>`11 `01 `10 `00</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16">
            <DESCRIPTION>`11 `10 `00 `01</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17">
            <DESCRIPTION>`11 `10 `01 `00</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="18">
            <DESCRIPTION>`10 `00 `01 `11</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="19">
            <DESCRIPTION>`10 `00 `11 `01</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="20">
            <DESCRIPTION>`10 `01 `00 `11</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="21">
            <DESCRIPTION>`10 `01 `11 `00</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="22">
            <DESCRIPTION>`10 `11 `00 `01</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="23">
            <DESCRIPTION>`10 `11 `01 `00</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_PDTC" value="8256" default="0x2B" feature="pro2" dev="1" wip="0">
      <SUMMARY>OOK Peak Detector Time Control.</SUMMARY>
      <DESCRIPTION>OOK peak detector decay and attack time.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="decay" lsb="0" size="4">
          <DESCRIPTION>OOK peak detector decay time.</DESCRIPTION>
          <DESCRIPTION>Peak detector value discharges at rate  proportional to 2^(-decay).</DESCRIPTION>
        </FIELD>
        <FIELD name="attack" lsb="4" size="3">
          <DESCRIPTION>OOK peak detector attack time.</DESCRIPTION>
          <DESCRIPTION>Peak detector value charges up at rate  proportional to 2^(-attack).</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_BLOPK" value="8257" default="0x0C" feature="pro2" dev="1" wip="0">
      <SUMMARY>OOK control.</SUMMARY>
      <DESCRIPTION>Defined how many dB below PK.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="bw_pk" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_CNT1" value="8258" default="0xA4" feature="pro2" dev="1" wip="0">
      <SUMMARY>OOK control.</SUMMARY>
      <DESCRIPTION>OOK control.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="squelch" lsb="0" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>Squelch function is off.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>When no signal is received, there is  no toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>When PM is not detected, there is no  toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>When no signal or PM is not detected,  there is no toggling of RX data output.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="slicer_fast" lsb="2" size="1">
          <DESCRIPTION>This bit effects 2(G)FSK/OOK mode only.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Discriminator's slicer output is  de-glitched by bit clock.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Discriminator's slicer output is  de-glitched by sample clock to reduce  turn-around time.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="raw_syn" lsb="3" size="1">
          <DESCRIPTION>If set, raw data output is synchronized to bit clock.</DESCRIPTION>
        </FIELD>
        <FIELD name="ma_freqdwn" lsb="4" size="1">
          <DESCRIPTION>If set, estimated frequency from MA detector  will be trunked 4 bits to avoid overflow.</DESCRIPTION>
          <DESCRIPTION>AFC gain should be increased 16 times if this  bit is set.</DESCRIPTION>
          <DESCRIPTION>It is recommended to set this bit for  Rb smaller than 1kbps and/or hModInd greater than 50  if MA detector's frequency error estimator is  selected.</DESCRIPTION>
        </FIELD>
        <FIELD name="ookfrzen" lsb="5" size="1">
          <DESCRIPTION>This bit only has an effect after preamble is detected.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>AGC and OOK moving average detector's  threshold output will be frozen after the preamble is detected.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="s2p_map" lsb="6" size="2">
          <ENUMERATION value="0">
            <DESCRIPTION>S2p_mapping 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>S2p_mapping 1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>S2p_mapping 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>S2p_mapping 3.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="OOK_MISC" value="8259" default="0x03" feature="pro2" dev="1" wip="0">
      <SUMMARY>Control OOK Peak Detector.</SUMMARY>
      <DESCRIPTION>Control OOK Peak Detector.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ookfastma" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Deploy longer MA filter window.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="detector" lsb="0" size="2">
          <DESCRIPTION>Controls the data detector.</DESCRIPTION>
          <ENUMERATION value="0" name="ma_pk">
            <DESCRIPTION>In OOK modem only, both MA detector  and peak detector will be selected and two  detector's outputs were AND'd together for the final result.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="pk">
            <DESCRIPTION>Peak detector will be selected for OOK  modem or Raw data mode. When OOK peak detector is enabled,  then the attack and decay rates of how the  peak level is charged up or discharged down  is programmable. The larger the value in these  fields, the slower the attack and decay  times.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="ma">
            <DESCRIPTION>MA detector will be selected for OOK  modem or Raw data mode.</DESCRIPTION>
            <DESCRIPTION>When the Moving Average Detector is  enabled, then the slicing threshold is  developed from the average of the previous  data bits.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="mean">
            <DESCRIPTION>Max-Min detector will be selected for  Raw data mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_SEARCH" value="8260" default="0x56" feature="pro2" dev="1" wip="0">
      <SUMMARY>Defines search period control for raw / nonstandard mode.</SUMMARY>
      <DESCRIPTION>Searching period for high and low gear.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="schprd_low" lsb="0" size="2">
          <DESCRIPTION>Searching period of MA or Mean inside the  detector during low gear.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Tb * 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Tb * 4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Tb * 8.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Tb * 16.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="schprd_hi" lsb="2" size="2">
          <DESCRIPTION>Searching period of MA or Mean inside the  detector during high gear.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Tb * 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Tb * 4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Tb * 8.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Tb * 16.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sch_frzth" lsb="4" size="3">
          <DESCRIPTION>Mean search frozen threshold.</DESCRIPTION>
        </FIELD>
        <FIELD name="sch_frzen" lsb="7" size="1">
          <DESCRIPTION>Freeze MA or Mean searching engine once switch to low gear.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_CONTROL" value="8261" default="0x02" feature="pro2" dev="1" wip="0">
      <SUMMARY>Defines gain and enable controls for raw / nonstandard mode.</SUMMARY>
      <DESCRIPTION>Defines gain and enable controls for raw / nonstandard mode.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="unstdpk" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>MA or mean frequency error estimator.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="conschk_byp" lsb="6" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>If unstdpk is '1', and conschk_byp= '0', the  consecutive '1' or '0' of payload data during 'Sch_Period' will stop the mean  value being updated.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Normal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="pm_pattern" lsb="2" size="2">
          <DESCRIPTION>PM pattern configuration.  The preamble detection is done inside modem.</DESCRIPTION>
          <ENUMERATION value="0" name="1010">
            <DESCRIPTION>If preamble has '1010' pattern, modem  is recommended to work on standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="consecutive_one">
            <DESCRIPTION>If preamble has more than 32-bit  consecutive '1' pattern, modem is recommended  to work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="consecutive_zero">
            <DESCRIPTION>If preamble has more than 32-bit  consecutive '0' pattern, modem is recommended  work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="random">
            <DESCRIPTION>If preamble is random data, modem is  recommended to work on un-standard packet mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="rawgain" lsb="0" size="2">
          <DESCRIPTION>Raw data MA filter gain.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Gain = 8.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Gain = 4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Gain = 2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Gain = 1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_EYE_1" value="8262" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Eye-open detector threshold.</SUMMARY>
      <DESCRIPTION>Eye-open detector threshold.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="raweye_10_8" lsb="0" size="3">
          <DESCRIPTION>The three most significant bits of the eye-open detector threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RAW_EYE_0" value="8263" default="0xA3" feature="pro2" dev="1" wip="0">
      <SUMMARY>Low byte of eye-open detector threshold.</SUMMARY>
      <DESCRIPTION>Eye-open detector threshold.  The reset of bits are set by property RAW_EYE_1.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="raweye_7_0" lsb="0" size="8">
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ANT_DIV_MODE" value="8264" default="0x02" feature="rx" dev="1" wip="0">
      <SUMMARY>Antenna diversity mode settings.</SUMMARY>
      <DESCRIPTION>Antenna diversity mode settings.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="anwait" lsb="0" size="3">
          <DESCRIPTION>The period between toggling selection of antennas. During the initial search for a  valid packet (i.e., the search for the first PREAMBLE_VALID signal), a timer is  maintained to determine when to periodically toggle between antennas.  This default  value of this timeout period is 16 bit periods, but is configurable by anwait. The periods between toggling of antennas = ( anwait + 2 ) * 4 bit.</DESCRIPTION>
        </FIELD>
        <FIELD name="skip2phth" lsb="3" size="1">
          <DESCRIPTION>The threshold of skipping second phase PM detection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>16 dB threshold is set for skipping second phase PM detection.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>11 dB threshold is set for skipping second phase PM detection.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="skip2ph" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>The antenna diversity algorithm always measures  the RSSI value on the alternate antenna, regardless of signal strength on the  initial antenna.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>the current RSSI value on the first antenna which observes  a PREAMBLE_VALID signal is greater than the value (determined by  bit 'skip2phth')  above the previous RSSI value from the alternate  antenna, the signal is deemed sufficiently strong; there is no need  to switch to and evaluate the second antenna.  If the difference in  RSSI value is less than the value (determined by bit 'skip2phth'), the  algorithm proceeds with evaluation of the signal strength on the alternate  antenna, as normal.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="byp1p5" lsb="5" size="1">
          <DESCRIPTION>Bias of the second phase antenna selection.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>0 dB.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>1.5 dB.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="swant_timer" lsb="6" size="2">
          <DESCRIPTION>Additional number of bit periods to wait for RSSI value to  stabilize during Antenna Diversity 2nd phase antenna evaluation. Effective only during Antenna Diversity.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Swant_time_0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Swant_time_1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Swant_time_2.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Swant_time_3.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="ANT_DIV_CONTROL" value="8265" default="0x80" feature="rx" dev="1" wip="0">
      <SUMMARY>Specifies antenna diversity controls.  Antenna diversity mode is valid for standard packet only.</SUMMARY>
      <DESCRIPTION>Specifies pm detection threshold and GPIO configuration in antenna diversity mode.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="reserved" lsb="0" size="2">
          <DESCRIPTION>Reserved.  Always write 0.</DESCRIPTION>
        </FIELD>
        <FIELD name="antdiv" lsb="2" size="1">
          <DESCRIPTION>The GPIO must be configured for antenna diversity  for the algorithm to work properly.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>RX/TX state: GPIO-Ant1=1, GPIO Ant2=0: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RX/TX state: GPIO=Antenna diversity algorithm: Non-RX/TX State GPIO Ant1=1, GPIO Ant2 = 0.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="matap" lsb="3" size="1">
          <DESCRIPTION>Number of taps for moving average filter during Antenna Diversity RSSI evaluation. Allows for reduced noise variation on measured RSSI value but with slower update rate.</DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Filter tap length is 8*Tb prior to first PREAMBLE_VALID, and 4*Tb thereafter.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Filter tap length is 8*Tb.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ant2pm_thd" lsb="4" size="4">
          <DESCRIPTION>The second phase preamble detection threshold in ANT-DIV mode. Default is set to 8 bits threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_THRESH" value="8266" default="0xFF" feature="rx" dev="1" wip="0">
      <SUMMARY>RSSI threshold control.</SUMMARY>
      <DESCRIPTION>Selects the threshold for Clear Channel Assessment (CCA) and generation of the RSSI interrupt.</DESCRIPTION>
      <DESCRIPTION>If the Current RSSI value is above this threshold, a GPIO pin configured to output the CCA signal will be high.</DESCRIPTION>
      <DESCRIPTION>If the Current RSSI value crosses above this threshold, the RSSI interrupt will be generated. NOTE:  the Latched RSSI value exceeding this threshold will not generate an RSSI interrupt.</DESCRIPTION>
      <DESCRIPTION>
        If enabled in the MODEM_RSSI_CONTROL property, the Latched RSSI value may also be compared against this threshold.  The purpose of the comparison is to determine if the Latched RSSI value is below (not above) the threshold; if so, the chip proceeds to the specified <REFERENCE>START_RX</REFERENCE>:RXTIMEOUT_STATE and generates a PREAMBLE_INVALID interrupt.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_JUMP_THRESH" value="8267" default="0x0C" feature="rx" dev="1" wip="0">
      <SUMMARY>RSSI jumping detection threshold.</SUMMARY>
      <DESCRIPTION>RSSI jumping detection threshold, step in 1 dB.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rssijmpthd" lsb="0" size="7">
          <DESCRIPTION>RSSI jumping detection threshold.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_CONTROL" value="8268" default="0x01" feature="rx" dev="1" wip="0">
      <SUMMARY>Control of the averaging modes and latching time for reporting RSSI value(s).</SUMMARY>
      <DESCRIPTION>
        Selects if the RSSI value is latched, and at what point in the packet it is latched.  The Latched RSSI value may be read by a Fast Response Register, or returned by the <REFERENCE>GET_MODEM_STATUS</REFERENCE> command.
      </DESCRIPTION>
      <DESCRIPTION>Selects whether the RSSI value is updated every 1*Tb bit period, or whether the RSSI value is averaged over the previous 4*Tb bit periods.</DESCRIPTION>
      <DESCRIPTION>
        Selects if the Latched RSSI value is compared against the <REFERENCE>MODEM_RSSI_THRESH</REFERENCE> value, for the purpose of exiting to the RXTIMEOUT_STATE if below threshold.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="LATCH" lsb="0" size="3">
          <DESCRIPTION>Selects the time in the packet at which the Latched RSSI value is latched.</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLED">
            <DESCRIPTION>Latch is disabled.  The returned value of the Latched RSSI will always read 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="PREAMBLE">
            <DESCRIPTION>Latches RSSI at Preamble detect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="SYNC">
            <DESCRIPTION>Latches RSSI at Sync Word detect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="RX_STATE1">
            <DESCRIPTION>Latches RSSI at 4*Tb after RX is enabled (7*Tb if AVERAGE = 0).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="RX_STATE2">
            <DESCRIPTION>Latches RSSI at 8*Tb after RX is enabled.  This latching point is only available if 4*Tb averaging is enabled (AVERAGE = 0).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="RX_STATE3">
            <DESCRIPTION>Latches RSSI at 12*Tb after RX is enabled.  This latching point is only available if 4*Tb averaging is enabled (AVERAGE = 0).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="RX_STATE4">
            <DESCRIPTION>Latches RSSI at 16*Tb after RX is enabled.  This latching point is only available if 4*Tb averaging is enabled (AVERAGE = 0).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="RX_STATE5">
            <DESCRIPTION>Latches RSSI at 20*Tb after RX is enabled.  This latching point is only available if 4*Tb averaging is enabled (AVERAGE = 0).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="AVERAGE" lsb="4" size="1">
          <DESCRIPTION>The setting of this bit affects both Current RSSI and Latched RSSI values.</DESCRIPTION>
          <ENUMERATION value="0" name="AVERAGE4">
            <DESCRIPTION>The RSSI value is averaged over the previous 4*Tb bit periods.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="AVERAGE1">
            <DESCRIPTION>The RSSI value is updated every 1*Tb bit period.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_THRESH_AT_LATCH" lsb="5" size="1">
          <DESCRIPTION>
            If this bit is enabled, the Latched RSSI value is compared against the <REFERENCE>MODEM_RSSI_THRESH</REFERENCE> value.  If the Latched RSSI is below threshold, the chip will transition to the specified <REFERENCE>START_RX</REFERENCE>:RXTIMEOUT_STATE and the INVALID_PREAMBLE interrupt will be asserted.  If the Latched RSSI is above threshold, the chip will continue reception.  NOTE:  assertion of the RSSI Interrupt is generated by the Current RSSI value exceeding the threshold; the Latched RSSI exceeding the threshold will not result in an RSSI Interrupt.
          </DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Disable RSSI threshold check after latch.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Enable RSSI threshold check after latch.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_CONTROL2" value="8269" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>RSSI control.</SUMMARY>
      <DESCRIPTION>
        Enable RSSI jumping detection.  Used to detect an RSSI jump as configured by <REFERENCE>MODEM_RSSI_JUMP_THRESHOLD</REFERENCE>  while receiving a packet.  Can be useful to detect interfering or secondary incoming packet.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="enjmprx" lsb="1" size="1">
          <DESCRIPTION>If set, RSSI jumping detection will force  RX machine to reset.</DESCRIPTION>
        </FIELD>
        <FIELD name="jmpdlylen" lsb="2" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>RSSI jumping detection is running  with 2 Tb.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>RSSI jumping detection is running  with 4 Tb.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="enrssijmp" lsb="3" size="1">
          <DESCRIPTION>Enable RSSI jumping detection.</DESCRIPTION>
          <DESCRIPTION>Once RSSI difference between 2 Tb or 4 Tb  is above the RSSI jumping threshold, and interrupt  will be generated.</DESCRIPTION>
        </FIELD>
        <FIELD name="rssijmp_up" lsb="4" size="1">
          <DESCRIPTION>If set, enable RSSI jumping-up detection.</DESCRIPTION>
        </FIELD>
        <FIELD name="rssijmp_dwn" lsb="5" size="1">
          <DESCRIPTION>If set, enable RSSI jumping-down detection.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RSSI_COMP" value="8270" default="0x32" feature="rx" dev="1" wip="0">
      <SUMMARY>RSSI reading offset.</SUMMARY>
      <DESCRIPTION>Offsets RSSI curve in 1 dB steps.  32 is no offset, lower will adjust RSSI down, and higher will adjust RSSI up.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rssi_comp" lsb="0" size="7">
          <DESCRIPTION>RSSI reading offset.</DESCRIPTION>
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="DC_CONTROL" value="8271" default="0x03" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Modem DC cancellation controls.</SUMMARY>
      <DESCRIPTION>Modem DC cancellation controls.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="dc_gear" lsb="0" size="3">
          <DESCRIPTION>the forgetting factor in the integrator inside DC cancellation. Decimating rate is 2^ndec0. ndec0 should be set to 0 for non-OOK modem. Effective forgetting factor is 2^(-9+dc_gear)</DESCRIPTION>
        </FIELD>
        <FIELD name="dc_freez" lsb="3" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>freeze estimated DC value to the current filter output.   If both dc-rst and dc-frz are set, the digital DC cancellation filter is skipped.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dc_rst" lsb="4" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Reset DC value.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="dc_follow" lsb="5" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>No effect.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>DC Following is turned on. In this mode,  when a valid sync word is detected, the current DC offset is saved,  this value is then used as the initial DC offset for next RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_50" value="8272" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="CLKGEN_BAND" value="8273" default="0x08" feature="pro2" dev="1" wip="0" internal="0">
      <SUMMARY>Select PLL Synthesizer output divider ratio as a function of frequency band.</SUMMARY>
      <DESCRIPTION>Selects the divide ratio of the configurable divider at the output of the PLL Synthesizer as a function of the desired operating frequency band.</DESCRIPTION>
      <DESCRIPTION>Configures the PLL Synthesizer for High Performance or Low Power operating mode, allowing a tradeoff between tuning resolution and current consumption.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="BAND" lsb="0" size="3" feature="band_select">
          <DESCRIPTION>Selects the PLL Synthesizer output divider ratio appropriate for the desired frequency band.  The VCO in the PLL Synthesizer operates at approximately 3.6 GHz; operation across a wide range of frequency bands is obtained by switching in a configurable divider (OUTDIV) at the output of the PLL Synthesizer, e.g., OUTDIV = Div-by-4 for 900 MHz band.</DESCRIPTION>
          <ENUMERATION value="0" name="FVCO_DIV_4">
            <DESCRIPTION>Output is FVCO/4.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="FVCO_DIV_6">
            <DESCRIPTION>Output is FVCO/6.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="FVCO_DIV_8">
            <DESCRIPTION>Output is FVCO/8.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="FVCO_DIV_12">
            <DESCRIPTION>Output is FVCO/12.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="FVCO_DIV_16">
            <DESCRIPTION>Output is FVCO/16.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="FVCO_DIV_24">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="FVCO_DIV_24_2">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="FVCO_DIV_24_3">
            <DESCRIPTION>Output is FVCO/24.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="sy_sel" lsb="3" size="1">
          <DESCRIPTION>
            Selects the value of the fixed prescaler modulus in the PLL divider feedback path, allowing a tradeoff between improved tuning resolution and synthesizer quantization noise at the expense of slightly increased current consumption. The published formula for calculating <REFERENCE>FREQ_CONTROL_INTE</REFERENCE> and <REFERENCE>FREQ_CONTROL_FRAC_2</REFERENCE>/1/0 assumes this bit is set to '1'; contact Silicon Labs for assistance with frequency calculations when clearing this bit.
          </DESCRIPTION>
          <ENUMERATION value="0">
            <DESCRIPTION>Low-power mode (fixed prescaler = Div-by-4).  Approximately 200 uA less current than High Performance mode, but with coarser tuning resolution of the PLL Synthesizer.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>High Performance mode (fixed prescaler = Div-by-2).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="RESERVED_20_52" value="8274" default="0x00" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY></SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM" name="PLL_SETTLE_TIME" value="8275" default="40" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>PLL settle time.</SUMMARY>
      <DESCRIPTION>After a frequency change or VCO calibration, the PLL Synthesizer requires a certain amount of time to achieve lock (typically about 40 usec).</DESCRIPTION>
      <DESCRIPTION>The chip does not provide for lock detect circuitry to indicate when the PLL Synthesizer has achieved lock.  Instead, an internal timer is configured with a time period value and the chip is assumed to have achieved lock after expiration of this timer.</DESCRIPTION>
      <DESCRIPTION>This property determines the length of time allowed for the PLL Synthesizer to obtain lock. This property does not affect the settling time of the PLL Synthesizer; it simply determines the time delay allowed for PLL settling before sequencing to the next state or operating mode.</DESCRIPTION>
      <DESCRIPTION>The units of this field are in usec.  Due to some overhead processes in internal firmware, setting a value less than 40 usec (PLL_SETTLE = 0x28) will not result in delay times less than 40 usec.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="pll_settle" lsb="0" size="8">
          <RANGE min="40" max="130" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE13_7_0" value="8448" default="0xFF" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 13th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>The chip implements the RX channel selection bandpass filtering in the digital domain as an FIR filter.  The MODEM_CHFLT_RX_CHFLT_COEXX properties define the values for the filter tap coefficients.</DESCRIPTION>
      <DESCRIPTION>The chip provides for two different sets of RX filter coefficients (MODEM_CHFLT_RX1 and MODEM_CHFLT_RX2). These properties define the values for the first set of filter coefficients; see also the text description for the MODEM_CHFLT_RX2_CHFLT_COEXX properties for a discussion of the second set of filter coefficients and use of adaptive RX filter bandwidth across the packet.</DESCRIPTION>
      <DESCRIPTION>By default, the digital filter is 27 taps in length.  However, it is possible to configure the RX Modem for a channel selection filter with only 15 taps; the advantage of the 15-tap filter is a reduction in filter processing delay at the expense of reduced filtering performance (e.g., adjacent channel selectivity). Please contact Silicon Labs for assistance with configuring the reduced performance filter.</DESCRIPTION>
      <DESCRIPTION>The values of the tap coefficients are symmetrical; that is, the value of COEFF26=COEFF0, COEFF25=COEFF1, and so on.  Thus it is only necessary to store 14 filter coefficients; the internal circuitry obtains the remaining coefficients through symmetry.</DESCRIPTION>
      <DESCRIPTION>Each filter tap coefficient is a 10-bit signed value.  The lower 8-bits of each coefficient are held in the MODEM_CHFLT_RX1_CHFLT_COEXX properties; the top two bits are packed into the MODEM_CHFLT_RX1_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>
        Silicon Labs has pre-calculated 15 different sets of filter tap coefficients.  The WDS Calculator will recommend one of these filter sets, based upon the RX filter bandwidth required to receive the desired signal.  The filter bandwidth is a function of both the selected filter set, as well as the filter clock decimation ratio (see the <REFERENCE>MODEM_DECIMATION_CFG1</REFERENCE>/0 properties).
      </DESCRIPTION>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 13th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM0</REFERENCE> property.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE12_7_0" value="8449" default="0xBA" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 12th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 12th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM0</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE11_7_0" value="8450" default="0x0F" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 10th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 11th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM0</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE10_7_0" value="8451" default="0x51" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 10th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 10th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM0</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE9_7_0" value="8452" default="0xCF" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 9th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 9th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM1</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE8_7_0" value="8453" default="0xA9" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 8th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 8th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM1</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE7_7_0" value="8454" default="0xC9" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 7th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 7th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM1</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE6_7_0" value="8455" default="0xFC" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 6th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 6th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM1</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE5_7_0" value="8456" default="0x1B" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 5th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 5th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM2</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE4_7_0" value="8457" default="0x1E" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 4th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 4th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM2</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE3_7_0" value="8458" default="0x0F" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 3rd filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 3rd filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM2</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE2_7_0" value="8459" default="0x01" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 2nd filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 2nd filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM2</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE1_7_0" value="8460" default="0xFC" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 1st filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 1st filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM3</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COE0_7_0" value="8461" default="0xFD" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 0th filter coefficient for the first set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 0th filter coefficient for the first set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COEM3</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM0" value="8462" default="0x15" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>The two MSB of 13th ~ 10th filter coefficient for the first set of CH filter coefficient.</SUMMARY>
      <DESCRIPTION>There are 14 filter tap coefficient values; each value is a signed 10-bit value.  The lower 8-bits of each coefficient are set in the MODEM_CHFLT_RX_CHFLT_COEXX properties, while the top two bits are packed into the MODEM_CHFLT_RX_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>This property contains the top two bits of the 13th through 10th filter coefficients for the first set of filter coefficients.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe13_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 13th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe12_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 12th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe11_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 11th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe10_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 10th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM1" value="8463" default="0xFF" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>The two MSB of 9th ~ 6th filter coefficient for the first set of CH filter coefficient.</SUMMARY>
      <DESCRIPTION>There are 14 filter tap coefficient values; each value is a signed 10-bit value.  The lower 8-bits of each coefficient are set in the MODEM_CHFLT_RX_CHFLT_COEXX properties, while the top two bits are packed into the MODEM_CHFLT_RX_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>This property contains the top two bits of the 9th through 6th filter coefficients for the first set of filter coefficients.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe9_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 9th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe8_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 8th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe7_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 7th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe6_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 6th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM2" value="8464" default="0x00" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>The two MSB of 5th ~ 2nd filter coefficient for the first set of CH filter coefficient.</SUMMARY>
      <DESCRIPTION>There are 14 filter tap coefficient values; each value is a signed 10-bit value.  The lower 8-bits of each coefficient are set in the MODEM_CHFLT_RX_CHFLT_COEXX properties, while the top two bits are packed into the MODEM_CHFLT_RX_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>This property contains the top two bits of the 5th through 2nd filter coefficients for the first set of filter coefficients.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe5_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 5th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe4_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 4th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe3_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 3rd CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe2_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 2nd CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX1_CHFLT_COEM3" value="8465" default="0x0F" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>The two MSBs of the 1st ~ 0th filter coefficients for the first set of channel filter coefficients.</SUMMARY>
      <DESCRIPTION>There are 14 filter tap coefficient values; each value is a signed 10-bit value.  The lower 8-bits of each coefficient are set in the MODEM_CHFLT_RX_CHFLT_COEXX properties, while the top two bits are packed into the MODEM_CHFLT_RX_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>This property contains the top two bits of the 1st through 0th filter coefficients for the first set of filter coefficients.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx1coe1_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 1st CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx1coe0_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 0th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE13_7_0" value="8466" default="0xFF" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 13th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>The chip provides for two different sets of RX filter coefficients (MODEM_CHFLT_RX1 and MODEM_CHFLT_RX2). These properties define the values for the second set of filter coefficients; see also the text description for the MODEM_CHFLT_RX1_CHFLT_COEXX properties for a general discussion of the configuration of filter tap coefficients.</DESCRIPTION>
      <DESCRIPTION>Two different sets of filter tap coefficients (i.e., filter bandwidths) are provided to allow narrowing the RX bandwidth after the PLL-based AFC algorithm has acquired the signal and centered it in the filter passband.  With no residual frequency error, the filter bandwidth may be reduced to pass only the modulation bandwidth of the signal, thus improving sensitivity over the remainder of the packet.</DESCRIPTION>
      <DESCRIPTION>
        This adaptive RX bandwidth feature is only applicable when PLL AFC is enabled (by setting <REFERENCE>MODEM_AFC_MISC</REFERENCE>:ENFBPLL), and the adaptive RX bandwidth function is enabled (by setting <REFERENCE>MODEM_AFC_GAIN_1</REFERENCE>:AFCBD).
      </DESCRIPTION>
      <DESCRIPTION>When the adaptive RX bandwidth feature is enabled, the first set of filter coefficients (defined in the MODEM_CHFLT_RX1 properties) is effective prior to gear-switching (e.g., detection of PREAMBLE_VALID)  while the second set of filter coefficients (defined in the MODEM_CHFLT_RX2 properties) is effective after  gear-switching.  When the adaptive RX bandwidth feature is disabled, the first set of filter coefficients is  used for the entire packet.</DESCRIPTION>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 13th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM0</REFERENCE> property.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE12_7_0" value="8467" default="0xC4" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 12th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 12th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM0</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE11_7_0" value="8468" default="0x30" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 11th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 11th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM0</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE10_7_0" value="8469" default="0x7F" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 10th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 10th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM0</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE9_7_0" value="8470" default="0xF5" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 9th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 9th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM1</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_1</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE8_7_0" value="8471" default="0xB5" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 8th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 8th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM1</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE7_7_0" value="8472" default="0xB8" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 7th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 7th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM1</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_1</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE6_7_0" value="8473" default="0xDE" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 6th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 6th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM1</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_1</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE5_7_0" value="8474" default="0x05" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 5th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 5th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM2</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE4_7_0" value="8475" default="0x17" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 4th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 4th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM2</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE3_7_0" value="8476" default="0x16" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 3rd filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 3rd filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM2</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE2_7_0" value="8477" default="0x0C" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 2nd filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 2nd filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM2</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE1_7_0" value="8478" default="0x03" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 1st filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 1st filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM3</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COE0_7_0" value="8479" default="0x00" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Lower 8-bits of the 0th filter coefficient for the second set of filter coefficients.</SUMMARY>
      <DESCRIPTION>
        This property sets the lower 8-bits of the 0th filter coefficient for the second set of filter coefficients; the top two bits are packed into the <REFERENCE>MODEM_CHFLT_RX2_CHFLT_COEM3</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>MODEM_CHFLT_RX1_CHFLT_COE13_7_0</REFERENCE> for more details regarding programming of the channel selection filter tap coefficients.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM0" value="8480" default="0x15" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>The two MSB of 13th ~ 10th filter coefficient for the second set of CH filter coefficient.</SUMMARY>
      <DESCRIPTION>There are 14 filter tap coefficient values; each value is a signed 10-bit value.  The lower 8-bits of each coefficient are set in the MODEM_CHFLT_RX_CHFLT_COEXX properties, while the top two bits are packed into the MODEM_CHFLT_RX_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>This property contains the top two bits of the 13th through 10th filter coefficients for the second set of filter coefficients.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe13_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 13th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe12_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 12th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe11_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 11th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe10_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 10th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM1" value="8481" default="0xFF" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>The two MSB of 9th ~ 6th filter coefficient for the second set of CH filter coefficient.</SUMMARY>
      <DESCRIPTION>There are 14 filter tap coefficient values; each value is a signed 10-bit value.  The lower 8-bits of each coefficient are set in the MODEM_CHFLT_RX_CHFLT_COEXX properties, while the top two bits are packed into the MODEM_CHFLT_RX_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>This property contains the top two bits of the 9th through 6th filter coefficients for the second set of filter coefficients.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe9_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 9th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe8_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 8th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe7_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 7th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe6_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 6th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM2" value="8482" default="0x00" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>The two MSB of 5th ~ 2th filter coefficient for the second set of CH filter coefficient.</SUMMARY>
      <DESCRIPTION>There are 14 filter tap coefficient values; each value is a signed 10-bit value.  The lower 8-bits of each coefficient are set in the MODEM_CHFLT_RX_CHFLT_COEXX properties, while the top two bits are packed into the MODEM_CHFLT_RX_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>This property contains the top two bits of the 5th through 2nd filter coefficients for the second set of filter coefficients.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe5_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 5th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe4_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 4th CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe3_9_8" lsb="4" size="2">
          <DESCRIPTION>The two MSB of the 3rd CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe2_9_8" lsb="6" size="2">
          <DESCRIPTION>The two MSB of the 2nd CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MODEM_CHFLT" name="RX2_CHFLT_COEM3" value="8483" default="0x00" feature="chflt_grp" dev="1" wip="0" internal="0">
      <SUMMARY>The two MSB of 1st ~ 0th filter coefficient for the second set of CH filter coefficient.</SUMMARY>
      <DESCRIPTION>There are 14 filter tap coefficient values; each value is a signed 10-bit value.  The lower 8-bits of each coefficient are set in the MODEM_CHFLT_RX_CHFLT_COEXX properties, while the top two bits are packed into the MODEM_CHFLT_RX_CHFLT_COEMXX properties.</DESCRIPTION>
      <DESCRIPTION>This property contains the top two bits of the 1st through 0th filter coefficients for the second set of filter coefficients.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="rx2coe1_9_8" lsb="0" size="2">
          <DESCRIPTION>The two MSB of the 1st CH filter coefficient.</DESCRIPTION>
        </FIELD>
        <FIELD name="rx2coe0_9_8" lsb="2" size="2">
          <DESCRIPTION>The two MSB of the 0th CH filter coefficient.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_1" value="12288" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 1 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_1" value="12289" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 1 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_1" value="12290" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Packet match enable and match 1 configuration.</SUMMARY>
      <DESCRIPTION>Enable packet match processing and pattern 1 matches or not.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MATCH_EN" lsb="6" size="1">
          <DESCRIPTION>Note: This bit is quite different from other pattern match controlling.</DESCRIPTION>
          <ENUMERATION value="1" name="MATCH_ENABLE">
            <DESCRIPTION>Enable packet match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 1 offset.</SUMMARY>
          <DESCRIPTION>Pattern match 1 offset in byte after sync word.</DESCRIPTION>
          <TARGETRELEASE>revB1B</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_2" value="12291" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_2" value="12292" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_2" value="12293" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 2 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 2 matches or not.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 2 offset.</SUMMARY>
          <DESCRIPTION>Match 2 offset in byte after sync word.</DESCRIPTION>
          <TARGETRELEASE>revB1B</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_3" value="12294" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_3" value="12295" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_3" value="12296" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 3 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 3 matches or not.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 3 offset.</SUMMARY>
          <DESCRIPTION>Match 3 offset in byte after sync word.</DESCRIPTION>
          <TARGETRELEASE>revB1B</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="MATCH" name="VALUE_4" value="12297" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 value.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="MASK_4" value="12298" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 mask.</SUMMARY>
      <DESCRIPTION></DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xFF" />
    </PROPERTY>
    <PROPERTY group="MATCH" name="CTRL_4" value="12299" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Match 4 configuration.</SUMMARY>
      <DESCRIPTION>Enable pattern 4 matches or not.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="POLARITY" lsb="7" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>True if packet matches.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>True if packet doesn't match.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LOGIC" lsb="6" size="1">
          <ENUMERATION value="0x00">
            <DESCRIPTION>AND with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x01">
            <DESCRIPTION>OR  with previous MATCH field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="OFFSET" lsb="0" size="5">
          <SUMMARY>Match 4 offset.</SUMMARY>
          <DESCRIPTION>Match 4 offset in byte after sync word.</DESCRIPTION>
          <TARGETRELEASE>revB1B</TARGETRELEASE>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="TX_LENGTH" value="4096" default="0x08" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configure length of TX Preamble.</SUMMARY>
      <DESCRIPTION>This property is used to configure the length of the Preamble field in TX mode for both Standard and Non-Standard Preambles.</DESCRIPTION>
      <DESCRIPTION>This property is not used by the chip in RX mode except when receiving a Non-Standard Preamble.  In such a case, this property must be configured with the expected Preamble length (to provide an upper timeout limit on the Sync Word search algorithm).</DESCRIPTION>
      <DESCRIPTION>This property is only applicable in TX Packet Handler FIFO mode; if TX Direct Synchronous or TX Direct Asynchronous mode is selected (see MODEM_MOD_TYPE property), the entire transmission is obtained from a real-time TXDATA input stream on a GPIO pin and no automatic field construction is possible.</DESCRIPTION>
      <DESCRIPTION>
        The units of this property are in either nibbles or bytes, depending upon the value of <REFERENCE>PREAMBLE_CONFIG</REFERENCE>:LENGTH_CONFIG.
      </DESCRIPTION>
      <DESCRIPTION>Setting PREAMBLE_TX_LENGTH = 0x00 is a valid value, and will result in skipping transmission of the Preamble field; in such a case, the Sync Word will be the first transmitted field.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_STD_1" value="4097" default="0x14" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of reception of a packet with a Standard Preamble pattern.</SUMMARY>
      <DESCRIPTION>The fields in this property are applicable only in RX mode, and apply primarily to reception of Standard Preamble patterns (e.g., 1010 or 0101 patterns).</DESCRIPTION>
      <DESCRIPTION>However, see note on required configuration of RX_THRESH during reception of Non-Standard Preamble patterns.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_THRESH" lsb="0" size="7">
          <RANGE min="0" max="127" />
          <DESCRIPTION>Configures the number of standard preamble bits (e.g., 1010 or 0101) that must be consecutively received to detect a valid preamble.  Bit errors are not allowed during qualification of a Standard Preamble.</DESCRIPTION>
          <DESCRIPTION>
            This field does NOT determine the detection threshold during reception of a Non-Standard Preamble (this is set by <REFERENCE>PREAMBLE_CONFIG_NSTD</REFERENCE>:PATTERN_LENGTH).  However, when receiving a Non-Standard Preamble this field should be configured to a moderate value (e.g., 0x14 to 0x20) else premature timeout of the search for Sync Word may occur.
          </DESCRIPTION>
          <DESCRIPTION>Detection of a PREAMBLE_VALID signal is typically used by the chip as a trigger event for gear-switching of internal clock timing loops or AFC functionality.</DESCRIPTION>
          <DESCRIPTION>Setting RX_THRESH = 0x00 is a valid value and will result in skipping checking/qualification of the preamble; the PREAMBLE_VALID signal will be asserted HIGH immediately upon entering RX mode.</DESCRIPTION>
        </FIELD>
        <FIELD name="SKIP_SYNC_TIMEOUT" lsb="7" size="1">
          <DESCRIPTION>During reception of a Standard Preamble pattern, the chip recognizes the start of the Sync Word field as a sequence of bits that does not match a ...1010... pattern.  Detection of the Sync Word is expected to occur soon thereafter (within the programmed length of the Sync Word field).</DESCRIPTION>
          <DESCRIPTION>This bit affects the timeout function only during reception of a Standard Preamble; it is not possible to skip the Sync Word timeout function during reception of a Non-Standard Preamble.</DESCRIPTION>
          <ENUMERATION value="0x0" name="DISABLE">
            <DESCRIPTION>If Sync Word is not found the system will timeout and return to searching for Preamble.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="ENABLE">
            <DESCRIPTION>Sync Word search timeout is ignored and the chip remains continuously searching for Sync Word.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_NSTD" value="4098" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of transmission/reception of a packet with a Non-Standard Preamble pattern.</SUMMARY>
      <DESCRIPTION>The fields in this property apply only to transmission and reception of packets with Non-Standard Preamble patterns (e.g., other than 1010 or 0101 patterns).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_ERRORS" lsb="5" size="3">
          <RANGE min="0" max="7" />
          <DESCRIPTION>Number of bit errors that are allowed during reception and qualification of a Non-Standard Preamble pattern.</DESCRIPTION>
          <DESCRIPTION>No bit errors are allowed when configured to receive a Standard Preamble pattern; however, it is possible to configure the chip to receive a Non-Standard Preamble but define the pattern to match that of a Standard Preamble, thus providing a means for tolerating bit errors.</DESCRIPTION>
        </FIELD>
        <FIELD name="PATTERN_LENGTH" lsb="0" size="5">
          <DESCRIPTION>This value (plus 1) specifies the length (in bits) of the repeating pattern that defines the Non-Standard Preamble.  The actual values of the bits in the pattern are specified within the PREAMBLE_PATTERN_XX properties; the PATTERN_LENGTH field simply determines how many of those specified bit values are transmitted as a repeating pattern.</DESCRIPTION>
          <DESCRIPTION>
            In TX mode, if the total length of the TX preamble (as defined by the <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE> property) is longer than PATTERN_LENGTH, the pattern will be transmitted repeatedly as necessary.
          </DESCRIPTION>
          <DESCRIPTION>
            In RX mode during reception of a Non-Standard Preamble, this field determines the number of preamble bits that must be received to detect a valid preamble.  That is, the PATTERN_LENGTH field provides a similar Detection Threshold functionality for a Non-Standard Preamble as <REFERENCE>PREAMBLE_CONFIG_STD_1</REFERENCE>:RX_THRESH provides for a Standard Preamble.
          </DESCRIPTION>
          <RANGE min="0" max="31" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG_STD_2" value="4099" default="0x0F" feature="rx" dev="1" wip="0">
      <SUMMARY>Configuration of timeout periods during reception of a packet with Standard Preamble pattern.</SUMMARY>
      <DESCRIPTION>During initial reception and acquisition of a packet, it is often useful to define a timeout period to limit the amount of time the chip remains on-channel awaiting the incoming packet.  This property allows configuration of this preamble search timeout period.</DESCRIPTION>
      <DESCRIPTION>If a valid preamble is not found within the specified timeout period, an INVALID_PREAMBLE event is generated and may be used to generate an interrupt and/or exit automatically from RX mode.</DESCRIPTION>
      <DESCRIPTION>The fields in this property are applicable only in RX mode, and only apply to reception of Standard Preamble patterns (e.g., 1010 or 0101 patterns).  Detection of INVALID_PREAMBLE is not possible when configured to receive a Non-Standard Preamble pattern.</DESCRIPTION>
      <DESCRIPTION>Two different timeout configuration fields are provided to allow definition of timeout periods with significantly different lengths and bit resolution.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_PREAMBLE_TIMEOUT" lsb="0" size="4">
          <RANGE min="0" max="15" />
          <DESCRIPTION>Length of time (in nibbles i.e., 4 bits) to search for preamble before determining that a preamble does not exist, and an INVALID_PREAMBLE signal/interrupt is generated.  This length of RX timeout period is typically used for RX channel scanning or hopping applications.  This field is only applicable if the value of the RX_PREAMBLE_TIMEOUT_EXTEND field is zero.</DESCRIPTION>
        </FIELD>
        <FIELD name="RX_PREAMBLE_TIMEOUT_EXTEND" lsb="4" size="4">
          <RANGE min="0" max="15" />
          <DESCRIPTION>Length of time (in increments of 15 nibbles, i.e., 60 bits, up to a maximum of 225 nibbles) to search for preamble before determining that a preamble does not exist, and an INVALID_PREAMBLE signal/interrupt is generated.</DESCRIPTION>
          <DESCRIPTION>If the value of this field is non-zero, the value of the RX_PREAMBLE_TIMEOUT field is ignored.</DESCRIPTION>
          <DESCRIPTION>This field allows for very long RX timeout periods and is typically used for applications in which the RX dwells on a channel and waits for the TX packet to arrive.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="CONFIG" value="4100" default="0x21" feature="pro2" dev="1" wip="0">
      <SUMMARY>General configuration bits for the Preamble field.</SUMMARY>
      <DESCRIPTION>Miscellaneous preamble configuration bits.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="STANDARD_PREAM" lsb="0" size="2">
          <DESCRIPTION>This field is applicable to both TX and RX modes, but has slightly different meaning in both modes.</DESCRIPTION>
          <ENUMERATION value="0x0" name="PRE_NS">
            <DESCRIPTION>
              TX Mode:  Transmit the Non-Standard Preamble (defined in PREAMBLE_PATTERN_XX) as a repetitive pattern until reaching the number of nibbles/bytes defined in <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE>.
            </DESCRIPTION>
            <DESCRIPTION>RX Mode:  Expects to receive the Non-Standard Preamble pattern (defined in PREAMBLE_PATTERN_XX) at least once, and generates a PREAMBLE_VALID signal/interrupt upon the first detection of the number of pattern bits specified by PATTERN_LENGTH.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="PRE_1010">
            <DESCRIPTION>
              TX Mode:  Transmit a Standard 1010 preamble until reaching the number of nibbles/bytes defined in <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE>.
            </DESCRIPTION>
            <DESCRIPTION>RX Mode:  Expects to receive a Standard 1010 or 0101 preamble.  In RX mode, a value of 0x1 or 0x2 in this field results in identical operation.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2" name="PRE_0101">
            <DESCRIPTION>
              TX Mode:  Transmit a Standard 0101 preamble until reaching the number of nibbles/bytes defined in <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE>.
            </DESCRIPTION>
            <DESCRIPTION>RX Mode:  Expects to receive a Standard 1010 or 0101 preamble.  In RX mode, a value of 0x1 or 0x2 in this field results in identical operation.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MAN_ENABLE" lsb="2" size="1">
          <DESCRIPTION>This bit enables or disables Manchester encoding/decoding across only the Preamble field.  This bit is applicable in both TX and RX mode.</DESCRIPTION>
          <ENUMERATION value="0x0" name="NO_MAN">
            <DESCRIPTION>Preamble field is not Manchester encoded/decoded.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="EN_MAN">
            <DESCRIPTION>Preamble field is Manchester encoded/decoded.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MAN_CONST" lsb="3" size="1">
          <DESCRIPTION>Manchester encoding normally operates by replacing each 0 bit with a 10 chip pattern, and each 1 bit with a 01 bit pattern (or vice versa).</DESCRIPTION>
          <ENUMERATION value="0x0" name="NO_CON">
            <DESCRIPTION>When Manchester encoding is enabled across the Preamble field by setting the MAN_ENABLE bit and STANDARD_PREAM=0x2 (i.e., standard preamble pattern is 0101), the post-Manchester transmitted bits will be 10011001.  If STANDARD_PREAM=0x1 (i.e., standard preamble pattern is 1010), the post-Manchester transmitted bits will be 01100110.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="CONST">
            <DESCRIPTION>When Manchester encoding is enabled across the Preamble field by setting the MAN_ENABLE bit and STANDARD_PREAM=0x2, the pre-Manchester preamble pattern will be replaced with a pattern of constant 1's, and the post-Manchester transmitted bits will be 01010101.  If STANDARD_PREAM=0x1, the pre-Manchester pattern will be replaced with a pattern of constant 0's, and the post-Manchester transmitted bits will be 10101010.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="LENGTH_CONFIG" lsb="4" size="1">
          <DESCRIPTION>
            This bit specifies whether the units of the <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE> property are in increments of nibbles or bytes.
          </DESCRIPTION>
          <ENUMERATION value="0x0" name="NIBBLE">
            <DESCRIPTION>
              The units of the <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE> property are in nibbles.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="BYTE">
            <DESCRIPTION>
              The units of the <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE> property are in bytes.
            </DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PREAM_FIRST_1_OR_0" lsb="5" size="1">
          <DESCRIPTION>This bit should be set to match the polarity of the first bit of the transmitted packet.  The WDS Calculator should configure this bit correctly as a function of the selected Preamble type (i.e. Standard or Non-Standard) and first defined bit (e.g., Standard 0101 or Standard 1010).</DESCRIPTION>
          <ENUMERATION value="0x0" name="FIRST_0">
            <DESCRIPTION>First transmitted bit in the packet is 0.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="FIRST_1">
            <DESCRIPTION>First transmitted bit in the packet is 1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_31_24" value="4101" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of the bit values describing a Non-Standard Preamble pattern.</SUMMARY>
      <DESCRIPTION>
        The PREAMBLE_PATTERN_XX properties define the pattern to be transmitted in TX mode and the pattern expected to be received in RX mode, but only when <REFERENCE>PREAMBLE_CONFIG</REFERENCE>:STANDARD_PREAM has been set to 0x0 (i.e., use Non-Standard Preamble).
      </DESCRIPTION>
      <DESCRIPTION>
        The PREAMBLE_PATTERN_XX properties are used to define the actual bit values describing the Non-Standard Preamble pattern; <REFERENCE>PREAMBLE_CONFIG_NSTD</REFERENCE>:PATTERN_LENGTH is used to define how many bits of the PREAMBLE_PATTERN_XX values are used.
      </DESCRIPTION>
      <DESCRIPTION>
        In TX mode, if the value of <REFERENCE>PREAMBLE_TX_LENGTH</REFERENCE> is larger than <REFERENCE>PREAMBLE_CONFIG_NSTD</REFERENCE>:PATTERN_LENGTH, the PREAMBLE_PATTERN will be transmitted repeatedly until the full number of bits has been sent.
      </DESCRIPTION>
      <DESCRIPTION>
        In RX mode, the full number of bits defined by <REFERENCE>PREAMBLE_CONFIG_NSTD</REFERENCE>:PATTERN_LENGTH must be received once before the PREAMBLE_VALID signal/interrupt is generated.
      </DESCRIPTION>
      <DESCRIPTION>If Manchester encoding/decoding is enabled, the values of the PREAMBLE_PATTERN_XX properties are expressed in chips (i.e., after Manchester encoding in TX mode, or before Manchester decoding in RX mode).</DESCRIPTION>
      <DESCRIPTION>
        The bits of the PREAMBLE_PATTERN_XX are always sent bits 0-31 time-wise (e.g., <REFERENCE>PREAMBLE_PATTERN_7_0</REFERENCE> bit 0 is sent first).
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_23_16" value="4102" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of the bit values describing a Non-Standard Preamble pattern.</SUMMARY>
      <DESCRIPTION>Bits 23-16 of the Non-Standard Preamble pattern to be transmitted or expected to be received.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PREAMBLE_PATTERN_31_24</REFERENCE> for more details regarding the Non-Standard Preamble functionality.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_15_8" value="4103" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of the bit values describing a Non-Standard Preamble pattern.</SUMMARY>
      <DESCRIPTION>Bits 15-8 of the Non-Standard Preamble pattern to be transmitted or expected to be received.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PREAMBLE_PATTERN_31_24</REFERENCE> for more details regarding the Non-Standard Preamble functionality.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="PATTERN_7_0" value="4104" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of the bit values describing a Non-Standard Preamble pattern.</SUMMARY>
      <DESCRIPTION>Bits 7-0 of the Non-Standard Preamble pattern to be transmitted or expected to be received.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PREAMBLE_PATTERN_31_24</REFERENCE> for more details regarding the Non-Standard Preamble functionality.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="POSTAMBLE_CONFIG" value="4105" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Postamble configuration bits.</SUMMARY>
      <DESCRIPTION>Miscellaneous postamble configuration bits.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="POSTAMBLE_SIZE" lsb="0" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>
              Postamble word is 8 bits, <REFERENCE>POSTAMBLE_PATTERN_31_24</REFERENCE> is used.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>
              Postamble word is 16 bits, <REFERENCE>POSTAMBLE_PATTERN_31_24</REFERENCE> through <REFERENCE>PREAMBLE_POSTAMBLE_PATTERN_23_16</REFERENCE> are used.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>
              Postamble word is 24 bits, <REFERENCE>POSTAMBLE_PATTERN_31_24</REFERENCE> through <REFERENCE>PREAMBLE_POSTAMBLE_PATTERN_15_8</REFERENCE> are used.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>
              Postamble word is 32 bits, <REFERENCE>POSTAMBLE_PATTERN_31_24</REFERENCE> through <REFERENCE>PREAMBLE_POSTAMBLE_PATTERN_7_0</REFERENCE> are used.
            </DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PKT_VALID_ON_POSTAMBLE" lsb="6" size="1">
          <DESCRIPTION>If postamble detection is enabled, this bit controls the state after detection.</DESCRIPTION>
          <ENUMERATION value="0x0" name="FALSE">
            <DESCRIPTION>Packet reception will continue after postamble detection.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="TRUE">
            <DESCRIPTION>
              Packet reception will stop and part will transition to <REFERENCE>START_RX</REFERENCE>:RXVALID_STATE after postamble detection.
            </DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="POSTAMBLE_ENABLE" lsb="7" size="1">
          <ENUMERATION value="0x0" name="FALSE">
            <DESCRIPTION>Disables postamble detection.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="TRUE">
            <DESCRIPTION>Enables postamble detection.  When postamble is detected a POSTAMBLE DETECT interrupt will be generated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="POSTAMBLE_PATTERN_31_24" value="4106" default="0" feature="rx" dev="1" wip="0">
      <SUMMARY>Postamble pattern bits 31-24.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="POSTAMBLE_PATTERN_23_16" value="4107" default="0" feature="rx" dev="1" wip="0">
      <SUMMARY>Postamble pattern bits 23-16.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="POSTAMBLE_PATTERN_15_8" value="4108" default="0" feature="rx" dev="1" wip="0">
      <SUMMARY>Postamble pattern bits 15-8.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PREAMBLE" name="POSTAMBLE_PATTERN_7_0" value="4109" default="0" feature="rx" dev="1" wip="0">
      <SUMMARY>Postamble pattern bits 7-0.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="CONFIG" value="4352" default="0x01" feature="pro2" dev="1" wip="0">
      <SUMMARY>Sync Word configuration bits.</SUMMARY>
      <DESCRIPTION>Configuration of miscellaneous Sync Word bits.  NOTE:  each byte of the Sync Word is transmitted/received in little-endian fashion (i.e., least significant bit first).  Byte(s) of the Sync Word are transmitted/received in descending order (i.e., Byte 3 first, followed by Byte 2, etc.)</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="LENGTH" lsb="0" size="2">
          <ENUMERATION value="0x0">
            <DESCRIPTION>
              Sync Word is 1-byte (8 bits) in length.  Sync Word byte 3 is used, with its value defined in the <REFERENCE>SYNC_BITS_31_24</REFERENCE> property.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>
              Sync Word is 2-bytes (16 bits) in length.  Sync Word bytes 3 and 2 are used (in descending order), with their values defined in the <REFERENCE>SYNC_BITS_31_24</REFERENCE> and <REFERENCE>SYNC_BITS_23_16</REFERENCE> properties.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>
              Sync Word is 3-bytes (24 bits) in length.  Sync Word bytes 3, 2, and 1 are used (in descending order), with their values defined in the <REFERENCE>SYNC_BITS_31_24</REFERENCE>, <REFERENCE>SYNC_BITS_23_16</REFERENCE>, and <REFERENCE>SYNC_BITS_15_8</REFERENCE> properties.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>
              Sync Word is 4-bytes (32 bits) in length.  Sync Word bytes 3, 2, 1, and 0 are used (in descending order), with their values defined in the <REFERENCE>SYNC_BITS_31_24</REFERENCE>, <REFERENCE>SYNC_BITS_23_16</REFERENCE>, <REFERENCE>SYNC_BITS_15_8</REFERENCE>, and <REFERENCE>SYNC_BITS_7_0</REFERENCE> properties.
            </DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANCH" lsb="2" size="1">
          <DESCRIPTION>
            If Manchester decoding of the Sync Word in RX mode is enabled, <REFERENCE>MODEM_MAP_CONTROL</REFERENCE>:ENMANCH should also be set; this results in an extended search timeout period for the Sync Word to allow for the increased number of bits/chips.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is not manchester encoded.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is manchester encoded.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK" lsb="3" size="1" feature="4fsk">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync word is not 4(G)FSK modulated.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync word is 4(G)FSK modulated.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RX_ERRORS" lsb="4" size="3" feature="rx">
          <DESCRIPTION>Defines the number of bit errors that are allowed in the Sync Word field during receive Sync Word detection.</DESCRIPTION>
          <RANGE min="0" max="7" />
        </FIELD>
        <FIELD name="SKIP_TX" lsb="7" size="1" feature="tx">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Sync Word is transmitted.  The number of bytes comprising the Sync Word is defined by the LENGTH field within this same property.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Sync Word is not transmitted.  NOTE:  the SKIP_TX bit only affects TX operation, and does not affect reception of the Sync Word.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_31_24" value="4353" default="0x2D" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 3 of sync word.</SUMMARY>
      <DESCRIPTION>Define the value of Byte 3 of the Sync Word for both TX and RX operation.  NOTE:  Although the Sync Word byte(s) are transmitted/received in descending order (i.e., Byte 3 first, followed by Byte 2, etc.), each byte is transmitted/received in little-endian fashion (i.e., least significant bit first).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_23_16" value="4354" default="0xD4" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 2 of sync word.</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_15_8" value="4355" default="0x2D" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 1 of sync word.</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="SYNC" name="BITS_7_0" value="4356" default="0xD4" feature="common" dev="1" wip="0">
      <SUMMARY>Byte 0 of sync word.</SUMMARY>
      <DESCRIPTION>Sync bytes are always sent bit 0 first.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="CRC_CONFIG" value="4608" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>Select a CRC polynomial and seed.</SUMMARY>
      <DESCRIPTION>The chip contains a 32-bit CRC engine for the purpose of generating and comparing a checksum across selected data fields.  This property is used to select the desired CRC polynomial and CRC seed value.</DESCRIPTION>
      <DESCRIPTION>If a 8-bit CRC polynomial is selected, the length of the resulting checksum is 1-bytes. If a 16-bit CRC polynomial is selected, the length of the resulting checksum is 2-bytes. If a 32-bit CRC polynomial is selected, the length of the resulting checksum is 4-bytes.</DESCRIPTION>
      <DESCRIPTION>
        The configuration bits in this property are common to both TX and RX modes; however, this property is only applicable when automatic Packet Handling is enabled (e.g., when using the TX FIFO as the modulation source in TX mode, or when <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_RX_DISABLE is cleared in RX mode).
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <BYTE>
        <FIELD name="CRC_POLYNOMIAL" lsb="0" size="4">
          <ENUMERATION value="0" name="NO_CRC">
            <DESCRIPTION>Disallowed value, not recommended for use.  Setting CRC_POLYNOMIAL=0x0  does not ensure complete disabling of CRC generation/checking.  The proper method of disabling CRC is by clearing the CRC_ENABLE bit(s) in the appropriate PKT_FIELD_X_CRC_CONFIG properties.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ITU_T_CRC8">
            <DESCRIPTION>ITU-T CRC8:   X8+X2+X+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="IEC_16">
            <DESCRIPTION>IEC-16:       X16+X14+X12+X11+X9+X8+X7+X4+X+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="BAICHEVA_16">
            <DESCRIPTION>Baicheva-16:  X16+X15+X12+X7+X6+X4+X3+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CRC_16_IBM">
            <DESCRIPTION>CRC-16 (IBM): X16+X15+X2+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CCITT_16">
            <DESCRIPTION>CCIT-16:      X16+X12+X5+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="KOOPMAN">
            <DESCRIPTION>Koopman:      X32+X30+X29+X28+X26+X20+X19+X17+X16+X15+X11+X10+X7+X6+X4+X2+X+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="IEEE_802_3">
            <DESCRIPTION>IEEE 802.3:   X32+X26+X23+X22+X16+X12+X11+X10+X8+X7+X5+X4+X2+X+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="CASTAGNOLI">
            <DESCRIPTION>Castagnoli:   X32+X28+X27+X26+X25+X23+X22+X20+X19+X18+X14+X13+X11+X10+X9+X8+X6+1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ALT_CRC_POLYNOMIAL" lsb="4" size="3" internal="1">
          <ENUMERATION value="0" name="NO_CRC">
            <DESCRIPTION>No CRC.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ITU_T_CRC8">
            <DESCRIPTION>ITU-T CRC8:   X8+X2+X+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="IEC_16">
            <DESCRIPTION>IEC-16:       X16+X14+X12+X11+X9+X8+X7+X4+X+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="BAICHEVA_16">
            <DESCRIPTION>Baicheva-16:  X16+X15+X12+X7+X6+X4+X3+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CRC_16_IBM">
            <DESCRIPTION>CRC-16 (IBM): X16+X15+X2+1.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CCITT_16">
            <DESCRIPTION>CCIT-16:      X16+X12+X5+1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_SEED" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Use all 0's for the CRC Seed.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Use all 1's for the CRC Seed.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_POLY_15_8" value="4609" default="0x01" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of the 16-bit polynomial value for the PN Generator (e.g., for Data Whitening)</SUMMARY>
      <DESCRIPTION>The chip contains a 16-bit linear feedback shift register (LFSR) for the purpose of generating a pseudo-random number (PN).  The resulting PN sequence may be used for data whitening/de-whitening by XOR-ing the output with the data bits of specified fields.</DESCRIPTION>
      <DESCRIPTION>The PN sequence may also be used a modulation source for the TXDATA stream through configuration of the MODEM_MOD_TYPE property.  This is often useful for test purposes (e.g., BER tests).</DESCRIPTION>
      <DESCRIPTION>The PN sequence generated by the LFSR is determined by the selected 16-bit polynomial and starting seed value.  This property defines Byte 1 of the polynomial.</DESCRIPTION>
      <DESCRIPTION>In general, it is desired to select a polynomial value that results in a maximal length run sequence, where the PN pattern length = 2^N - 1 (e.g., pattern length = 255 bits for a PN9 sequence).  There may be more than one polynomial value that will result in a PN sequence of a desired length; the following polynomial values are provided as examples for a variety of popular PN sequence lengths.</DESCRIPTION>
      <DESCRIPTION>- PN6:  PKT_WHT_POLY = 0x0030.</DESCRIPTION>
      <DESCRIPTION>- PN9:  PKT_WHT_POLY = 0x0108.</DESCRIPTION>
      <DESCRIPTION>- PN11:  PKT_WHT_POLY = 0x0500.</DESCRIPTION>
      <DESCRIPTION>- PN13:  PKT_WHT_POLY = 0x1B00.</DESCRIPTION>
      <DESCRIPTION>- PN15:  PKT_WHT_POLY = 0x6000.</DESCRIPTION>
      <DESCRIPTION>
        Additional properties related to the generation of the PN sequence are <REFERENCE>PKT_WHT_SEED</REFERENCE> and <REFERENCE>PKT_WHT_BIT_NUM</REFERENCE>.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_POLY_7_0" value="4610" default="0x08" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of the 16-bit polynomial value for the PN Generator (e.g. for Data Whitening)</SUMMARY>
      <DESCRIPTION>The PN sequence generated by the LFSR is determined by the selected 16-bit polynomial and starting seed value.  This property defines Byte 0 of the polynomial.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_WHT_POLY_15_8</REFERENCE> for more details regarding polynomial selection for the PN Generator.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_SEED_15_8" value="4611" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 0 of the 16-bit seed value for the PN Generator (e.g., for Data Whitening)</SUMMARY>
      <DESCRIPTION>The PN sequence generated by the LFSR is determined by the selected 16-bit polynomial and starting seed value.  This property defines Byte 1 of the starting seed value.</DESCRIPTION>
      <DESCRIPTION>The seed value determines the starting state of the PN sequence, but does not affect the bit order of the sequence.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_WHT_POLY_15_8</REFERENCE> for more details regarding configuration of the PN Generator.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_SEED_7_0" value="4612" default="0xFF" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Byte 1 of the 16-bit seed value for the PN Generator (e.g., for Data Whitening)</SUMMARY>
      <DESCRIPTION>The PN sequence generated by the LFSR is determined by the selected 16-bit polynomial and starting seed value.  This property defines Byte 1 of the starting seed value.</DESCRIPTION>
      <DESCRIPTION>The seed value determines the starting state of the PN sequence, but does not affect the bit order of the sequence.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_WHT_POLY_15_8</REFERENCE> for more details regarding configuration of the PN Generator.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="WHT_BIT_NUM" value="4613" default="0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Selects which bit of the LFSR (used to generate the PN / data whitening sequence) is used as the output bit for data scrambling.</SUMMARY>
      <DESCRIPTION>This property determines which bit of the 16-bit LFSR is taken as the output bit, to be XOR'ed with the Payload data fields when data whitening is enabled.</DESCRIPTION>
      <DESCRIPTION>Selection of the output bit number will affect the starting point of the PN sequence, but will not affect the bit order or pattern of the sequence itself.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_WHT_POLY_15_8</REFERENCE> for more details regarding configuration of the PN Generator.
      </DESCRIPTION>
      <DESCRIPTION>This property also allows configuration of special software-based data whitening and CRC algorithms (as compared with the normal hardware-based implementation using the built-in LFSR). This is provided to allow compatibility with data whitening and CRC algorithms from other vendors; contact Silicon Labs Applications Support for further details.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <BYTE>
        <FIELD name="WHT_BIT_NUM" lsb="0" size="4">
          <ENUMERATION value="0">
            <DESCRIPTION>Bit 0 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Bit 1 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2">
            <DESCRIPTION>Bit 2 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3">
            <DESCRIPTION>Bit 3 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4">
            <DESCRIPTION>Bit 4 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5">
            <DESCRIPTION>Bit 5 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6">
            <DESCRIPTION>Bit 6 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7">
            <DESCRIPTION>Bit 7 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8">
            <DESCRIPTION>Bit 8 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9">
            <DESCRIPTION>Bit 9 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10">
            <DESCRIPTION>Bit 10 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11">
            <DESCRIPTION>Bit 11 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12">
            <DESCRIPTION>Bit 12 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13">
            <DESCRIPTION>Bit 13 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14">
            <DESCRIPTION>Bit 14 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15">
            <DESCRIPTION>Bit 15 is selected as the output bit for data whitening.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SW_CRC_CTRL" lsb="6" size="1" internal="1">
          <DESCRIPTION>
            Enables software-based CRC calculation over the packet, and is only applicable when also using software-based data whitening by setting the SW_WHT_CTRL bit. If not using software-based whitening, CRC functionality must be configured in the Packet Handler (see <REFERENCE>PKT_CRC_CONFIG</REFERENCE>).
          </DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>Disable the software based CRC engine.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>Enable the software based CRC engine.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SW_WHT_CTRL" lsb="7" size="1" internal="1">
          <DESCRIPTION>Enables software whitening over the packet.</DESCRIPTION>
          <ENUMERATION value="0x0" name="DISABLE">
            <DESCRIPTION>Disable the software based data whitening algorithm.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="ENABLE">
            <DESCRIPTION>Enable the software based data whitening algorithm.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="CONFIG1" value="4614" default="0" feature="pro2" dev="1" wip="0">
      <SUMMARY>General packet configuration bits.</SUMMARY>
      <DESCRIPTION>General packet configuration bits.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="BIT_ORDER" lsb="0" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Msb first for all fields. Bit 7 transmitted first timewise. Note: Preamble and sync word are always transmitted lsb first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Lsb first for all fields. Bit 0 transmitted first timewise.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENDIAN" lsb="1" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>CRC low bytes are received/transmitted first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>CRC high bytes are received/transmitted first.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_INVERT" lsb="2" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Leave each CRC bit intact.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Invert each CRC bit before transmit.  Invert received CRC before comparison.  Data in fifo remains untouched.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MANCH_POL" lsb="3" size="1">
          <ENUMERATION value="0x0">
            <DESCRIPTION>0 is encoded/decoded to/from 10 Manchester pattern.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>0 is encoded/decoded to/from 01 Manchester pattern.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RX_MULTI_PKT" lsb="4" size="1" feature="rx">
          <ENUMERATION value="0x0">
            <DESCRIPTION>Turn off receive chain after packet received.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Leave receive chain enabled after packet received.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK_EN" lsb="5" size="1" feature="4fsk">
          <ENUMERATION value="0">
            <DESCRIPTION>The modem is not in 4(G)FSK mode.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>The modem is in 4(G)FSK mode.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PH_RX_DISABLE" lsb="6" size="1" feature="rx">
          <ENUMERATION value="0">
            <DESCRIPTION>Packet handler is enabled in RX.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Packet handler is disabled in RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PH_FIELD_SPLIT" lsb="7" size="1">
          <ENUMERATION value="0">
            <DESCRIPTION>Field level properties (property 0x120D to 0x1220) are shared between TX and RX.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1">
            <DESCRIPTION>Field level properties are split between TX and RX. TX: from 0x120D ~ 0x1220, RX: from 0x1221 ~ 0x1234.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RESERVED_18_7" value="4615" default="0" feature="pro2" dev="1" wip="0" internal="1">
      <SUMMARY>Removed in revB1 was CHIP_MAP in revB1B.</SUMMARY>
      <TARGETRELEASE></TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN" value="4616" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Configuration bits for reception of a variable length packet.</SUMMARY>
      <DESCRIPTION>This property configures the chip for reception of a variable length packet.</DESCRIPTION>
      <DESCRIPTION>
        This property is applicable only in RX mode, and only when the automatic Packet Handler is enabled (i.e., <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_RX_DISABLE is cleared).
      </DESCRIPTION>
      <DESCRIPTION>
        If enabled, the extracted length can be retrieved using the <REFERENCE>PACKET_INFO</REFERENCE> command.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="DST_FIELD" lsb="0" size="3">
          <DESCRIPTION>
            This value determines which data field will be configured as a variable length field.  This value must be greater than the value in the <REFERENCE>PKT_LEN_FIELD_SOURCE</REFERENCE>:SRC_FIELD (i.e., the variable length field must be located after the field containing the packet length bytes).
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>
              Disables variable length packet mode; the chip receives fixed-length packets with the field lengths specified by the PKT_FIELD_X_LENGTH properties, or specified by the packet length value passed to the <REFERENCE>START_RX</REFERENCE> command.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Disallowed value (Field 1 may not be configured as a variable length field).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Field 2 is configured as the variable length field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>Field 3 is configured as the variable length field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x4">
            <DESCRIPTION>Field 4 is configured as the variable length field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x5">
            <DESCRIPTION>Field 5 is configured as the variable length field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x6">
            <DESCRIPTION>
              Do not adjust field lengths. Just capture length as specified by <REFERENCE>LEN_FIELD_SOURCE</REFERENCE>:SRC_FIELD.
            </DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x7">
            <DESCRIPTION>
              Do not adjust field lengths. Just capture length as specified by <REFERENCE>LEN_FIELD_SOURCE</REFERENCE>:SRC_FIELD.
            </DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="IN_FIFO" lsb="3" size="1">
          <DESCRIPTION>The chip provides the ability to strip off the received packet length bytes and store only the Payload data bytes in the RX FIFO.</DESCRIPTION>
          <ENUMERATION value="0x0" name="CUT_OUT">
            <DESCRIPTION>The received data bytes containing the length field value are not put in the RX FIFO.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="LEAVE_IN">
            <DESCRIPTION>The received data bytes containing the length field value are put in the RX FIFO.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SIZE" lsb="4" size="1">
          <DESCRIPTION>The chip supports reception of a variable packet length value that is either one or two bytes in length. This bit determines the length of the received packet length value.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>The received packet length field is one byte in length.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>The received packet length field is two bytes in length.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ENDIAN" lsb="5" size="1">
          <DESCRIPTION>The chip supports reception of a variable packet length value that is either one or two bytes in length. In the event the received packet length value is two bytes in length (i.e., the SIZE bit is set), this bit determines whether the received packet length value is considered as most significant byte first or least significant byte first.</DESCRIPTION>
          <ENUMERATION value="0x0" name="LITTLE">
            <DESCRIPTION>The received packet length value is least significant byte first.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1" name="BIG">
            <DESCRIPTION>The received packet length value is most significant byte first.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN_FIELD_SOURCE" value="4617" default="0" feature="rx" dev="1" wip="0">
      <SUMMARY>Field number containing the received packet length byte(s).</SUMMARY>
      <DESCRIPTION>This property configures the chip for reception of a variable length packet, and defines where the length field is in the packet.  The packet length byte(s) must be the last byte(s) in a fixed length field and must precede the variable length field.</DESCRIPTION>
      <DESCRIPTION>This property is applicable only in RX mode, and only when the automatic Packet Handler is enabled (i.e., the PH_RX_DISABLE bit in the PKT_CONFIG1 property is cleared).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="SRC_FIELD" lsb="0" size="3">
          <DESCRIPTION>
            This value determines which data field will be processed as containing the packet length byte(s).  The SRC_FIELD value must be less than the value of <REFERENCE>PKT_LEN</REFERENCE>:DST_FIELD (i.e., the variable length field must be located after the field containing the packet length bytes).
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Field 1 is processed as containing the packet length byte(s).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Field 1 is processed as containing the packet length byte(s).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x2">
            <DESCRIPTION>Field 2 is processed as containing the packet length byte(s).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x3">
            <DESCRIPTION>Field 3 is processed as containing the packet length byte(s).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x4">
            <DESCRIPTION>Field 4 is processed as containing the packet length byte(s).</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x5">
            <DESCRIPTION>Disallowed value (Field 5 may not be configured as containing the packet length bytes).</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="LEN_ADJUST" value="4618" default="0" feature="rx" dev="1" wip="0">
      <SUMMARY>Provides for adjustment/offset of the received packet length value (in order to accommodate a variety of methods of defining total packet length).</SUMMARY>
      <DESCRIPTION>It is possible to define the total length of a packet in a variety of ways (e.g., including/excluding the packet length bytes, including/excluding the CRC bytes, etc.)  This property provides a means of adjusting/offsetting the received packet length value in order to comply with a wide range of packet length implementations.</DESCRIPTION>
      <DESCRIPTION>This property is applicable only in RX mode, and only when the automatic Packet Handler is enabled (i.e., the PH_RX_DISABLE bit in the PKT_CONFIG1 property is cleared).</DESCRIPTION>
      <DESCRIPTION>The value of the LEN_ADJUST field is added to the received value of the packet length byte(s), extracted from the field specified by the SRC_FIELD value in the PKT_LEN_FIELD_SOURCE property.</DESCRIPTION>
      <DESCRIPTION>
        The resulting value is then used to configure the length of the variable length field specified by <REFERENCE>PKT_LEN</REFERENCE>:DST_FIELD.
      </DESCRIPTION>
      <DESCRIPTION>The required constant value of the LEN_ADJUST field is typically defined in a protocol specification or regulatory standard, or can be derived from the specification.</DESCRIPTION>
      <DESCRIPTION>The default processing mode of the chip is that the received packet length value does NOT include the packet length bytes, and does NOT include CRC bytes.  In such a case, the LEN_ADJUST field should be set to 0x00.</DESCRIPTION>
      <DESCRIPTION>If the received packet length value includes the packet length bytes and/or the CRC bytes, its effective value must be reduced by adding a negative offset.  In such a case, the LEN_ADJUST field should be set to the negative value of the extra byte count (in 2's complement format).  Example:  the transmitted packet has a 2-byte packet length field followed by a 10-byte Payload field, and the value contained in the packet length bytes = 0x000C = 12 bytes.  The value of LEN_ADJUST should be set = 0xFE = -2.</DESCRIPTION>
      <DESCRIPTION>The LEN_ADJUST field is a signed value.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="PKT" name="TX_THRESHOLD" value="4619" default="0x30" feature="tx" dev="1" wip="0">
      <SUMMARY>TX almost empty threshold.</SUMMARY>
      <DESCRIPTION>The TX_FIFO_ALMOST_EMPTY interrupt is generated when the amount of space in the TX FIFO is equal to or greater than the PKT_TX_THRESHOLD value.  This interrupt may be used to signal the host MCU to store more data bytes into the TX FIFO, thus providing a means for handling packets with lengths greater than the size of the TX FIFO (i.e., 64 bytes, or 129 bytes in shared FIFO mode).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="64" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_THRESHOLD" value="4620" default="0x30" feature="rx" dev="1" wip="0">
      <SUMMARY>RX almost full threshold.</SUMMARY>
      <DESCRIPTION>The RX_FIFO_ALMOST_FULL interrupt is generated when the number of bytes stored in the RX FIFO is equal to or greater than the PKT_RX_THRESHOLD value.  This interrupt may be used to signal the host MCU to read more data bytes from the RX FIFO, thus providing a means for handling packets with lengths greater than the size of the RX FIFO (i.e., 64 bytes, or 129 bytes in shared FIFO mode).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="64" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_LENGTH_12_8" value="4621" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit Field 1 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_FIELD_1_LENGTH_XX properties specify the length of Field 1 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_FIELD_1_LENGTH_7_0</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>Partitioning of the Payload into separate fields is provided to support variable length packets, and to allow different forms of data processing (e.g., Manchester encoding, data whitening, etc) across different fields.</DESCRIPTION>
      <DESCRIPTION>These properties are applicable in TX mode only if the START_TX command is sent with the parameter TX_LEN=0.</DESCRIPTION>
      <DESCRIPTION>These properties are applicable in RX mode only under the following conditions:</DESCRIPTION>
      <DESCRIPTION>
        RX Packet Handling is enabled by clearing <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_RX_DISABLE, and
      </DESCRIPTION>
      <DESCRIPTION>The START_RX command is sent with the parameter RX_LEN=0, and</DESCRIPTION>
      <DESCRIPTION>
        <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT is cleared.  If the PH_FIELD_SPLIT bit is set, the lengths of the various fields in RX mode are determined by the PKT_RX_FIELD_LENGTH_XX properties.
      </DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used.  During TX mode, data will be retrieved from the TX FIFO until encountering the first field whose length has been set to zero. During RX mode, data will be stored in the RX FIFO until again encountering the first field whose length has been set to zero.  It is possible (although not common) to set the length of Field 1 = 0 bytes, as this would indicate transmission/reception of a packet with no Payload data at all.</DESCRIPTION>
      <DESCRIPTION>Field 1 cannot be configured as a variable length field, as there is no preceding field that may contain the variable length byte(s).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FIELD_1_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_LENGTH_7_0" value="4622" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit Field 1 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit Field 1 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding Field 1 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_CONFIG" value="4623" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for Field 1.</SUMMARY>
      <DESCRIPTION>Partitioning of the Payload into separate fields is provided to support features such as variable length packets and field-specific data processing (e.g., Manchester encoding, data whitening, etc).  This property provides configuration bits for field-specific processing on Field 1.</DESCRIPTION>
      <DESCRIPTION>
        The configuration bits in this property are common to both TX and RX modes dependent on <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT; however, this property is only applicable when automatic Packet Handling is enabled (e.g., when using the TX FIFO as the modulation source in TX mode, or when <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_RX_DISABLE is cleared in RX mode).
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Manchester encoding operates by replacing each bit with a two-chip pattern (e.g., each '0' bit with a '10' pattern and each '1' bit with a '01' bit pattern, or vice versa).  The desired encoding polarity is selected by <REFERENCE>PKT_CONFIG1</REFERENCE>:MANCH_POL.
          </DESCRIPTION>
          <DESCRIPTION>Enabling Manchester encoding in one or more fields does not affect the over-the-air data rate; each bit/chip within the entire packet is transmitted at the same data rate (specified by the MODEM_DATA_RATE_X properties).  Manchester encoding simply affects the number of bits/chips that are sent (e.g., by replacing one bit with two chips).</DESCRIPTION>
          <DESCRIPTION>In RX mode, the Manchester decoding function is performed only on bits stored in the RX FIFO; received data bits observed in real-time (on a GPIO pin) are output prior to decoding.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>The data whitening/de-whitening function is only available when automatic Packet Handling is enabled (e.g., when using the TX FIFO as the modulation source in TX mode, or when the PH_RX_DISABLE bit in the PKT_CONFIG1 property is cleared in RX mode).</DESCRIPTION>
          <DESCRIPTION>In RX mode, the data de-whitening function is performed only on bits stored in the RX FIFO; received data bits observed in real-time (on a GPIO pin) are output prior to de-whitening.</DESCRIPTION>
          <DESCRIPTION>Enabling data whitening does not affect the over-the-air data rate.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PN_START" lsb="2" size="1">
          <DESCRIPTION>The chip contains a linear feedback shift register (LFSR) for the purpose of generating a pseudo-random number (PN).  Data whitening/de-whitening may be obtained by XOR-ing the output from the resulting PN sequence with the data bits of specified fields.</DESCRIPTION>
          <DESCRIPTION>This bit controls whether the PN engine is freshly loaded with its seed value (specified in PKT_WHT_SEED_XX) at the start of this field, or whether the PN engine continues calculation from its last state (i.e., from the previous packet).  Note:  the seed value for the PN engine may only be loaded at the start of Field 1; it is not possible to re-load the seed value at any other place in the packet.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Continue PN generation using last state from previous packet.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Load PN engine with the seed value at the start of Field 1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            The chip supports field-specific configuration of (G)FSK modulation modes, i.e., 2(G)FSK across certain fields and 4(G)FSK across other fields.  In such a case, the Modem must be configured for 4(G)FSK operation across the entire packet (by setting the <REFERENCE>MODEM_MOD_TYPE</REFERENCE> property), and the Packet Handler is then configured on a field-by-field basis to process the data stream from the FIFO as bit pairs (for 4(G)FSK) or single bits (for 2(G)FSK).
          </DESCRIPTION>
          <DESCRIPTION>When 4(G)FSK is enabled across a field, the PH pulls two bits from the FIFO and sends them to the TX Modulator to be transmitted as one-of-four deviation levels.</DESCRIPTION>
          <DESCRIPTION>
            When 4(G)FSK is disabled across a field, the PH pulls one bit from the FIFO and replaces it with the appropriate two bits that map to the outer two deviation levels.  Although the TX Modulator remains configured for four levels of deviation (by the <REFERENCE>MODEM_MOD_TYPE</REFERENCE> property), using only the outer two deviation levels effectively results in 2(G)FSK modulation across that field.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_1_CRC_CONFIG" value="4624" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across Field 1.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across Field 1.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>This bit is applicable in both TX and RX modes, and enables ALT CRC checksum calculation over this field.  Note:  enabling ALT CRC calculation across a field does not automatically result in transmission/checking of the ALT CRC checksum at the end of the field.</DESCRIPTION>
          <DESCRIPTION>
            If in RX mode and <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT is set, this bit is ignored and the ALT_CRC_ENABLE functionality is obtained from the appropriate PKT_RX_FIELD_X_CRC_CONFIG property.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>This bit is applicable in both TX and RX modes, and enables CRC checksum calculation over this field.  Note:  enabling CRC calculation across a field does not automatically result in transmission/checking of the CRC checksum at the end of the field.</DESCRIPTION>
          <DESCRIPTION>
            If in RX mode and <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT is set, this bit is ignored and the CRC_ENABLE functionality is obtained from the appropriate PKT_RX_FIELD_X_CRC_CONFIG property.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>This bit is applicable only in RX mode, and determines whether the accumulated ALT CRC checksum will be checked at the end of this field.</DESCRIPTION>
          <DESCRIPTION>
            If the <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT bit is set, this bit is ignored and the CHECK_ALT_CRC functionality is obtained from the appropriate PKT_RX_FIELD_X_CRC_CONFIG property.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>This bit is applicable only in RX mode, and determines whether the accumulated CRC checksum will be checked at the end of this field.</DESCRIPTION>
          <DESCRIPTION>
            If the <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT bit is set, this bit is ignored and the CHECK_CRC functionality is obtained from the appropriate PKT_RX_FIELD_X_CRC_CONFIG property.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1" feature="tx">
          <DESCRIPTION>This bit is applicable only in TX mode, and determines whether the accumulated ALT CRC checksum will be transmitted at the end of this field.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_CRC" lsb="5" size="1" feature="tx">
          <DESCRIPTION>This bit is applicable only in TX mode, and determines whether the accumulated CRC checksum will be transmitted at the end of this field.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ALT_CRC_START" lsb="6" size="1" internal="1">
          <DESCRIPTION>
            The chip contains a 16-bit CRC engine that may be configured for a variety of polynomials and seed values (refer to the PKT_CRC_CONFIG property).  This bit controls whether the CRC engine is freshly loaded with its seed value (<REFERENCE>PKT_CRC_CONFIG</REFERENCE>:CRC_SEED) at the start of this field, or whether the CRC engine continues calculation from its last state (i.e., from the previous packet).  Note:  the seed value for the ALT CRC engine may only be loaded at the start of Field 1; it is not possible to re-load the seed value at any other place in the packet.
          </DESCRIPTION>
          <DESCRIPTION>This bit is applicable in both TX and RX modes.</DESCRIPTION>
          <DESCRIPTION>
            If in RX mode and <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT bit is set, this bit is ignored and the ALT_CRC_START functionality is obtained from the appropriate PKT_RX_FIELD_X_CRC_CONFIG property.
          </DESCRIPTION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Load 16-bit CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_START" lsb="7" size="1">
          <DESCRIPTION>
            The chip contains a 32-bit CRC engine that may be configured for a variety of polynomials and seed values (refer to the PKT_CRC_CONFIG property).  This bit controls whether the CRC engine is freshly loaded with its seed value (<REFERENCE>PKT_CRC_CONFIG</REFERENCE>:CRC_SEED) at the start of this field, or whether the CRC engine continues calculation from its last state (i.e., from the previous packet).  Note:  the seed value for the CRC engine may only be loaded at the start of Field 1; it is not possible to re-load the seed value at any other place in the packet.
          </DESCRIPTION>
          <DESCRIPTION>This bit is applicable in both TX and RX modes.</DESCRIPTION>
          <DESCRIPTION>
            If in RX mode and <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT is set, this bit is ignored and the CRC_START functionality is obtained from the appropriate PKT_RX_FIELD_X_CRC_CONFIG property.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Continue CRC calculation using the last state from the previous packet.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>
              Load the CRC engine with the seed value at the start of this field using <REFERENCE>PKT_CRC_CONFIG</REFERENCE>:CRC_SEED.
            </DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_LENGTH_12_8" value="4625" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit Field 2 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_FIELD_2_LENGTH_XX properties specify the length of Field 2 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_FIELD_2_LENGTH_7_0 property</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>
        Field 2 may be configured as a variable length field by setting the appropriate value of DST_FIELD (in the <REFERENCE>PKT_LEN</REFERENCE> property); however, it is also necessary that a previous field contain the variable length byte(s).  If configured as a variable length field, this property must be set with a value that represents the maximum expected length of the field.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding field length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FIELD_2_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_LENGTH_7_0" value="4626" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit Field 2 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit Field 2 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_2_LENGTH_12_8</REFERENCE> for more details regarding Field 2 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_CONFIG" value="4627" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for Field 2.</SUMMARY>
      <DESCRIPTION>This property provides configuration bits for field-specific processing on Field 2.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling of field-specific processing.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling data whitening/de-whitening across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="2" size="1">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_2_CRC_CONFIG" value="4628" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across Field 2.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across Field 2.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding configuration of field-specific CRC calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the ALT CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1" feature="tx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling transmission of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_CRC" lsb="5" size="1" feature="tx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling transmission of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="6" size="2">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_LENGTH_12_8" value="4629" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit Field 3 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_FIELD_3_LENGTH_XX properties specify the length of Field 3 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_FIELD_3_LENGTH_7_0 property</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>
        Field 3 may be configured as a variable length field by setting the appropriate value of DST_FIELD (in the <REFERENCE>PKT_LEN</REFERENCE> property); however, it is also necessary that a previous field contain the variable length byte(s).  If configured as a variable length field, this property must be set with a value that represents the maximum expected length of the field.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding field length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FIELD_3_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_LENGTH_7_0" value="4630" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit Field 3 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit Field 3 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_3_LENGTH_12_8</REFERENCE> for more details regarding Field 3 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_CONFIG" value="4631" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for Field 3.</SUMMARY>
      <DESCRIPTION>This property provides configuration bits for field-specific processing on Field 3.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling of field-specific processing.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling data whitening/de-whitening across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="2" size="1">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_3_CRC_CONFIG" value="4632" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across Field 3.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across Field 3.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding configuration of field-specific CRC calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the ALT CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1" feature="tx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling transmission of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_CRC" lsb="5" size="1" feature="tx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling transmission of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="6" size="2">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_LENGTH_12_8" value="4633" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit Field 4 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_FIELD_4_LENGTH_XX properties specify the length of Field 4 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_FIELD_4_LENGTH_7_0 property</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>
        Field 4 may be configured as a variable length field by setting the appropriate value of DST_FIELD (in the <REFERENCE>PKT_LEN</REFERENCE> property); however, it is also necessary that a previous field contain the variable length byte(s).  If configured as a variable length field, this property must be set with a value that represents the maximum expected length of the field.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding field length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FIELD_4_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_LENGTH_7_0" value="4634" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit Field 4 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit Field 4 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_4_LENGTH_12_8</REFERENCE> for more details regarding Field 4 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_CONFIG" value="4635" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for Field 4.</SUMMARY>
      <DESCRIPTION>This property provides configuration bits for field-specific processing on Field 4.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling of field-specific processing.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling data whitening/de-whitening across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="2" size="1">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_4_CRC_CONFIG" value="4636" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across Field 4.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across Field 4.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding configuration of field-specific CRC calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the ALT CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1" feature="tx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling transmission of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_CRC" lsb="5" size="1" feature="tx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling transmission of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="6" size="2">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_LENGTH_12_8" value="4637" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit Field 5 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_FIELD_5_LENGTH_XX properties specify the length of Field 5 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_FIELD_5_LENGTH_7_0 property</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>
        Field 5 may be configured as a variable length field by setting the appropriate value of DST_FIELD (in the <REFERENCE>PKT_LEN</REFERENCE> property); however, it is also necessary that a previous field contain the variable length byte(s).  If configured as a variable length field, this property must be set with a value that represents the maximum expected length of the field.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding field length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="FIELD_5_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_LENGTH_7_0" value="4638" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit Field 5 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit Field 5 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_5_LENGTH_12_8</REFERENCE> for more details regarding Field 5 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_CONFIG" value="4639" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for Field 5.</SUMMARY>
      <DESCRIPTION>This property provides configuration bits for field-specific processing on Field 5.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling of field-specific processing.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable manchester encoding/decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling data whitening/de-whitening across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="2" size="1">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="FIELD_5_CRC_CONFIG" value="4640" default="0x00" feature="pro2" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across Field 5.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across Field 5.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding configuration of field-specific CRC calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the ALT CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_ALT_CRC" lsb="4" size="1" internal="1" feature="tx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling transmission of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SEND_CRC" lsb="5" size="1" feature="tx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling transmission of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Transmit CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="6" size="2">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_LENGTH_12_8" value="4641" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit RX Field 1 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_RX_FIELD_1_LENGTH_XX properties specify the length of RX Field 1 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_RX_FIELD_1_LENGTH_7_0</REFERENCE> property.
      </DESCRIPTION>
      <DESCRIPTION>Partitioning of the Payload into separate fields is provided to support variable length packets, and to allow different forms of data processing (e.g., Manchester encoding, data whitening, etc) across different fields.</DESCRIPTION>
      <DESCRIPTION>These properties are not applicable in TX mode.</DESCRIPTION>
      <DESCRIPTION>These properties are applicable in RX mode only under the following conditions:</DESCRIPTION>
      <DESCRIPTION>
        RX Packet Handling is enabled by clearing <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_RX_DISABLE, and
      </DESCRIPTION>
      <DESCRIPTION>The START_RX command is sent with the parameter RX_LEN=0, and</DESCRIPTION>
      <DESCRIPTION>
        <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT is set.  If the PH_FIELD_SPLIT bit is cleared, the lengths of the various fields in RX mode are determined by the PKT_FIELD_LENGTH_XX properties (shared between TX and RX modes).
      </DESCRIPTION>
      <DESCRIPTION>A value of zero in this property means that the field is not used. During RX mode, data will be stored in the RX FIFO until again encountering the first field whose length has been set to zero.  It is possible (although not common) to set the length of Field 1 = 0 bytes, as this would indicate transmission/reception of a packet with no Payload data at all.</DESCRIPTION>
      <DESCRIPTION>RX Field 1 cannot be configured as a variable length field, as there is no preceding field that may contain the variable length byte(s).</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIELD_1_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_LENGTH_7_0" value="4642" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit RX Field 1 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit RX Field 1 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding RX Field 1 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_CONFIG" value="4643" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for RX Field 1.</SUMMARY>
      <DESCRIPTION>Partitioning of the Payload into separate fields is provided to support features such as variable length packets and field-specific data processing (e.g., Manchester encoding, data whitening, etc).  This property provides configuration bits for field-specific processing on RX Field 1.</DESCRIPTION>
      <DESCRIPTION>This property is not applicable in TX mode.</DESCRIPTION>
      <DESCRIPTION>This property is applicable in RX mode only under the following conditions:</DESCRIPTION>
      <DESCRIPTION>
        RX Packet Handling is enabled by clearing <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_RX_DISABLE, and
      </DESCRIPTION>
      <DESCRIPTION>
        <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT is set.  If the PH_FIELD_SPLIT bit is cleared, the general packet configuration bits for the various fields in RX mode are determined by the PKT_FIELD_X_CONFIG properties (shared between TX and RX modes).
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Manchester encoding operates by replacing each bit with a two-chip pattern (e.g., each '0' bit with a '10' pattern and each '1' bit with a '01' bit pattern, or vice versa).  The desired encoding polarity is selected by <REFERENCE>PKT_CONFIG1</REFERENCE>:MANCH_POL.
          </DESCRIPTION>
          <DESCRIPTION>Enabling Manchester encoding in one or more fields does not affect the over-the-air data rate; each bit/chip within the entire packet is transmitted at the same data rate (specified by the MODEM_DATA_RATE_X properties).  Manchester encoding simply affects the number of bits/chips that are sent (e.g., by replacing one bit with two chips).</DESCRIPTION>
          <DESCRIPTION>In RX mode, the Manchester decoding function is performed only on bits stored in the RX FIFO; received data bits observed in real-time (on a GPIO pin) are output prior to decoding.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>The data whitening/de-whitening function is only available when automatic Packet Handling is enabled (e.g., when using the TX FIFO as the modulation source in TX mode, or when the PH_RX_DISABLE bit in the PKT_CONFIG1 property is cleared in RX mode).</DESCRIPTION>
          <DESCRIPTION>In RX mode, the data de-whitening function is performed only on bits stored in the RX FIFO; received data bits observed in real-time (on a GPIO pin) are output prior to de-whitening.</DESCRIPTION>
          <DESCRIPTION>Enabling data whitening does not affect the over-the-air data rate.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="PN_START" lsb="2" size="1">
          <DESCRIPTION>The chip contains a linear feedback shift register (LFSR) for the purpose of generating a pseudo-random number (PN).  Data whitening/de-whitening may be obtained by XOR-ing the output from the resulting PN sequence with the data bits of specified fields.</DESCRIPTION>
          <DESCRIPTION>This bit controls whether the PN engine is freshly loaded with its seed value (specified in PKT_WHT_SEED_XX) at the start of this field, or whether the PN engine continues calculation from its last state (i.e., from the previous packet).  Note:  the seed value for the PN engine may only be loaded at the start of Field 1; it is not possible to re-load the seed value at any other place in the packet.</DESCRIPTION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Continue PN generation using last state from previous packet.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Load PN engine with the seed value at the start of Field 1.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            The chip supports field-specific configuration of (G)FSK modulation modes, i.e., 2(G)FSK across certain fields and 4(G)FSK across other fields.  In such a case, the Modem must be configured for 4(G)FSK operation across the entire packet (by setting the <REFERENCE>MODEM_MOD_TYPE</REFERENCE> property), and the Packet Handler is then configured on a field-by-field basis to process the data stream from the FIFO as bit pairs (for 4(G)FSK) or single bits (for 2(G)FSK).
          </DESCRIPTION>
          <DESCRIPTION>When 4(G)FSK is enabled across a field, the PH pulls two bits from the FIFO and sends them to the TX Modulator to be transmitted as one-of-four deviation levels.</DESCRIPTION>
          <DESCRIPTION>
            When 4(G)FSK is disabled across a field, the PH pulls one bit from the FIFO and replaces it with the appropriate two bits that map to the outer two deviation levels.  Although the TX Modulator remains configured for four levels of deviation (by the <REFERENCE>MODEM_MOD_TYPE</REFERENCE> property), using only the outer two deviation levels effectively results in 2(G)FSK modulation across that field.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_1_CRC_CONFIG" value="4644" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across RX Field 1.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across RX Field 1.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>This bit enables ALT CRC checksum calculation over this field.  Note:  enabling ALT CRC calculation across a field does not automatically result in transmission/checking of the ALT CRC checksum at the end of the field.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>This bit enables CRC checksum calculation over this field.  Note:  enabling CRC calculation across a field does not automatically result in transmission/checking of the CRC checksum at the end of the field.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>This bit determines whether the accumulated ALT CRC checksum will be checked at the end of this field.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>This determines whether the accumulated CRC checksum will be checked at the end of this field.</DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="ALT_CRC_START" lsb="6" size="1" internal="1">
          <DESCRIPTION>
            The chip contains a 16-bit CRC engine that may be configured for a variety of polynomials and seed values (refer to the PKT_CRC_CONFIG property).  This bit controls whether the CRC engine is freshly loaded with its seed value (<REFERENCE>PKT_CRC_CONFIG</REFERENCE>:CRC_SEED) at the start of this field, or whether the CRC engine continues calculation from its last state (i.e., from the previous packet).  Note:  the seed value for the ALT CRC engine may only be loaded at the start of Field 1.  It is not possible to re-load the seed value at any other place in the packet.
          </DESCRIPTION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Load 16-bit CRC engine with seed value at the start of this field using CRC_SEED.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_START" lsb="7" size="1">
          <DESCRIPTION>
            The chip contains a 32-bit CRC engine that may be configured for a variety of polynomials and seed values (refer to the PKT_CRC_CONFIG property).  This bit controls whether the CRC engine is freshly loaded with its seed value (<REFERENCE>PKT_CRC_CONFIG</REFERENCE>:CRC_SEED) at the start of this field, or whether the CRC engine continues calculation from its last state (i.e., from the previous packet).  Note:  the seed value for the CRC engine may only be loaded at the start of Field 1.  It is not possible to re-load the seed value at any other place in the packet.
          </DESCRIPTION>
          <DESCRIPTION>
            This bit is only applicable if in RX mode and <REFERENCE>PKT_CONFIG1</REFERENCE>:PH_FIELD_SPLIT is set. If the PH_FIELD_SPLIT bit is cleared, this bit is ignored and the CRC_START functionality is obtained from the appropriate PKT_FIELD_X_CRC_CONFIG property.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Continue CRC calculation using the last state from the previous packet.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>
              Load the CRC engine with the seed value at the start of this field using <REFERENCE>PKT_CRC_CONFIG</REFERENCE>:CRC_SEED.
            </DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_LENGTH_12_8" value="4645" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit RX Field 2 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_RX_FIELD_2_LENGTH_XX properties specify the length of RX Field 2 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_RX_FIELD_2_LENGTH_7_0 property</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>
        RX Field 2 may be configured as a variable length field by setting the appropriate value of DST_FIELD (in the <REFERENCE>PKT_LEN</REFERENCE> property); however, it is also necessary that a previous field contain the variable length byte(s).  If configured as a variable length field, this property must be set with a value that represents the maximum expected length of the field.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding field length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIELD_2_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_LENGTH_7_0" value="4646" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit RX Field 2 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit RX Field 2 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_2_LENGTH_12_8</REFERENCE> for more details regarding RX Field 2 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_CONFIG" value="4647" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for RX Field 2.</SUMMARY>
      <DESCRIPTION>This property provides configuration bits for field-specific processing on RX Field 2.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling of field-specific processing.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling data whitening/de-whitening across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="2" size="1">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_2_CRC_CONFIG" value="4648" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across RX Field 2.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across RX Field 2.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding configuration of field-specific CRC calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the ALT CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="6" size="2">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_LENGTH_12_8" value="4649" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit RX Field 3 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_RX_FIELD_3_LENGTH_XX properties specify the length of RX Field 3 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_RX_FIELD_3_LENGTH_7_0 property</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>
        RX Field 3 may be configured as a variable length field by setting the appropriate value of DST_FIELD (in the <REFERENCE>PKT_LEN</REFERENCE> property); however, it is also necessary that a previous field contain the variable length byte(s).  If configured as a variable length field, this property must be set with a value that represents the maximum expected length of the field.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding field length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIELD_3_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_LENGTH_7_0" value="4650" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit RX Field 3 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit RX Field 3 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_3_LENGTH_12_8</REFERENCE> for more details regarding RX Field 3 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_CONFIG" value="4651" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for RX Field 3.</SUMMARY>
      <DESCRIPTION>This property provides configuration bits for field-specific processing on RX Field 3.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling of field-specific processing.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling data whitening/de-whitening across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="2" size="1">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_3_CRC_CONFIG" value="4652" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across RX Field 3.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across RX Field 3.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding configuration of field-specific CRC calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the ALT CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="6" size="2">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_LENGTH_12_8" value="4653" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit RX Field 4 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_RX_FIELD_4_LENGTH_XX properties specify the length of RX Field 4 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_RX_FIELD_4_LENGTH_7_0 property</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>
        RX Field 4 may be configured as a variable length field by setting the appropriate value of DST_FIELD (in the <REFERENCE>PKT_LEN</REFERENCE> property); however, it is also necessary that a previous field contain the variable length byte(s).  If configured as a variable length field, this property must be set with a value that represents the maximum expected length of the field.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding field length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIELD_4_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_LENGTH_7_0" value="4654" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit RX Field 4 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit RX Field 4 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_4_LENGTH_12_8</REFERENCE> for more details regarding RX Field 4 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_CONFIG" value="4655" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for RX Field 4.</SUMMARY>
      <DESCRIPTION>This property provides configuration bits for field-specific processing on RX Field 4.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling of field-specific processing.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling data whitening/de-whitening across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="2" size="1">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_4_CRC_CONFIG" value="4656" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across RX Field 4.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across RX Field 4.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding configuration of field-specific CRC calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the ALT CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="6" size="2">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_LENGTH_12_8" value="4657" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 1 of unsigned 13-bit RX Field 5 length value.</SUMMARY>
      <DESCRIPTION>
        The PKT_RX_FIELD_5_LENGTH_XX properties specify the length of RX Field 5 in bytes.  The field length is an unsigned 13-bit value; this property is Byte 1 of the length value, and is used along with the <REFERENCE>PKT_RX_FIELD_5_LENGTH_7_0 property</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>
        RX Field 5 may be configured as a variable length field by setting the appropriate value of DST_FIELD (in the <REFERENCE>PKT_LEN</REFERENCE> property); however, it is also necessary that a previous field contain the variable length byte(s).  If configured as a variable length field, this property must be set with a value that represents the maximum expected length of the field.
      </DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_LENGTH_12_8</REFERENCE> for more details regarding field length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_FIELD_5_LENGTH_12_8" lsb="0" size="5">
          <DESCRIPTION>Bit 8 to 12 of the field length.</DESCRIPTION>
          <RANGE min="0" max="0x1F" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_LENGTH_7_0" value="4658" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Byte 0 of unsigned 13-bit RX Field 5 length value.</SUMMARY>
      <DESCRIPTION>Byte 0 of the unsigned 13-bit RX Field 5 length value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_5_LENGTH_12_8</REFERENCE> for more details regarding RX Field 5 length configuration.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="0xff" />
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_CONFIG" value="4659" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>General data processing and packet configuration bits for RX Field 5.</SUMMARY>
      <DESCRIPTION>This property provides configuration bits for field-specific processing on RX Field 5.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling of field-specific processing.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MANCH" lsb="0" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable Manchester decoding on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="WHITEN" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling data whitening/de-whitening across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable data whitening/de-whitening on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="2" size="1">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
        <FIELD name="4FSK" lsb="4" size="1" feature="4fsk">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CONFIG</REFERENCE> for more details regarding enabling/disabling Manchester encoding/decoding across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable 4(G)FSK on this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="PKT" name="RX_FIELD_5_CRC_CONFIG" value="4660" default="0x00" feature="rx" dev="1" wip="0">
      <SUMMARY>Configuration of CRC control bits across RX Field 5.</SUMMARY>
      <DESCRIPTION>This property is use to control the calculation, transmission, and checking of CRC across RX Field 5.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding configuration of field-specific CRC calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="ALT_CRC_ENABLE" lsb="0" size="1" internal="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the ALT CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable ALT CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CRC_ENABLE" lsb="1" size="1">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling calculation of the CRC checksum across specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Disable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Enable CRC calculation over this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_ALT_CRC" lsb="2" size="1" internal="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the ALT CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check ALT CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CHECK_CRC" lsb="3" size="1" feature="rx">
          <DESCRIPTION>
            Please refer to the text description for <REFERENCE>PKT_RX_FIELD_1_CRC_CONFIG</REFERENCE> for more details regarding enabling/disabling checking of the CRC checksum at the end of specific fields.
          </DESCRIPTION>
          <ENUMERATION value="0x0">
            <DESCRIPTION>Do not check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="0x1">
            <DESCRIPTION>Check CRC at the end of this field.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="RESERVED" lsb="6" size="2">
          <DESCRIPTION>Reserved.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="INTE" value="16384" default="0x3C" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Frac-N PLL Synthesizer integer divide number.</SUMMARY>
      <DESCRIPTION>
        The total divide ratio for the Fractional-N PLL Synthesizer consists of an integer portion and a fractional portion.  This property defines the integer divide number; the fractional divide value is specified in properties  <REFERENCE>FREQ_CONTROL_FRAC_2</REFERENCE>, <REFERENCE>FREQ_CONTROL_FRAC_1</REFERENCE>, and <REFERENCE>FREQ_CONTROL_FRAC_0</REFERENCE>.
      </DESCRIPTION>
      <DESCRIPTION>The formula for calculating RF channel frequency as a function of integer and fractional divide values is as follows:</DESCRIPTION>
      <LATEX equation="RF\_{Channel\_{Hz}}=\left(fc\_{inte}+\frac{fc_{frac}}{2^{19}}\right)*\left(\frac{2*freq\_xo}{outdiv}\right)" dpi="150">
      </LATEX>
      <DESCRIPTION>
        The output divider value OUTDIV is configured as a function of the desired frequency band, and is specified in property <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:BAND.
      </DESCRIPTION>
      <DESCRIPTION>The entire FC_FRAC word is 20-bits in length, but the MSB should always be set to 1, and thus the term FC_FRAC/2^19 will always be between 1 and 2 in value.  As a result, the integer term FC_INTE should be reduced by 1.  Example:  a total desired divide ratio of N = 60.135 should be implemented as FC_INTE = 59, FC_FRAC/2^19 = 1.135.</DESCRIPTION>
      <DESCRIPTION>Modifying this property will have no effect until the chip exits from TX or RX state, and then re-enters the state.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="inte" lsb="0" size="7">
          <RANGE min="0" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_2" value="16385" default="0x08" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 2 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>FREQ_CONTROL_INTE</REFERENCE> for more details regarding frequency calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_2" lsb="0" size="3">
          <RANGE min="0" max="7" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_1" value="16386" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 1 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>FREQ_CONTROL_INTE</REFERENCE> for more details regarding frequency calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_1" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="FRAC_0" value="16387" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 0 of Frac-N PLL fraction number.</SUMMARY>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>FREQ_CONTROL_INTE</REFERENCE> for more details regarding frequency calculation.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="frac_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="CHANNEL_STEP_SIZE_1" value="16388" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 1 of the EZ Frequency Programming channel step size.</SUMMARY>
      <DESCRIPTION>The EZ Frequency Programming method allows the user to control the frequency by selecting a desired channel number, given a base frequency and a channel step size.  This property defines Byte 1 of the unsigned 16-bit channel step size value.</DESCRIPTION>
      <DESCRIPTION>
        The units of the <REFERENCE>FREQ_CONTROL_CHANNEL_STEP_SIZE_1</REFERENCE>/0 property are in increments of the LSB tuning resolution of the PLL Synthesizer, and are therefore a function of the crystal reference frequency and output frequency band.  The formula for calculating the value of the FREQ_CONTROL_CHANNEL_STEP_SIZE property is given by the following equation:
      </DESCRIPTION>
      <LATEX equation="FREQ\_CTRL\_CHAN\_STEP\_SIZE=\frac{2^{19}*outdiv*Desired\_Stepsize\_Hz}{2*freq\_xo}" dpi="150">
      </LATEX>
      <DESCRIPTION>
        The base frequency is specified by the <REFERENCE>FREQ_CONTROL_INTE</REFERENCE> and <REFERENCE>FREQ_CONTROL_FRAC_2</REFERENCE>/1/0 properties.
      </DESCRIPTION>
      <DESCRIPTION>
        The channel number is specified by the CHANNEL parameter byte passed to the <REFERENCE>START_TX</REFERENCE> command.
      </DESCRIPTION>
      <DESCRIPTION>The commanded channel frequency is given by the formula:</DESCRIPTION>
      <LATEX equation="Center\_Freq=Base\_Freq+Channel\_Number*Desired\_Step\_Size\_Hz" dpi="150">
      </LATEX>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="channel_step_size_1" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="CHANNEL_STEP_SIZE_0" value="16389" default="0x00" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Byte 0 of channel step size.</SUMMARY>
      <DESCRIPTION>The EZ Frequency Programming method allows the user to control the frequency by selecting a desired channel number, given a base frequency and a channel step size.  This property defines Byte 0 of the unsigned 16-bit channel step size value.</DESCRIPTION>
      <DESCRIPTION>
        Please refer to the text description for <REFERENCE>FREQ_CONTROL_CHANNEL_STEP_SIZE_1</REFERENCE> for more details regarding the channel step size function.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="channel_step_size_0" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="W_SIZE" value="16390" default="0x20" feature="common" dev="1" wip="0" internal="0">
      <SUMMARY>Set window gating period (in number of crystal reference clock cycles) for counting VCO frequency during calibration.</SUMMARY>
      <DESCRIPTION>The chip performs a calibration of the VCO at each new commanded frequency.  This is accomplished by counting cycles of the VCO frequency and comparing to an expected target count value.</DESCRIPTION>
      <DESCRIPTION>The length of the window during which cycles of the VCO frequency are counted is specified by this property.  The units are in cycles of the crystal reference frequency (e.g., 30 MHz clock periods).</DESCRIPTION>
      <DESCRIPTION>This property does not need to change as a function of crystal reference frequency; the chip automatically calculates the target VCO count value as a function of crystal reference frequency and thus this property may remain constant.  Silicon Labs recommends setting this property always to 0x20.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="w_size" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="FREQ_CONTROL" name="VCOCNT_RX_ADJ" value="16391" default="0xFF" feature="rx" dev="1" wip="0" internal="0">
      <SUMMARY>Adjust target count for VCO calibration in RX mode.</SUMMARY>
      <DESCRIPTION>The chip performs a calibration of the VCO at each new commanded frequency.  This is accomplished by counting cycles of the VCO frequency and comparing to an expected target count value.  As the chip's default mode of operation uses a low-IF architecture with low-side Mixer injection, the RX LO must shift downwards in frequency during RX mode.  The expected target count value changes as a result of this shift in frequency.</DESCRIPTION>
      <DESCRIPTION>This field is a signed value that represents the amount by which the target count value must be adjusted in RX mode.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="vcocnt_rx_adj" lsb="0" size="8">
          <RANGE min="-128" max="127" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="CONTROL" value="20480" default="0x04" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>RX hop control.</SUMMARY>
      <DESCRIPTION>Sets RSSI timeout value and select RX hop condition.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RSSI_TIMEOUT" lsb="0" size="4">
          <DESCRIPTION>Sets the RSSI time out expressed in nibbles.</DESCRIPTION>
        </FIELD>
        <FIELD name="HOP_EN" lsb="4" size="3">
          <DESCRIPTION>RX hop condition.</DESCRIPTION>
          <ENUMERATION value="0" name="HOP_DISABLE">
            <DESCRIPTION>Hop disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="HOP_PM_TO">
            <DESCRIPTION>Hop if preamble timeout occurs.</DESCRIPTION>
            <DESCRIPTION>If no preamble detected after RX preamble timeout, then hop.  Otherwise a preamble is detected, stay on channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="HOP_RSSI_PM_TO">
            <DESCRIPTION>Hop if either RSSI timeout occurs or preamble timeout occurs.</DESCRIPTION>
            <DESCRIPTION>Either timeout condition forces hop, whichever occurs first.  Otherwise stay on channel.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="HOP_PM_SYNC_TO">
            <DESCRIPTION>Hop if preamble timeout or invalid sync word.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="HOP_RSSI_PM_SYNC_TO">
            <DESCRIPTION>Hop on RSSI timeout, preamble timeout or invalid sync word.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_SIZE" value="20481" default="0x01" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>Number of entries in the RX hop table.</SUMMARY>
      <DESCRIPTION>Number of entries in the RX hop table.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_HOP_TABLE_SIZE" lsb="0" size="7">
          <RANGE min="1" max="64" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_0" value="20482" default="0" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.1 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.1 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_1" value="20483" default="1" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.2 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.2 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_2" value="20484" default="2" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.3 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.3 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_3" value="20485" default="3" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.4 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.4 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_4" value="20486" default="4" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.5 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.5 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_5" value="20487" default="5" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.6 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.6 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_6" value="20488" default="6" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.7 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.7 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_7" value="20489" default="7" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.8 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.8 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_8" value="20490" default="8" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.9 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.9 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_9" value="20491" default="9" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.10 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.10 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_10" value="20492" default="10" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.11 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.11 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_11" value="20493" default="11" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.12 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.12 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_12" value="20494" default="12" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.13 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.13 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_13" value="20495" default="13" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.14 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.14 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_14" value="20496" default="14" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.15 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.15 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_15" value="20497" default="15" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.16 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.16 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_16" value="20498" default="16" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.17 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.17 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_17" value="20499" default="17" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.18 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.18 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_18" value="20500" default="18" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.19 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.19 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_19" value="20501" default="19" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.20 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.20 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_20" value="20502" default="20" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.21 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.21 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_21" value="20503" default="21" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.22 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.22 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_22" value="20504" default="22" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.23 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.23 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_23" value="20505" default="23" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.24 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.24 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_24" value="20506" default="24" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.25 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.25 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_25" value="20507" default="25" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.26 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.26 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_26" value="20508" default="26" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.27 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.27 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_27" value="20509" default="27" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.28 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.28 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_28" value="20510" default="28" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.29 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.29 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_29" value="20511" default="29" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.30 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.30 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_30" value="20512" default="30" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.31 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.31 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_31" value="20513" default="31" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.32 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.32 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_32" value="20514" default="32" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.33 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.33 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_33" value="20515" default="33" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.34 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.34 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_34" value="20516" default="34" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.35 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.35 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_35" value="20517" default="35" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.36 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.36 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_36" value="20518" default="36" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.37 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.37 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_37" value="20519" default="37" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.38 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.38 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_38" value="20520" default="38" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.39 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.39 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_39" value="20521" default="39" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.40 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.40 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_40" value="20522" default="40" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.41 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.41 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_41" value="20523" default="41" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.42 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.42 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_42" value="20524" default="42" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.43 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.43 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_43" value="20525" default="43" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.44 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.44 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_44" value="20526" default="44" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.45 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.45 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_45" value="20527" default="45" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.46 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.46 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_46" value="20528" default="46" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.47 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.47 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_47" value="20529" default="47" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.48 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.48 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_48" value="20530" default="48" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.49 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.49 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_49" value="20531" default="49" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.50 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.50 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_50" value="20532" default="50" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.51 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.51 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_51" value="20533" default="51" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.52 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.52 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_52" value="20534" default="52" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.53 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.53 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_53" value="20535" default="53" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.54 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.54 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_54" value="20536" default="54" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.55 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.55 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_55" value="20537" default="55" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.56 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.56 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_56" value="20538" default="56" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.57 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.57 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_57" value="20539" default="57" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.58 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.58 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_58" value="20540" default="58" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.59 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.59 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_59" value="20541" default="59" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.60 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.60 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_60" value="20542" default="60" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.61 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.61 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_61" value="20543" default="61" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.62 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.62 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_62" value="20544" default="62" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.63 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.63 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="RX_HOP" name="TABLE_ENTRY_63" value="20545" default="63" feature="rx_hop_grp" dev="1" wip="0" internal="0">
      <SUMMARY>No.64 entry in RX hopping table.</SUMMARY>
      <DESCRIPTION>No.64 entry in RX hopping table. Skip this entry if 0xFF.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CHANNEL_NUM" lsb="0" size="8">
          <RANGE min="0" max="255" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPI_ACTIVE_SEQ_DELAY_15_8" value="61952" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Upper byte of sequencer delay from SPI active to ready.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPI_ACTIVE_SEQ_DELAY_7_0" value="61953" default="0xF4" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Lower byte of sequencer delay from SPI active to TX.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="TX_TUNE_SEQ_DELAY" value="61954" default="0x4B" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Sequencer delay from TX tune to TX.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="READY_SEQ_DELAY" value="61955" default="0x96" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Sequencer delay from ready to TX.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RX_SEQ_DELAY_15_8" value="61956" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Upper byte of Sequencer delay from rx to tx.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RX_SEQ_DELAY_7_0" value="61957" default="0x96" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Lower byte of Sequencer delay from RX to TX.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <APIUPDATED>revB1B</APIUPDATED>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="CAL_ENABLE_VTR" value="61958" default="0x61" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VTR calibration enables.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CAL_EN_VTR_XO" lsb="0" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform VTR XO calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_VTR_RX" lsb="1" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform VTR RX calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_VTR_TX" lsb="2" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform VTR TX calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_VTR_ADC" lsb="3" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform VTR ADC calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_VTR_SY" lsb="4" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform VTR SY calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_VTR_VCO_V3P3" lsb="5" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform VTR VCO v3p3 calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_VTR_VCO_V1P5" lsb="6" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform VTR VCO v1p5 calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_VTR_VCO_LADR" lsb="7" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform VTR VCO ladr calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="CAL_ENABLE" value="61959" default="0x45" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Calibration enables.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CAL_EN_BOOT_OSC" lsb="0" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform boot osc calibration on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_RC_CAL_32K" lsb="1" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform rc32k calibration on every warm boot.  Always performed at cold boot and on CAL timer expiration.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_PGA_OFS" lsb="2" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform pga ofs calibration on every entry into RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_RC_CAL_FOR_ADC" lsb="3" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform rc32k calibration for adc on every warm boot.  Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_RFPKD_FULL" lsb="4" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform full RF peak detector calibration on every warm boot.  Full Always performed at cold boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_RFPKD_RECAL_ON_RX" lsb="5" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform fast RF peak detector calibration on every entry into RX.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_RFPKD_RECAL_ON_WARM" lsb="6" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform RF peak detector calibration on every warm boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="CAL_EN_SPARE7" lsb="7" size="1">
          <ENUMERATION value="0x1">
            <DESCRIPTION>Perform tbd calibration on every warm boot.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_V3P3_TARGET_VOLTAGE" value="61960" default="0xFB" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO v3.3 target voltage.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_V1P5_TARGET_VOLTAGE" value="61961" default="0x08" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO v1.5 target voltage.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VTR_VCO_LADR_TARGET_VOLTAGE" value="61962" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>VCO Ladder target voltage.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL_ADC_TARGET_15_8" value="61963" default="0x7D" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32K ADC calibration target.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <DESCRIPTION>Upper byte of RC calibration ADC Target in Hz.</DESCRIPTION>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL_ADC_TARGET_7_0" value="61964" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32K ADC calibration target.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <DESCRIPTION>Lower byte of RC calibration ADC Target in Hz.</DESCRIPTION>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL" value="61965" default="0x4" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <FIELD name="FINE_CAL_CYCLES" lsb="0" size="8">
        <DESCRIPTION>Number of RC32k cycles to measure RC frequency over. (nc)</DESCRIPTION>
      </FIELD>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL1" value="61966" default="0x44" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="COARSE_CAL_CYCLES" lsb="0" size="4">
          <DESCRIPTION>Number of RC32k cycles to measure RC frequency over. (nc)</DESCRIPTION>
        </FIELD>
        <FIELD name="COARSE_ADC_CAL_CYCLES" lsb="4" size="4">
          <DESCRIPTION>Number of RC32k cycles to measure RC32k frequency over for ADC calibration. (nc)</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="RC_CAL2" value="61967" default="0x42" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>RC32k calibration parameters.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="HIGH_CURR_CHOP" lsb="6" size="2">
          <DESCRIPTION>Controls chop and high current mode operation. (h)</DESCRIPTION>
          <ENUMERATION value="0" name="CHOP_DIS_HI_DIS">
            <DESCRIPTION>Chop disabled, High current mode disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="CHOP_EN_HI_DIS">
            <DESCRIPTION>Chop enabled, High current mode disabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CHOP_DIS_HI_EN">
            <DESCRIPTION>Chop disabled, High current mode enabled.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="CHOP_EN_HI_EN">
            <DESCRIPTION>Chop enabled, High current mode enabled.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="SETTLE_CYCLES" lsb="0" size="6">
          <DESCRIPTION>Number of RC32k cycles to wait for clock to settle after changing frequency and before checking frequency. (ns)</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="BOOT_OSC_CAL" value="61968" default="0x09" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Boot osc calibration parameters.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="XO_CAPCODE_RESTORE_DELAY" lsb="3" size="5">
          <DESCRIPTION>Delay before restoring XO_CAPCODE.</DESCRIPTION>
        </FIELD>
        <FIELD name="BOOT_OSC_ADJ" lsb="0" size="3">
          <DESCRIPTION>Adjustment value for Boot osc.  This value is subtracted from BOSC aconfig register after boot osc calibration.  There is an additional adjustment factor applied based on crystal frequency.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="BOOT_OSC_CAL1" value="61969" default="0x02" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Boot osc calibration parameters.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CRYSTAL_OK_DELAY" lsb="0" size="8">
          <DESCRIPTION>Delay after restoring capcode, before polling crystal ok.</DESCRIPTION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_TEMP_SLOPE" value="61970" default="0x63" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_TEMP_INTERCEPT" value="61971" default="0x4A" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SY_GAIN_ERROR" value="61972" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>AuxADC gain adjustment, 8-bit signed.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="AUXADC_SY_OFFSET_ERROR" value="61973" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>AuxADC offset adjustment, 8-bit signed.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="ADC_VOLTAGE_TRIM" value="61974" default="0x0F" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_RXFE_LPF" value="61975" default="0x35" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_ADC_LPF" value="61976" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_LOAD5_LPF" value="61977" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_LPF" value="61978" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>CLKGEN ACONFIG register value.</SUMMARY>
      <DESCRIPTION>
        This is the value that will be used for the CLKGEN ACONFIG register for RX if in LPF and <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:BAND less than FVCO/16.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_COM_LPF" value="61979" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_TX_LPF" value="61980" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>CLKGEN ACONFIG register value.</SUMMARY>
      <DESCRIPTION>
        This is the value that will be used for the CLKGEN ACONFIG register for TX if in LPF and <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:BAND less than FVCO/16.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_TX_LPF" value="61981" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_LOW_BAND" value="61982" default="0x10" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>CLKGEN ACONFIG register value.</SUMMARY>
      <DESCRIPTION>
        This is the value that will be used for the CLKGEN ACONFIG register for RX and TX if <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:BAND >= FVCO/16 regardless of LPF/HPF.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_RXFE_HPF" value="61983" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_ADC_HPF" value="61984" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_LOAD5_HPF" value="61985" default="0x01" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_COM_HPF" value="61986" default="0x30" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>CLKGEN ACONFIG register value.</SUMMARY>
      <DESCRIPTION>
        This is the value that will be used for the CLKGEN ACONFIG register for RX if in HPF and <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:BAND less than FVCO/16.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_COM_HPF" value="61987" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_CLKGEN_TX_HPF" value="61988" default="0x20" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>CLKGEN ACONFIG register value.</SUMMARY>
      <DESCRIPTION>
        This is the value that will be used for the CLKGEN ACONFIG register for TX if in HPF and <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:BAND less than FVCO/16.
      </DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REG_FBDIV_TX_HPF" value="61989" default="0x40" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="-128" max="127" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="PH_WATERMARK" value="61990" default="0x62" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="RX_WATERMARK" lsb="4" size="4">
          <DESCRIPTION>Selects the high watermark for the packet handler RX fifo.  The internal firmware will get interrupted when this is crossed.</DESCRIPTION>
          <RANGE min="1" max="8" />
        </FIELD>
        <FIELD name="TX_WATERMARK" lsb="0" size="4">
          <DESCRIPTION>Selects the low watermark for the packet handler TX fifo.  The internal firmware will get interrupted when this is crossed.</DESCRIPTION>
          <RANGE min="1" max="8" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="PROC_MON_RCAL" value="61991" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="REF_CAL_BANDGAP" value="61992" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>REF_CAL bandgap calibration.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="VCO_ADJ" value="61993" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY></SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="V1P5_TX_OFFSET" lsb="0" size="4">
          <DESCRIPTION>
            This value is added to the calibrated value for the V1P5 regulator while in TX state  if <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:BAND == FVCO/4 || <REFERENCE>MODEM_CLKGEN_BAND</REFERENCE>:BAND == FVCO/8.
          </DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="MISC_DELAY" value="61994" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>Miscellaneous delay values.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
      <BYTE>
        <FIELD name="DEMOD_RST" lsb="0" size="4">
          <DESCRIPTION>Number of us to delay after turning on the clock to the demod before resetting the demod.</DESCRIPTION>
          <RANGE min="0" max="15" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPARE0" value="61995" default="0x02" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>For use in patches.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="255" />
      <BYTE>
        <FIELD name="RSSI_FIRST_LATCH_ADJ" lsb="0" size="3">
          <DESCRIPTION>Adjust the Tb to wait before the first RSSI latch.  Max value is 3 for RSSI updated every bit and 6 for RSSI 4 bit averaged.</DESCRIPTION>
          <RANGE min="0" max="4" />
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="OTP_VARS" name="SPARE1" value="61996" default="0x00" feature="common" internal="1" dev="1" wip="0">
      <SUMMARY>For use in patches.</SUMMARY>
      <TARGETRELEASE></TARGETRELEASE>
      <RANGE min="0" max="255" />
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="MODULATION" value="9216" default="0x02" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>Configure modulation using the EZ config feature.</SUMMARY>
      <DESCRIPTION>This property selects a modulation type, modulation source and tx direct mode control if supported.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="MOD_TYPE" lsb="0" size="2">
          <ENUMERATION value="0" name="CW" feature="tx">
            <DESCRIPTION>CW.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="OOK">
            <DESCRIPTION>OOK.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="FSK">
            <DESCRIPTION>FSK.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GFSK">
            <DESCRIPTION>GFSK.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="MOD_SOURCE" lsb="3" size="2">
          <ENUMERATION value="0" name="PACKET">
            <DESCRIPTION>Modulation source is packet handler fifo.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="DIRECT">
            <DESCRIPTION>Modulation source is direct mode pin.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="PSEUDO">
            <DESCRIPTION>Modulation source is pseudo-random generator.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_GPIO" lsb="5" size="2" feature="tx">
          <DESCRIPTION>
            Selects which GPIO will be used as the TX data source if MOD_SOURCE = DIRECT.  The gpio selected here must be configured (using <REFERENCE>GPIO_PIN_CFG</REFERENCE>) as a CMOS input.
          </DESCRIPTION>
          <ENUMERATION value="0" name="GPIO0">
            <DESCRIPTION>TX direct mode uses GPIO0 as data source.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="GPIO1">
            <DESCRIPTION>TX direct mode uses GPIO1 as data source.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="GPIO2">
            <DESCRIPTION>TX direct mode uses GPIO2 as data source.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="GPIO3">
            <DESCRIPTION>TX direct mode uses GPIO3 as data source.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
        <FIELD name="TX_DIRECT_MODE_TYPE" lsb="7" size="1" feature="tx">
          <ENUMERATION value="0" name="SYNC">
            <DESCRIPTION>Direct mode operates in synchronous mode, applies to TX only.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ASYNC">
            <DESCRIPTION>Direct mode operates in asynchronous mode, applies to TX only.  GFSK is not supported.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="CONFIG_SELECT" value="9217" default="0x00" internal="1" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>REMOVED as of fw_3_0_9 Used to be: Select the index from EZ config table.</SUMMARY>
      <DESCRIPTION>This property selects the configuration index from a predefined EZConfig table.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CONFIG_INDEX" lsb="0" size="8">
          <ENUMERATION value="0" name="NONE">
            <DESCRIPTION>Select none</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="CONFIG_INDEX_1">
            <DESCRIPTION>001_Fc283-350MHz_2GFSK_loPPM_2.4kbps_BW76kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="2" name="CONFIG_INDEX_2">
            <DESCRIPTION>002_Fc283-350MHz_2GFSK_loPPM_4.8kbps_BW76kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="3" name="CONFIG_INDEX_3">
            <DESCRIPTION>003_Fc283-350MHz_2GFSK_loPPM_5.0kbps_BW76kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="4" name="CONFIG_INDEX_4">
            <DESCRIPTION>004_Fc283-350MHz_2GFSK_loPPM_9.6kbps_BW76kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="5" name="CONFIG_INDEX_5">
            <DESCRIPTION>005_Fc283-350MHz_2GFSK_loPPM_10.0kbps_BW76kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="6" name="CONFIG_INDEX_6">
            <DESCRIPTION>006_Fc283-350MHz_2GFSK_loPPM_15.0kbps_BW76kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="7" name="CONFIG_INDEX_7">
            <DESCRIPTION>007_Fc283-350MHz_2GFSK_loPPM_19.2kbps_BW76kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="8" name="CONFIG_INDEX_8">
            <DESCRIPTION>008_Fc283-350MHz_2GFSK_loPPM_20.0kbps_BW76kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="9" name="CONFIG_INDEX_9">
            <DESCRIPTION>009_Fc283-350MHz_2GFSK_loPPM_38.4kbps_BW92kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="10" name="CONFIG_INDEX_10">
            <DESCRIPTION>010_Fc283-350MHz_2GFSK_loPPM_40.0kbps_BW92kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="11" name="CONFIG_INDEX_11">
            <DESCRIPTION>011_Fc283-350MHz_2GFSK_loPPM_50.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="12" name="CONFIG_INDEX_12">
            <DESCRIPTION>012_Fc283-350MHz_2GFSK_loPPM_96.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="13" name="CONFIG_INDEX_13">
            <DESCRIPTION>013_Fc283-350MHz_2GFSK_loPPM_100.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="14" name="CONFIG_INDEX_14">
            <DESCRIPTION>014_Fc283-350MHz_2GFSK_loPPM_128.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="15" name="CONFIG_INDEX_15">
            <DESCRIPTION>015_Fc283-350MHz_2GFSK_hiPPM_2.4kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="16" name="CONFIG_INDEX_16">
            <DESCRIPTION>016_Fc283-350MHz_2GFSK_hiPPM_4.8kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="17" name="CONFIG_INDEX_17">
            <DESCRIPTION>017_Fc283-350MHz_2GFSK_hiPPM_5.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="18" name="CONFIG_INDEX_18">
            <DESCRIPTION>018_Fc283-350MHz_2GFSK_hiPPM_9.6kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="19" name="CONFIG_INDEX_19">
            <DESCRIPTION>019_Fc283-350MHz_2GFSK_hiPPM_10.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="20" name="CONFIG_INDEX_20">
            <DESCRIPTION>020_Fc283-350MHz_2GFSK_hiPPM_15.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="21" name="CONFIG_INDEX_21">
            <DESCRIPTION>021_Fc283-350MHz_2GFSK_hiPPM_19.2kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="22" name="CONFIG_INDEX_22">
            <DESCRIPTION>022_Fc283-350MHz_2GFSK_hiPPM_20.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="23" name="CONFIG_INDEX_23">
            <DESCRIPTION>023_Fc283-350MHz_2GFSK_hiPPM_38.4kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="24" name="CONFIG_INDEX_24">
            <DESCRIPTION>024_Fc283-350MHz_2GFSK_hiPPM_40.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="25" name="CONFIG_INDEX_25">
            <DESCRIPTION>025_Fc283-350MHz_2GFSK_hiPPM_50.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="26" name="CONFIG_INDEX_26">
            <DESCRIPTION>026_Fc283-350MHz_2GFSK_hiPPM_96.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="27" name="CONFIG_INDEX_27">
            <DESCRIPTION>027_Fc283-350MHz_2GFSK_hiPPM_100.0kbps_BW228kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="28" name="CONFIG_INDEX_28">
            <DESCRIPTION>028_Fc283-350MHz_2GFSK_hiPPM_128.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="29" name="CONFIG_INDEX_29">
            <DESCRIPTION>029_Fc283-350MHz_OOK_0.5kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="30" name="CONFIG_INDEX_30">
            <DESCRIPTION>030_Fc283-350MHz_OOK_1.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="31" name="CONFIG_INDEX_31">
            <DESCRIPTION>031_Fc283-350MHz_OOK_2.4kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="32" name="CONFIG_INDEX_32">
            <DESCRIPTION>032_Fc283-350MHz_OOK_4.8kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="33" name="CONFIG_INDEX_33">
            <DESCRIPTION>033_Fc283-350MHz_OOK_5.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="34" name="CONFIG_INDEX_34">
            <DESCRIPTION>034_Fc283-350MHz_OOK_9.6kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="35" name="CONFIG_INDEX_35">
            <DESCRIPTION>035_Fc283-350MHz_OOK_10.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="36" name="CONFIG_INDEX_36">
            <DESCRIPTION>036_Fc283-350MHz_OOK_15.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="37" name="CONFIG_INDEX_37">
            <DESCRIPTION>037_Fc283-350MHz_OOK_19.2kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="38" name="CONFIG_INDEX_38">
            <DESCRIPTION>038_Fc283-350MHz_OOK_20.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="39" name="CONFIG_INDEX_39">
            <DESCRIPTION>039_Fc283-350MHz_OOK_38.4kbps_BW123kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="40" name="CONFIG_INDEX_40">
            <DESCRIPTION>040_Fc283-350MHz_OOK_40.0kbps_BW123kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="41" name="CONFIG_INDEX_41">
            <DESCRIPTION>041_Fc425-525MHz_2GFSK_loPPM_2.4kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="42" name="CONFIG_INDEX_42">
            <DESCRIPTION>042_Fc425-525MHz_2GFSK_loPPM_4.8kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="43" name="CONFIG_INDEX_43">
            <DESCRIPTION>043_Fc425-525MHz_2GFSK_loPPM_5.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="44" name="CONFIG_INDEX_44">
            <DESCRIPTION>044_Fc425-525MHz_2GFSK_loPPM_9.6kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="45" name="CONFIG_INDEX_45">
            <DESCRIPTION>045_Fc425-525MHz_2GFSK_loPPM_10.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="46" name="CONFIG_INDEX_46">
            <DESCRIPTION>046_Fc425-525MHz_2GFSK_loPPM_15.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="47" name="CONFIG_INDEX_47">
            <DESCRIPTION>047_Fc425-525MHz_2GFSK_loPPM_19.2kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="48" name="CONFIG_INDEX_48">
            <DESCRIPTION>048_Fc425-525MHz_2GFSK_loPPM_20.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="49" name="CONFIG_INDEX_49">
            <DESCRIPTION>049_Fc425-525MHz_2GFSK_loPPM_38.4kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="50" name="CONFIG_INDEX_50">
            <DESCRIPTION>050_Fc425-525MHz_2GFSK_loPPM_40.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="51" name="CONFIG_INDEX_51">
            <DESCRIPTION>051_Fc425-525MHz_2GFSK_loPPM_50.0kbps_BW114kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="52" name="CONFIG_INDEX_52">
            <DESCRIPTION>052_Fc425-525MHz_2GFSK_loPPM_96.0kbps_BW245kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="53" name="CONFIG_INDEX_53">
            <DESCRIPTION>053_Fc425-525MHz_2GFSK_loPPM_100.0kbps_BW245kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="54" name="CONFIG_INDEX_54">
            <DESCRIPTION>054_Fc425-525MHz_2GFSK_loPPM_128.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="55" name="CONFIG_INDEX_55">
            <DESCRIPTION>055_Fc425-525MHz_2GFSK_hiPPM_2.4kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="56" name="CONFIG_INDEX_56">
            <DESCRIPTION>056_Fc425-525MHz_2GFSK_hiPPM_4.8kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="57" name="CONFIG_INDEX_57">
            <DESCRIPTION>057_Fc425-525MHz_2GFSK_hiPPM_5.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="58" name="CONFIG_INDEX_58">
            <DESCRIPTION>058_Fc425-525MHz_2GFSK_hiPPM_9.6kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="59" name="CONFIG_INDEX_59">
            <DESCRIPTION>059_Fc425-525MHz_2GFSK_hiPPM_10.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="60" name="CONFIG_INDEX_60">
            <DESCRIPTION>060_Fc425-525MHz_2GFSK_hiPPM_15.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="61" name="CONFIG_INDEX_61">
            <DESCRIPTION>061_Fc425-525MHz_2GFSK_hiPPM_19.2kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="62" name="CONFIG_INDEX_62">
            <DESCRIPTION>062_Fc425-525MHz_2GFSK_hiPPM_20.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="63" name="CONFIG_INDEX_63">
            <DESCRIPTION>063_Fc425-525MHz_2GFSK_hiPPM_38.4kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="64" name="CONFIG_INDEX_64">
            <DESCRIPTION>064_Fc425-525MHz_2GFSK_hiPPM_40.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="65" name="CONFIG_INDEX_65">
            <DESCRIPTION>065_Fc425-525MHz_2GFSK_hiPPM_50.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="66" name="CONFIG_INDEX_66">
            <DESCRIPTION>066_Fc425-525MHz_2GFSK_hiPPM_96.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="67" name="CONFIG_INDEX_67">
            <DESCRIPTION>067_Fc425-525MHz_2GFSK_hiPPM_100.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="68" name="CONFIG_INDEX_68">
            <DESCRIPTION>068_Fc425-525MHz_2GFSK_hiPPM_128.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="69" name="CONFIG_INDEX_69">
            <DESCRIPTION>069_Fc425-525MHz_OOK_0.5kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="70" name="CONFIG_INDEX_70">
            <DESCRIPTION>070_Fc425-525MHz_OOK_1.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="71" name="CONFIG_INDEX_71">
            <DESCRIPTION>071_Fc425-525MHz_OOK_2.4kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="72" name="CONFIG_INDEX_72">
            <DESCRIPTION>072_Fc425-525MHz_OOK_4.8kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="73" name="CONFIG_INDEX_73">
            <DESCRIPTION>073_Fc425-525MHz_OOK_5.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="74" name="CONFIG_INDEX_74">
            <DESCRIPTION>074_Fc425-525MHz_OOK_9.6kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="75" name="CONFIG_INDEX_75">
            <DESCRIPTION>075_Fc425-525MHz_OOK_10.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="76" name="CONFIG_INDEX_76">
            <DESCRIPTION>076_Fc425-525MHz_OOK_15.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="77" name="CONFIG_INDEX_77">
            <DESCRIPTION>077_Fc425-525MHz_OOK_19.2kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="78" name="CONFIG_INDEX_78">
            <DESCRIPTION>078_Fc425-525MHz_OOK_20.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="79" name="CONFIG_INDEX_79">
            <DESCRIPTION>079_Fc425-525MHz_OOK_38.4kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="80" name="CONFIG_INDEX_80">
            <DESCRIPTION>080_Fc425-525MHz_OOK_40.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="81" name="CONFIG_INDEX_81">
            <DESCRIPTION>081_Fc850-950MHz_2GFSK_loPPM_2.4kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="82" name="CONFIG_INDEX_82">
            <DESCRIPTION>082_Fc850-950MHz_2GFSK_loPPM_4.8kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="83" name="CONFIG_INDEX_83">
            <DESCRIPTION>083_Fc850-950MHz_2GFSK_loPPM_5.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="84" name="CONFIG_INDEX_84">
            <DESCRIPTION>084_Fc850-950MHz_2GFSK_loPPM_9.6kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="85" name="CONFIG_INDEX_85">
            <DESCRIPTION>085_Fc850-950MHz_2GFSK_loPPM_10.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="86" name="CONFIG_INDEX_86">
            <DESCRIPTION>086_Fc850-950MHz_2GFSK_loPPM_15.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="87" name="CONFIG_INDEX_87">
            <DESCRIPTION>087_Fc850-950MHz_2GFSK_loPPM_19.2kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="88" name="CONFIG_INDEX_88">
            <DESCRIPTION>088_Fc850-950MHz_2GFSK_loPPM_20.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="89" name="CONFIG_INDEX_89">
            <DESCRIPTION>089_Fc850-950MHz_2GFSK_loPPM_38.4kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="90" name="CONFIG_INDEX_90">
            <DESCRIPTION>090_Fc850-950MHz_2GFSK_loPPM_40.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="91" name="CONFIG_INDEX_91">
            <DESCRIPTION>091_Fc850-950MHz_2GFSK_loPPM_50.0kbps_BW185kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="92" name="CONFIG_INDEX_92">
            <DESCRIPTION>092_Fc850-950MHz_2GFSK_loPPM_96.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="93" name="CONFIG_INDEX_93">
            <DESCRIPTION>093_Fc850-950MHz_2GFSK_loPPM_100.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="94" name="CONFIG_INDEX_94">
            <DESCRIPTION>094_Fc850-950MHz_2GFSK_loPPM_128.0kbps_BW305kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="95" name="CONFIG_INDEX_95">
            <DESCRIPTION>095_Fc850-950MHz_2GFSK_hiPPM_2.4kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="96" name="CONFIG_INDEX_96">
            <DESCRIPTION>096_Fc850-950MHz_2GFSK_hiPPM_4.8kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="97" name="CONFIG_INDEX_97">
            <DESCRIPTION>097_Fc850-950MHz_2GFSK_hiPPM_5.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="98" name="CONFIG_INDEX_98">
            <DESCRIPTION>098_Fc850-950MHz_2GFSK_hiPPM_9.6kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="99" name="CONFIG_INDEX_99">
            <DESCRIPTION>099_Fc850-950MHz_2GFSK_hiPPM_10.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="100" name="CONFIG_INDEX_100">
            <DESCRIPTION>100_Fc850-950MHz_2GFSK_hiPPM_15.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="101" name="CONFIG_INDEX_101">
            <DESCRIPTION>101_Fc850-950MHz_2GFSK_hiPPM_19.2kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="102" name="CONFIG_INDEX_102">
            <DESCRIPTION>102_Fc850-950MHz_2GFSK_hiPPM_20.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="103" name="CONFIG_INDEX_103">
            <DESCRIPTION>103_Fc850-950MHz_2GFSK_hiPPM_38.4kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="104" name="CONFIG_INDEX_104">
            <DESCRIPTION>104_Fc850-950MHz_2GFSK_hiPPM_40.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="105" name="CONFIG_INDEX_105">
            <DESCRIPTION>105_Fc850-950MHz_2GFSK_hiPPM_50.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="106" name="CONFIG_INDEX_106">
            <DESCRIPTION>106_Fc850-950MHz_2GFSK_hiPPM_96.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="107" name="CONFIG_INDEX_107">
            <DESCRIPTION>107_Fc850-950MHz_2GFSK_hiPPM_100.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="108" name="CONFIG_INDEX_108">
            <DESCRIPTION>108_Fc850-950MHz_2GFSK_hiPPM_128.0kbps_BW593kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="109" name="CONFIG_INDEX_109">
            <DESCRIPTION>109_Fc850-950MHz_OOK_0.5kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="110" name="CONFIG_INDEX_110">
            <DESCRIPTION>110_Fc850-950MHz_OOK_1.0kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="111" name="CONFIG_INDEX_111">
            <DESCRIPTION>111_Fc850-950MHz_OOK_2.4kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="112" name="CONFIG_INDEX_112">
            <DESCRIPTION>112_Fc850-950MHz_OOK_4.8kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="113" name="CONFIG_INDEX_113">
            <DESCRIPTION>113_Fc850-950MHz_OOK_5.0kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="114" name="CONFIG_INDEX_114">
            <DESCRIPTION>114_Fc850-950MHz_OOK_9.6kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="115" name="CONFIG_INDEX_115">
            <DESCRIPTION>115_Fc850-950MHz_OOK_10.0kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="116" name="CONFIG_INDEX_116">
            <DESCRIPTION>116_Fc850-950MHz_OOK_15.0kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="117" name="CONFIG_INDEX_117">
            <DESCRIPTION>117_Fc850-950MHz_OOK_19.2kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="118" name="CONFIG_INDEX_118">
            <DESCRIPTION>118_Fc850-950MHz_OOK_20.0kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="119" name="CONFIG_INDEX_119">
            <DESCRIPTION>119_Fc850-950MHz_OOK_38.4kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="120" name="CONFIG_INDEX_120">
            <DESCRIPTION>120_Fc850-950MHz_OOK_40.0kbps_BW370kHz</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="PKT" value="9218" default="0x00" internal="1" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>REMOVED as of fw_3_0_9 Used to be: EZ config packet configure.</SUMMARY>
      <DESCRIPTION>This property selects packet configuration options.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <BYTE>
        <FIELD name="CRC_ENABLE" lsb="0" size="1">
          <DESCRIPTION>Selects whether to use CRC for transmit or recieive.</DESCRIPTION>
          <ENUMERATION value="0" name="DISABLE">
            <DESCRIPTION>DISABLE - CRC will not be automatically transmitted, and will not be checked on receive.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="1" name="ENABLE">
            <DESCRIPTION>ENABLE - CRC will be appended to the end of the transmitted packet and will be checked on receive.  If a CRC error occurs the CRC .</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="XO_TUNE" value="9219" default="0x40" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>Configure crystal oscillator frequency tuning bank.</SUMMARY>
      <DESCRIPTION>Crystal oscillator frequency tuning value.  0x00 is maximum frequency value and 0x7F is lowest frequency value. Each LSB code corresponds to a 70 fF capacitance change. The total adjustment range assuming a 30 MHz XTAL is +/-100ppm.</DESCRIPTION>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="127" />
      <BYTE>
        <FIELD name="TUNE_VALUE" lsb="0" size="7">
          <ENUMERATION value="0" name="FASTEST_FREQUENCY">
            <DESCRIPTION>Maximum frequency.</DESCRIPTION>
          </ENUMERATION>
          <ENUMERATION value="127" name="SLOWEST_FREQUENCY">
            <DESCRIPTION>Lowest frequency.</DESCRIPTION>
          </ENUMERATION>
        </FIELD>
      </BYTE>
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="SPARE0" value="9220" default="0x00" internal="1" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>For use in patches.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="127" />
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="SPARE1" value="9221" default="0x00" internal="1" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>For use in patches.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="127" />
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="SPARE2" value="9222" default="0x00" internal="1" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>For use in patches.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="127" />
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="SPARE3" value="9223" default="0x00" internal="1" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>For use in patches.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="127" />
    </PROPERTY>
    <PROPERTY group="EZCONFIG" name="SPARE4" value="9224" default="0x00" internal="1" feature="ezconfig_grp" dev="1" wip="0">
      <SUMMARY>For use in patches.</SUMMARY>
      <TARGETRELEASE>revB1B</TARGETRELEASE>
      <RANGE min="0" max="127" />
    </PROPERTY>
  </CHIP>
</API>